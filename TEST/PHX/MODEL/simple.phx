// -- FUNCTIONS

function GetDatabaseSimpleArray(
    )
{
    var statement = GetDatabaseStatement( 'select `Uuid`, `Bool`, `Int8`, `Uint8`, `Int16`, `Uint16`, `Int32`, `Uint32`, `Int64`, `Uint64`, `Float32`, `Float64`, `String`, `Name`, `Date`, `DateTime`, `Blob`, `Option`, `EnglishText`, `FrenchText`, `GermanText`, `LatinText`, `SpanishText` from `SIMPLE`' );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    var simple_array = [];

    while ( var simple = statement.fetchObject() )
    {
        simple.Int8 = ( int )( simple.Int8 );
        simple.Uint8 = ( int )( simple.Uint8 );
        simple.Int16 = ( int )( simple.Int16 );
        simple.Uint16 = ( int )( simple.Uint16 );
        simple.Int32 = ( int )( simple.Int32 );
        simple.Uint32 = ( int )( simple.Uint32 );
        simple.Int64 = ( int )( simple.Int64 );
        simple.Uint64 = ( int )( simple.Uint64 );
        simple.Float32 = ( float )( simple.Float32 );
        simple.Float64 = ( float )( simple.Float64 );
        simple.Blob = json_decode( simple.Blob );
        array_push( simple_array, simple );
    }

    return simple_array;
}

// ~~

function GetDatabaseSimpleByUuid(
    string uuid
    )
{
    var statement = GetDatabaseStatement( 'select `Uuid`, `Bool`, `Int8`, `Uint8`, `Int16`, `Uint16`, `Int32`, `Uint32`, `Int64`, `Uint64`, `Float32`, `Float64`, `String`, `Name`, `Date`, `DateTime`, `Blob`, `Option`, `EnglishText`, `FrenchText`, `GermanText`, `LatinText`, `SpanishText` from `SIMPLE` where `Uuid` = ? limit 1' );
    statement.bindParam( 1, uuid, PDO::PARAM_STR );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    var simple = statement.fetchObject();
    simple.Int8 = ( int )( simple.Int8 );
    simple.Uint8 = ( int )( simple.Uint8 );
    simple.Int16 = ( int )( simple.Int16 );
    simple.Uint16 = ( int )( simple.Uint16 );
    simple.Int32 = ( int )( simple.Int32 );
    simple.Uint32 = ( int )( simple.Uint32 );
    simple.Int64 = ( int )( simple.Int64 );
    simple.Uint64 = ( int )( simple.Uint64 );
    simple.Float32 = ( float )( simple.Float32 );
    simple.Float64 = ( float )( simple.Float64 );
    simple.Blob = json_decode( simple.Blob );

    return simple;
}

// ~~

function AddDatabaseSimple(
    string uuid,
    bool bool,
    int int_8,
    int uint_8,
    int int_16,
    int uint_16,
    int int_32,
    int uint_32,
    int int_64,
    int uint_64,
    float float_32,
    float float_64,
    string string,
    string name,
    string date,
    string date_time,
    string blob,
    string option,
    string english_text,
    string french_text,
    string german_text,
    string latin_text,
    string spanish_text
    )
{
    var statement = GetDatabaseStatement( 'insert into `SIMPLE` ( `Uuid`, `Bool`, `Int8`, `Uint8`, `Int16`, `Uint16`, `Int32`, `Uint32`, `Int64`, `Uint64`, `Float32`, `Float64`, `String`, `Name`, `Date`, `DateTime`, `Blob`, `Option`, `EnglishText`, `FrenchText`, `GermanText`, `LatinText`, `SpanishText` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' );
    statement.bindParam( 1, uuid, PDO::PARAM_STR );
    statement.bindParam( 2, bool, PDO::PARAM_BOOL );
    statement.bindParam( 3, int_8, PDO::PARAM_INT );
    statement.bindParam( 4, uint_8, PDO::PARAM_INT );
    statement.bindParam( 5, int_16, PDO::PARAM_INT );
    statement.bindParam( 6, uint_16, PDO::PARAM_INT );
    statement.bindParam( 7, int_32, PDO::PARAM_INT );
    statement.bindParam( 8, uint_32, PDO::PARAM_INT );
    statement.bindParam( 9, int_64, PDO::PARAM_INT );
    statement.bindParam( 10, uint_64, PDO::PARAM_INT );
    statement.bindParam( 11, float_32, PDO::PARAM_STR );
    statement.bindParam( 12, float_64, PDO::PARAM_STR );
    statement.bindParam( 13, string, PDO::PARAM_STR );
    statement.bindParam( 14, name, PDO::PARAM_STR );
    statement.bindParam( 15, date, PDO::PARAM_STR );
    statement.bindParam( 16, date_time, PDO::PARAM_STR );
    blob = json_encode( blob );
    statement.bindParam( 17, blob, PDO::PARAM_STR );
    statement.bindParam( 18, option, PDO::PARAM_STR );
    statement.bindParam( 19, english_text, PDO::PARAM_STR );
    statement.bindParam( 20, french_text, PDO::PARAM_STR );
    statement.bindParam( 21, german_text, PDO::PARAM_STR );
    statement.bindParam( 22, latin_text, PDO::PARAM_STR );
    statement.bindParam( 23, spanish_text, PDO::PARAM_STR );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    return GetDatabaseAddedId( statement );
}

// ~~

function PutDatabaseSimple(
    string uuid,
    bool bool,
    int int_8,
    int uint_8,
    int int_16,
    int uint_16,
    int int_32,
    int uint_32,
    int int_64,
    int uint_64,
    float float_32,
    float float_64,
    string string,
    string name,
    string date,
    string date_time,
    string blob,
    string option,
    string english_text,
    string french_text,
    string german_text,
    string latin_text,
    string spanish_text
    )
{
    var statement = GetDatabaseStatement( 'replace into `SIMPLE` ( `Uuid`, `Bool`, `Int8`, `Uint8`, `Int16`, `Uint16`, `Int32`, `Uint32`, `Int64`, `Uint64`, `Float32`, `Float64`, `String`, `Name`, `Date`, `DateTime`, `Blob`, `Option`, `EnglishText`, `FrenchText`, `GermanText`, `LatinText`, `SpanishText` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' );
    statement.bindParam( 1, uuid, PDO::PARAM_STR );
    statement.bindParam( 2, bool, PDO::PARAM_BOOL );
    statement.bindParam( 3, int_8, PDO::PARAM_INT );
    statement.bindParam( 4, uint_8, PDO::PARAM_INT );
    statement.bindParam( 5, int_16, PDO::PARAM_INT );
    statement.bindParam( 6, uint_16, PDO::PARAM_INT );
    statement.bindParam( 7, int_32, PDO::PARAM_INT );
    statement.bindParam( 8, uint_32, PDO::PARAM_INT );
    statement.bindParam( 9, int_64, PDO::PARAM_INT );
    statement.bindParam( 10, uint_64, PDO::PARAM_INT );
    statement.bindParam( 11, float_32, PDO::PARAM_STR );
    statement.bindParam( 12, float_64, PDO::PARAM_STR );
    statement.bindParam( 13, string, PDO::PARAM_STR );
    statement.bindParam( 14, name, PDO::PARAM_STR );
    statement.bindParam( 15, date, PDO::PARAM_STR );
    statement.bindParam( 16, date_time, PDO::PARAM_STR );
    blob = json_encode( blob );
    statement.bindParam( 17, blob, PDO::PARAM_STR );
    statement.bindParam( 18, option, PDO::PARAM_STR );
    statement.bindParam( 19, english_text, PDO::PARAM_STR );
    statement.bindParam( 20, french_text, PDO::PARAM_STR );
    statement.bindParam( 21, german_text, PDO::PARAM_STR );
    statement.bindParam( 22, latin_text, PDO::PARAM_STR );
    statement.bindParam( 23, spanish_text, PDO::PARAM_STR );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    return GetDatabaseAddedId( statement );
}

// ~~

function SetDatabaseSimple(
    string uuid,
    bool bool,
    int int_8,
    int uint_8,
    int int_16,
    int uint_16,
    int int_32,
    int uint_32,
    int int_64,
    int uint_64,
    float float_32,
    float float_64,
    string string,
    string name,
    string date,
    string date_time,
    string blob,
    string option,
    string english_text,
    string french_text,
    string german_text,
    string latin_text,
    string spanish_text
    )
{
    var statement = GetDatabaseStatement( 'update `SIMPLE` set `Bool` = ?, `Int8` = ?, `Uint8` = ?, `Int16` = ?, `Uint16` = ?, `Int32` = ?, `Uint32` = ?, `Int64` = ?, `Uint64` = ?, `Float32` = ?, `Float64` = ?, `String` = ?, `Name` = ?, `Date` = ?, `DateTime` = ?, `Blob` = ?, `Option` = ?, `EnglishText` = ?, `FrenchText` = ?, `GermanText` = ?, `LatinText` = ?, `SpanishText` = ? where Uuid = ?' );
    statement.bindParam( 1, bool, PDO::PARAM_BOOL );
    statement.bindParam( 2, int_8, PDO::PARAM_INT );
    statement.bindParam( 3, uint_8, PDO::PARAM_INT );
    statement.bindParam( 4, int_16, PDO::PARAM_INT );
    statement.bindParam( 5, uint_16, PDO::PARAM_INT );
    statement.bindParam( 6, int_32, PDO::PARAM_INT );
    statement.bindParam( 7, uint_32, PDO::PARAM_INT );
    statement.bindParam( 8, int_64, PDO::PARAM_INT );
    statement.bindParam( 9, uint_64, PDO::PARAM_INT );
    statement.bindParam( 10, float_32, PDO::PARAM_STR );
    statement.bindParam( 11, float_64, PDO::PARAM_STR );
    statement.bindParam( 12, string, PDO::PARAM_STR );
    statement.bindParam( 13, name, PDO::PARAM_STR );
    statement.bindParam( 14, date, PDO::PARAM_STR );
    statement.bindParam( 15, date_time, PDO::PARAM_STR );
    blob = json_encode( blob );
    statement.bindParam( 16, blob, PDO::PARAM_STR );
    statement.bindParam( 17, option, PDO::PARAM_STR );
    statement.bindParam( 18, english_text, PDO::PARAM_STR );
    statement.bindParam( 19, french_text, PDO::PARAM_STR );
    statement.bindParam( 20, german_text, PDO::PARAM_STR );
    statement.bindParam( 21, latin_text, PDO::PARAM_STR );
    statement.bindParam( 22, spanish_text, PDO::PARAM_STR );
    statement.bindParam( 23, uuid, PDO::PARAM_STR );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }
}

// ~~

function RemoveDatabaseSimpleByUuid(
    string uuid
    )
{
    var statement = GetDatabaseStatement( 'delete from `SIMPLE` where `Uuid` = ?' );
    statement.bindParam( 1, uuid, PDO::PARAM_STR );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }
}
