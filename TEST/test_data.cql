insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 83893748-2201-4491-7318-788068924172, true, 1, 77, 202, 568, 818, 3, 349, 594, 54.41, 89.95, 'Ersesty', '2002-05-24', '2009-04-25 12:49:56', 0x53892900006900696981 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 95735105-8744-6882-1916-014525602795, true, 78, 20, 176, 102, 523, 649, 200, 776, 67.64, 63.12, 'Estcalborum', '2008-08-19', '2013-02-28 17:42:56', 0x80318790407718630721 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 23172719-2321-1103-4467-341610964597, false, 57, 38, 665, 256, 234, 612, 957, 708, 92.95, 30.03, 'Olliciq', '2013-10-04', '2009-01-06 09:38:55', 0x33728992690977033954 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 57443509-6441-2540-6890-688394092460, false, 85, 43, 334, 890, 860, 295, 556, 141, 93.55, 47.41, 'Uenseicheh', '2010-06-15', '2014-06-22 05:32:46', 0x29575933264226567681 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 74275850-6482-9919-9681-519070310919, true, 38, 41, 592, 516, 365, 982, 307, 701, 85.23, 58.19, 'Odamelesa', '2014-09-04', '2005-09-16 17:06:57', 0x50229789530171293134 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 16103407-6023-3526-3854-916041568992, true, 46, 94, 89, 683, 256, 42, 589, 455, 98.81, 69.77, 'Avaraisid', '2008-07-18', '2005-12-03 01:01:16', 0x44636172096066660088 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 09405158-2933-8301-8418-168544927056, false, 13, 72, 940, 640, 351, 173, 51, 407, 39.74, 48.65, 'Atischnup', '2006-06-06', '2003-07-19 06:10:49', 0x03546897928380323762 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 88021100-4067-1271-6523-423500092263, false, 65, 60, 124, 210, 91, 948, 336, 385, 11.78, 77.84, 'Iksesoghton', '2004-10-23', '2008-09-27 12:21:28', 0x41410510511432858929 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 61477479-9746-9144-6906-937401443040, false, 38, 67, 891, 860, 519, 561, 969, 890, 62.78, 58.7, 'Omlinciggle', '2008-09-20', '2008-10-06 09:58:21', 0x27845857441271146022 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 04536042-5906-7625-5406-083073498433, false, 67, 49, 313, 401, 721, 392, 915, 592, 66.13, 52.11, 'Rinulru', '2003-09-18', '2002-01-05 09:52:44', 0x37943388236668178369 );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 1, 'SOUTH KOREA', ( 'Herb', 'Kuivinen' ), { ( 'Pier', 'Leavitt' ), ( 'Aruna', 'Twiss' ) }, [ '+38 854 343 427', '+92 653 114 870' ], { 'vi.descoteaux@hotmail.com', 'selinda.seay@gmail.com' }, { '+54 825 529 832' : 'Petrie Market', '+75 437 542 571' : 'Demarco Center' }, '2008-09-20', { ( 'Jilly', 'Panton' ) : '2003-09-18', ( 'Elsie', 'Barrett' ) : '2014-09-04' }, { '2003-09-18', '2008-08-19' }, [ '2008-09-20', '2010-06-15' ], { '2002-05-24' : { ( 'Radio', 'Smrke' ), ( 'Fern', 'Loudiadis' ) }, '2003-09-18' : { ( 'Charo', 'Furst' ), ( 'Pamella', 'Felli' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 2, 'HOLY SEE', ( 'Chabert', 'Karp' ), { ( 'My', 'Whidden' ), ( 'Morley', 'Gentzler' ) }, [ '+73 972 582 167', '+84 659 472 205' ], { 'avaz.boggia@live.com', 'kapsch.homayoun@gmail.com' }, { '+64 997 871 678' : 'Kranenburg Associates', '+92 750 355 580' : 'Schultz Vision' }, '2013-10-04', { ( 'Cosola', 'Gaiger' ) : '2008-09-20', ( 'Jilly', 'Panton' ) : '2002-05-24' }, { '2010-06-15', '2004-10-23' }, [ '2008-07-18' ], { '2003-09-18' : { ( 'Pier', 'Leavitt' ), ( 'Aruna', 'Twiss' ) }, '2010-06-15' : { ( 'Jaffer', 'Peter' ), ( 'Lynette', 'Pao' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 3, 'UGANDA', ( 'Cosola', 'Gaiger' ), { ( 'Arlyn', 'Barker' ), ( 'Caritta', 'Amavisca' ) }, [ '+85 515 394 437', '+60 634 913 933' ], { 'shabbir.soong@mail.com', 'roque.pulcher@live.com' }, { '+94 622 308 103' : 'Jachym Trust', '+34 986 496 995' : 'Shearer Store' }, '2008-09-20', { ( 'Cosola', 'Gaiger' ) : '2008-09-20', ( 'Chabert', 'Karp' ) : '2008-09-20' }, { '2014-09-04', '2008-07-18' }, [ '2010-06-15', '2010-06-15', '2014-09-04' ], { '2002-05-24' : { ( 'Toshinari', 'Quizmaster' ), ( 'Mal', 'Tookey' ) }, '2003-09-18' : { ( 'Jaffer', 'Peter' ), ( 'Lynette', 'Pao' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 4, 'GUYANA', ( 'Elsie', 'Barrett' ), { ( 'Jaffer', 'Peter' ), ( 'Lynette', 'Pao' ) }, [ '+94 369 116 107', '+93 770 374 246' ], { 'zhanna.jawanda@outlook.com', 'lex.rickard@yahoo.com' }, { '+82 287 997 233' : 'Conoly Company', '+75 569 804 848' : 'Konomis Logic' }, '2006-06-06', { ( 'Jami', 'Robins' ) : '2008-07-18', ( 'Cosola', 'Gaiger' ) : '2008-09-20' }, { '2008-07-18', '2014-09-04' }, [ '2008-07-18' ], { '2003-09-18' : { ( 'Charo', 'Furst' ), ( 'Pamella', 'Felli' ) }, '2008-08-19' : { ( 'Arlyn', 'Barker' ), ( 'Caritta', 'Amavisca' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 5, 'GAMBIA', ( 'Teddi', 'Phillips' ), { ( 'Toshinari', 'Quizmaster' ), ( 'Mal', 'Tookey' ) }, [ '+61 435 979 328', '+29 232 253 916' ], { 'severin.flatley@outlook.com', 'kin.bushnik@hotmail.com' }, { '+62 707 418 195' : 'Dowser Limited', '+92 250 164 155' : 'Hartkopf Logic' }, '2013-10-04', { ( 'Jami', 'Robins' ) : '2003-09-18', ( 'Teddi', 'Phillips' ) : '2003-09-18' }, { '2008-07-18', '2004-10-23' }, [ '2003-09-18', '2008-09-20' ], { '2002-05-24' : { ( 'Radio', 'Smrke' ), ( 'Fern', 'Loudiadis' ) }, '2003-09-18' : { ( 'Pierrette', 'Borsato' ), ( 'Cher', 'Maynes' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 6, 'RUSSIA', ( 'Rosita', 'Lillis' ), { ( 'Wayne', 'Roesler' ), ( 'Dori', 'Stiglitz' ) }, [ '+82 373 878 761', '+31 994 315 761' ], { 'jewel.messer@yahoo.com', 'kas.bayola@outlook.com' }, { '+77 902 772 595' : 'Croom Central', '+58 675 850 426' : 'Fernando Security' }, '2008-09-20', { ( 'Herb', 'Kuivinen' ) : '2006-06-06', ( 'Rosita', 'Lillis' ) : '2013-10-04' }, { '2008-08-19', '2013-10-04' }, [ '2004-10-23', '2010-06-15' ], { '2004-10-23' : { ( 'Toshinari', 'Quizmaster' ), ( 'Mal', 'Tookey' ) }, '2002-05-24' : { ( 'Jaffer', 'Peter' ), ( 'Lynette', 'Pao' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 7, 'GREECE', ( 'Jami', 'Robins' ), { ( 'Charo', 'Furst' ), ( 'Pamella', 'Felli' ) }, [ '+15 268 338 844', '+20 328 921 492' ], { 'pavla.discenza@outlook.com', 'natasha.mesquita@hotmail.com' }, { '+83 337 925 647' : 'Vivier Studio', '+34 765 394 215' : 'Busch Corporation' }, '2014-09-04', { ( 'Elsie', 'Barrett' ) : '2006-06-06', ( 'Herb', 'Kuivinen' ) : '2014-09-04' }, { '2013-10-04', '2006-06-06' }, [ '2010-06-15' ], { '2002-05-24' : { ( 'Pier', 'Leavitt' ), ( 'Aruna', 'Twiss' ) }, '2006-06-06' : { ( 'My', 'Whidden' ), ( 'Morley', 'Gentzler' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 8, 'MACAU', ( 'Jilly', 'Panton' ), { ( 'Radio', 'Smrke' ), ( 'Fern', 'Loudiadis' ) }, [ '+47 796 143 562', '+68 631 701 586' ], { 'luz.dourley@hotmail.com', 'pritchard.deane@hotmail.com' }, { '+31 607 347 522' : 'Eggersgluess Media', '+31 404 309 623' : 'Bayley College' }, '2004-10-23', { ( 'Chabert', 'Karp' ) : '2006-06-06', ( 'Elsie', 'Barrett' ) : '2006-06-06' }, { '2002-05-24', '2010-06-15' }, [ '2013-10-04' ], { '2004-10-23' : { ( 'Charo', 'Furst' ), ( 'Pamella', 'Felli' ) }, '2014-09-04' : { ( 'Jaffer', 'Peter' ), ( 'Lynette', 'Pao' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 9, 'LIBERIA', ( 'Petronella', 'Olsheski' ), { ( 'Liviu', 'Cauthers' ), ( 'Cheslie', 'Adey' ) }, [ '+70 429 495 442', '+95 173 803 195' ], { 'ardelis.hann@outlook.com', 'noell.dorsey@mail.com' }, { '+68 122 599 125' : 'Godish Corporation', '+39 388 566 805' : 'Wesselow Point' }, '2008-09-20', { ( 'Herb', 'Kuivinen' ) : '2006-06-06', ( 'Donelle', 'Jatar' ) : '2014-09-04' }, { '2006-06-06', '2008-09-20' }, [ '2003-09-18' ], { '2008-09-20' : { ( 'Pier', 'Leavitt' ), ( 'Aruna', 'Twiss' ) }, '2008-07-18' : { ( 'Arlyn', 'Barker' ), ( 'Caritta', 'Amavisca' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 10, 'NAMIBIA', ( 'Donelle', 'Jatar' ), { ( 'Pierrette', 'Borsato' ), ( 'Cher', 'Maynes' ) }, [ '+37 107 134 701', '+20 706 992 272' ], { 'myrthille.todorovic@mail.com', 'lulu.pattison@outlook.com' }, { '+77 740 787 736' : 'Boone Association', '+15 424 910 233' : 'Rourk Software' }, '2008-09-20', { ( 'Teddi', 'Phillips' ) : '2014-09-04', ( 'Elsie', 'Barrett' ) : '2003-09-18' }, { '2014-09-04', '2002-05-24' }, [ '2010-06-15' ], { '2014-09-04' : { ( 'Pierrette', 'Borsato' ), ( 'Cher', 'Maynes' ) }, '2004-10-23' : { ( 'Toshinari', 'Quizmaster' ), ( 'Mal', 'Tookey' ) } } );
insert into TEST.VALUE ( Uuid, Name, Integer, Text ) values ( fabaf67d-3ac4-5ad1-bc7b-c9cf38b287d4, 'first', 1, ' This is the first text, with spaces ' );
insert into TEST.VALUE ( Uuid, Name, Integer, Text ) values ( eaefcfa5-fa63-5fdd-af44-4deb14559f44, 'second', 2, 'This is the second text, with escaped characters ^~' );
insert into TEST.VALUE ( Uuid, Name, Integer, Text ) values ( 6119e70c-7072-5286-badc-eac76b8bb5bb, 'third', 3, 'This is the third text§with a new line' );
insert into TEST.DATA ( Uuid, ValueUuid ) values ( 29192148-2622-0162-1929-836363586647, fabaf67d-3ac4-5ad1-bc7b-c9cf38b287d4 );
insert into TEST.DATA ( Uuid, ValueUuid ) values ( 67800818-6085-3159-0804-173574649918, eaefcfa5-fa63-5fdd-af44-4deb14559f44 );
insert into TEST.DATA ( Uuid, ValueUuid ) values ( 53535847-9177-1691-8736-413907389151, 6119e70c-7072-5286-badc-eac76b8bb5bb );
