insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 48969135-6275-0112-8398-442953817286, false, 81, 90, 924, 332, 110, 367, 916, 793, 34.28, 52.01, 'Babettester', '2006-11-27', '2013-10-02 16:49:08', 0x24914800687906055651 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 81796456-2864-7063-0443-309783617053, true, 26, 81, 576, 48, 331, 261, 691, 939, 54.76, 76.25, 'Andempostero', '2001-02-18', '2000-10-05 10:18:16', 0x98893721079868769459 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 56439942-1344-9600-4074-473208499144, false, 1, 8, 512, 403, 67, 58, 95, 912, 87.18, 39.94, 'Elitagap', '2014-02-26', '2012-01-14 03:52:47', 0x02986846581034911050 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 34809908-0438-8902-8733-192156370328, true, 13, 62, 529, 127, 777, 256, 680, 267, 54.31, 46.84, 'Ingtacej', '2002-04-04', '2012-10-24 21:48:50', 0x47130057742084318294 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 74889168-2946-1189-9597-025214324130, false, 27, 87, 462, 310, 561, 145, 51, 180, 68.38, 92.8, 'Devottsickau', '2011-11-27', '2003-12-19 07:43:30', 0x69899823871012901019 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 70644014-7730-9158-3337-000015858622, false, 23, 69, 14, 972, 7, 858, 814, 156, 35.91, 17.2, 'Annerehuly', '2005-02-06', '2003-04-01 23:35:30', 0x40777303883078181401 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 61760654-0288-3033-4413-032883808321, false, 1, 20, 906, 949, 866, 103, 546, 26, 26.6, 70.12, 'Recatte', '2006-09-18', '2003-07-10 08:31:53', 0x99888066501836320728 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 74041665-1046-4972-2361-284682799828, false, 5, 84, 295, 490, 207, 978, 506, 827, 43.31, 74.46, 'Johablewaro', '2005-09-07', '2003-05-06 01:36:06', 0x55154649912809608081 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 53679161-7209-3947-4004-056045769797, true, 20, 29, 54, 951, 986, 310, 551, 337, 49.12, 51.34, 'Awkecreme', '2008-12-25', '2002-05-05 10:41:53', 0x37187327308618790021 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 96262583-8309-8113-8794-606894229399, false, 1, 66, 331, 145, 484, 698, 857, 654, 33.75, 45.34, 'Arvinrikoheq', '2004-01-16', '2015-01-05 11:29:57', 0x37073916216027702711 );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 1, 'BOSNIA', ( 'Jess', 'Kaczmarska' ), { ( 'Ingaborg', 'Rudzinski' ), ( 'Ameline', 'Shtulman' ) }, [ '+24 593 665 791', '+98 967 560 550' ], { 'shiroshi.duquette@mail.com', 'juanita.daunais@gmail.com' }, { '+69 407 522 740' : 'Jablonski Media', '+17 457 376 421' : 'Tardif Bank' }, '2005-02-06', { ( 'Laure', 'Reichow' ) : '2001-02-18', ( 'Krystyna', 'Ishak' ) : '2014-02-26' }, { '2002-04-04', '2006-11-27' }, [ '2005-09-07', '2008-12-25' ], { '2014-02-26' : { ( 'Faizal', 'Ruckman' ), ( 'Meriline', 'Napke' ) }, '2006-11-27' : { ( 'Jinyun', 'Vanneste' ), ( 'Luella', 'Emerson' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 2, 'AUSTRALIA', ( 'Pinecrest', 'Nicosia' ), { ( 'Jodie', 'Joyce' ), ( 'Cristabel', 'Ronaldson' ) }, [ '+51 224 433 135', '+92 139 254 985' ], { 'dyke.rossignol@outlook.com', 'iwan.pilch@live.com' }, { '+76 212 333 256' : 'Mirek Tech', '+54 884 370 871' : 'Traugott Logic' }, '2005-09-07', { ( 'Laure', 'Reichow' ) : '2002-04-04', ( 'Darelle', 'Bohannon' ) : '2005-02-06' }, { '2005-02-06', '2004-01-16' }, [ '2005-09-07', '2008-12-25', '2002-04-04' ], { '2004-01-16' : { ( 'Faizal', 'Ruckman' ), ( 'Meriline', 'Napke' ) }, '2014-02-26' : { ( 'Pankaj', 'Koolwine' ), ( 'Kee', 'Sandrock' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 3, 'RUSSIA', ( 'Molli', 'Smelters' ), { ( 'Pankaj', 'Koolwine' ), ( 'Kee', 'Sandrock' ) }, [ '+44 422 635 913', '+11 264 226 616' ], { 'kaz.chacko@outlook.com', 'flossi.majek@mail.com' }, { '+97 903 859 983' : 'Hampshire University', '+27 104 365 123' : 'Balogh Magazine' }, '2001-02-18', { ( 'Molli', 'Smelters' ) : '2005-02-06', ( 'Laure', 'Reichow' ) : '2008-12-25' }, { '2005-09-07', '2008-12-25' }, [ '2008-12-25', '2014-02-26', '2005-02-06' ], { '2006-09-18' : { ( 'Jodie', 'Joyce' ), ( 'Cristabel', 'Ronaldson' ) }, '2011-11-27' : { ( 'Ingaborg', 'Rudzinski' ), ( 'Ameline', 'Shtulman' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 4, 'PAPUA NEW GUINEA', ( 'Krystyna', 'Ishak' ), { ( 'Maudie', 'Bergstrom' ), ( 'Nikky', 'Blakeknox' ) }, [ '+44 414 905 823', '+32 868 474 935' ], { 'rosalinda.mahin@mail.com', 'rosamond.beauchemin@hotmail.com' }, { '+83 964 321 820' : 'Biggs Solutions', '+58 506 991 193' : 'Dhupar Cooperative' }, '2014-02-26', { ( 'Bahram', 'Deguire' ) : '2011-11-27', ( 'Lucinda', 'Regan' ) : '2005-09-07' }, { '2014-02-26', '2011-11-27' }, [ '2006-09-18', '2002-04-04', '2006-09-18' ], { '2004-01-16' : { ( 'Pankaj', 'Koolwine' ), ( 'Kee', 'Sandrock' ) }, '2001-02-18' : { ( 'Meggie', 'Klaudt' ), ( 'Luther', 'Bennefeld' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 5, 'MOROCCO', ( 'Betti', 'Rooney' ), { ( 'Tandy', 'Palik' ), ( 'Vi', 'Cusson' ) }, [ '+23 515 643 619', '+66 995 536 864' ], { 'neysa.escobido@outlook.com', 'ronalda.beun@live.com' }, { '+69 170 938 222' : 'Scissons Software', '+71 910 403 669' : 'Lawler Union' }, '2001-02-18', { ( 'Molli', 'Smelters' ) : '2008-12-25', ( 'Mysore', 'Carruthers' ) : '2006-09-18' }, { '2001-02-18', '2011-11-27' }, [ '2005-02-06' ], { '2014-02-26' : { ( 'Ingaborg', 'Rudzinski' ), ( 'Ameline', 'Shtulman' ) }, '2004-01-16' : { ( 'Maudie', 'Bergstrom' ), ( 'Nikky', 'Blakeknox' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 6, 'SWEDEN', ( 'Bahram', 'Deguire' ), { ( 'Melva', 'Paryag' ), ( 'Vinny', 'Grisoni' ) }, [ '+53 848 425 127', '+95 347 442 682' ], { 'serdar.doucet@gmail.com', 'buddy.mccaughey@yahoo.com' }, { '+93 928 919 959' : 'Healy Network', '+29 611 502 457' : 'Shinder Network' }, '2008-12-25', { ( 'Krystyna', 'Ishak' ) : '2005-09-07', ( 'Bahram', 'Deguire' ) : '2006-11-27' }, { '2014-02-26', '2005-02-06' }, [ '2002-04-04' ], { '2011-11-27' : { ( 'Maudie', 'Bergstrom' ), ( 'Nikky', 'Blakeknox' ) }, '2004-01-16' : { ( 'Tandy', 'Palik' ), ( 'Vi', 'Cusson' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 7, 'TOBAGO', ( 'Darelle', 'Bohannon' ), { ( 'Jinyun', 'Vanneste' ), ( 'Luella', 'Emerson' ) }, [ '+25 168 760 202', '+21 588 771 738' ], { 'karel.whiteman@live.com', 'eastreg.mcwhinney@mail.com' }, { '+49 560 892 822' : 'Danbrook Fashion', '+87 486 110 976' : 'Mcdade Insurance' }, '2004-01-16', { ( 'Molli', 'Smelters' ) : '2006-11-27', ( 'Jess', 'Kaczmarska' ) : '2001-02-18' }, { '2006-09-18', '2002-04-04' }, [ '2004-01-16', '2008-12-25', '2006-11-27' ], { '2011-11-27' : { ( 'Tandy', 'Palik' ), ( 'Vi', 'Cusson' ) }, '2001-02-18' : { ( 'Ingaborg', 'Rudzinski' ), ( 'Ameline', 'Shtulman' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 8, 'GEORGIA', ( 'Mysore', 'Carruthers' ), { ( 'Naresh', 'Mcdevitt' ), ( 'Benthem', 'Neywick' ) }, [ '+51 910 440 553', '+56 837 727 193' ], { 'lorinda.dai@outlook.com', 'gaetan.holliday@gmail.com' }, { '+87 377 743 506' : 'Tisdale Services', '+57 737 736 318' : 'Recabarren Store' }, '2005-02-06', { ( 'Darelle', 'Bohannon' ) : '2008-12-25', ( 'Molli', 'Smelters' ) : '2002-04-04' }, { '2006-11-27', '2011-11-27' }, [ '2005-09-07', '2008-12-25', '2005-02-06' ], { '2005-09-07' : { ( 'Faizal', 'Ruckman' ), ( 'Meriline', 'Napke' ) }, '2011-11-27' : { ( 'Maudie', 'Bergstrom' ), ( 'Nikky', 'Blakeknox' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 9, 'PRINCIPE', ( 'Laure', 'Reichow' ), { ( 'Faizal', 'Ruckman' ), ( 'Meriline', 'Napke' ) }, [ '+11 509 561 521', '+95 989 324 659' ], { 'warden.benham@mail.com', 'zitella.westfall@yahoo.com' }, { '+22 809 429 609' : 'Goudreau Online', '+18 387 755 326' : 'Piitz Club' }, '2014-02-26', { ( 'Laure', 'Reichow' ) : '2008-12-25', ( 'Jess', 'Kaczmarska' ) : '2002-04-04' }, { '2005-09-07', '2002-04-04' }, [ '2001-02-18' ], { '2014-02-26' : { ( 'Pankaj', 'Koolwine' ), ( 'Kee', 'Sandrock' ) }, '2004-01-16' : { ( 'Tandy', 'Palik' ), ( 'Vi', 'Cusson' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 10, 'BELGIUM', ( 'Lucinda', 'Regan' ), { ( 'Meggie', 'Klaudt' ), ( 'Luther', 'Bennefeld' ) }, [ '+91 995 591 393', '+59 325 459 771' ], { 'kyle.pevec@live.com', 'kalle.benski@gmail.com' }, { '+56 309 246 841' : 'Stasyszyn Depot', '+62 387 198 948' : 'Dickford Church' }, '2006-11-27', { ( 'Laure', 'Reichow' ) : '2005-09-07', ( 'Betti', 'Rooney' ) : '2006-11-27' }, { '2006-11-27', '2001-02-18' }, [ '2005-02-06', '2005-09-07' ], { '2001-02-18' : { ( 'Tandy', 'Palik' ), ( 'Vi', 'Cusson' ) }, '2002-04-04' : { ( 'Ingaborg', 'Rudzinski' ), ( 'Ameline', 'Shtulman' ) } } );
insert into TEST.VALUE ( Uuid, Name, Integer, Text ) values ( fabaf67d-3ac4-5ad1-bc7b-c9cf38b287d4, 'first', 1, ' This is the first text, with spaces ' );
insert into TEST.VALUE ( Uuid, Name, Integer, Text ) values ( eaefcfa5-fa63-5fdd-af44-4deb14559f44, 'second', 2, 'This is the second text, with escaped characters ^~' );
insert into TEST.VALUE ( Uuid, Name, Integer, Text ) values ( 6119e70c-7072-5286-badc-eac76b8bb5bb, 'third', 3, 'This is the third text§with a new line' );
insert into TEST.DATA ( Uuid, ValueUuid ) values ( 04461722-8223-3375-6213-094112566518, fabaf67d-3ac4-5ad1-bc7b-c9cf38b287d4 );
insert into TEST.DATA ( Uuid, ValueUuid ) values ( 19100500-4424-2604-7134-186281835130, eaefcfa5-fa63-5fdd-af44-4deb14559f44 );
insert into TEST.DATA ( Uuid, ValueUuid ) values ( 50743500-2084-0698-4100-650434859540, 6119e70c-7072-5286-badc-eac76b8bb5bb );
