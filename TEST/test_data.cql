insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 8dbdda48-fb87-48d6-746f-1965824e966a, false, 1, 2, 3, 4, 5, 6, 7, 8, 1.1, 2.2, 'Hello world!', 'Rupnow', '2001-02-03', '2001-02-03 04:05:06.789', 0x123456781234567891234567812345678 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 248ec075-4871-43cd-9105-20dcb48896c2, false, 87, 24, 636, 572, 267, 900, 861, 838, 97.29, 77.75, 'Loviddagrov', 'Rohan', '2009-09-26', '2012-05-14 20:38:09', 0x05c75c93a3af3e4047e9 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 6ef2a2e6-e2e9-4596-d1f1-a477a5ec25dc, true, 91, 61, 184, 612, 31, 767, 583, 597, 87.18, 19.57, 'Saxanivu', 'Ferrero', '2014-08-14', '2004-05-16 22:10:59', 0x33e6a77d87c40f72876b );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( b8a84a28-eb07-4154-a68e-01bee7e7f5af, true, 55, 80, 675, 412, 136, 261, 123, 151, 36.46, 13.88, 'Ingippiegsi', 'Oden', '2012-10-06', '2003-01-03 04:09:16', 0xfa8ba14f287a25b14da0 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 5b3bacdd-7bf7-4cb4-5a79-8f65c46aa2e2, false, 59, 19, 850, 36, 618, 890, 921, 332, 17.84, 13.28, 'Riowoni', 'Shireman', '2007-12-12', '2014-07-06 04:11:09', 0x89ba0fab48bc4ee1db3d );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 73484119-08ce-4d5e-fac4-24bc69ee725a, true, 98, 45, 838, 447, 118, 823, 963, 369, 42.67, 75.47, 'Oschareq', 'Ghantous', '2004-10-15', '2009-02-01 23:22:30', 0x4191e3c84f270d6c7428 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 9cc498aa-7de6-426f-64ac-06999d7f1c1a, false, 9, 65, 5, 360, 604, 645, 177, 951, 22.8, 89.2, 'Leteecyhu', 'Malec', '2001-06-24', '2002-01-12 02:04:54', 0x43d7ebf87ced526f5fb6 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 4dc3e0da-5230-4093-51e8-f668db02fb82, false, 53, 9, 192, 349, 331, 260, 467, 956, 95.13, 60.77, 'Wayleriangid', 'Houle', '2007-01-28', '2002-07-18 04:54:07', 0x77db526845b97c730607 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( d13cd96f-f9c7-482f-2a7b-c26fa737fc47, false, 51, 6, 183, 882, 307, 9, 814, 688, 79.73, 51.78, 'Salordo', 'Rembish', '2001-08-20', '2001-10-19 22:16:23', 0x1d7cd2fa06a235a62edd );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 021e0a09-6c9d-451f-493e-4fb7e819a892, true, 93, 47, 572, 188, 482, 570, 484, 143, 79.84, 22.08, 'Ellsolalita', 'Rajchgod', '2000-05-10', '2006-03-19 08:58:08', 0x22b035d2a82687f65d1c );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 1, 'Belgium', ( 'Malcolm', 'Beech' ), { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, [ '12345678', '23456789' ], { 'jack.harper@gmail.com', 'victoria.olsen@outlook.com' }, { '12345678' : 'Warner Bros', '23456789' : 'Universal Pictures' }, '2000-05-10', { ( 'Mireielle', 'Zenisek' ) : '2007-12-12', ( 'Dierdre', 'Dejongh' ) : '2001-08-20', ( 'Amalie', 'Lawson' ) : '2012-10-06', ( 'Valma', 'Fedyk' ) : '2001-02-03', ( 'Malcolm', 'Beech' ) : '2000-05-10', ( 'Aubrie', 'Greco' ) : '2009-09-26', ( 'Bahadir', 'Standrin' ) : '2001-06-24', ( 'Minnie', 'Charron' ) : '2009-09-26', ( 'Marybeth', 'Przewlocki' ) : '2001-06-24', ( '', '' ) : '2009-09-26' }, { '2001-02-03', '2001-06-24', '2009-09-26', '2007-12-12', '2012-10-06', '2007-01-28', '2004-10-15', '2001-08-20', '2000-05-10', '2014-08-14', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2001-06-24', '2004-10-15', '2007-01-28' ], { '2014-08-14' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2009-09-26' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2007-01-28' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, '2004-10-15' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) }, '2012-10-06' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, '2001-02-03' : { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, '2001-08-20' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-06-24' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2000-05-10' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2007-12-12' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) } }, '{}' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 2, '', ( '', '' ), { ( '', '' ), ( '', '' ) }, [ '', '' ], { 'rick.deckard@gmail.com', 'dave.holden@outlook.com' }, { '12345678' : '', '23456789' : '' }, '2001-06-24', { ( 'Malcolm', 'Beech' ) : '2004-10-15', ( 'Valma', 'Fedyk' ) : '2007-12-12', ( 'Amalie', 'Lawson' ) : '2014-08-14', ( 'Minnie', 'Charron' ) : '2001-08-20', ( '', '' ) : '2001-08-20', ( 'Dierdre', 'Dejongh' ) : '2000-05-10', ( 'Mireielle', 'Zenisek' ) : '2009-09-26', ( 'Marybeth', 'Przewlocki' ) : '2001-08-20', ( 'Bahadir', 'Standrin' ) : '2014-08-14', ( 'Aubrie', 'Greco' ) : '2014-08-14' }, { '2001-08-20', '2001-02-03', '2014-08-14', '2009-09-26', '2001-06-24', '2012-10-06', '2007-12-12', '2000-05-10', '2004-10-15', '2007-01-28', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2001-08-20', '2009-09-26', '2009-09-26' ], { '2012-10-06' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, '2014-08-14' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2009-09-26' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2001-02-03' : { ( 'Sammie', 'Anhorn' ), ( 'Beatrice', 'Smit' ), ( 'Adelheid', 'Cottengim' ), ( 'Dacey', 'Kiely' ), ( 'Shalne', 'Needham' ), ( 'Roel', 'Childress' ), ( 'Cordey', 'Challice' ), ( 'Muhammad', 'Hamidi' ), ( 'Selvaraj', 'Wessenberg' ), ( 'Indira', 'Mcnair' ) }, '2000-05-10' : { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, '2004-10-15' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) }, '2007-01-28' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, '2001-08-20' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) }, '2007-12-12' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) }, '2001-06-24' : { ( '', '' ), ( '', '' ) } }, '' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 3, 'Uillunkop', ( 'Bahadir', 'Standrin' ), { ( 'Sammie', 'Anhorn' ), ( 'Beatrice', 'Smit' ), ( 'Adelheid', 'Cottengim' ), ( 'Dacey', 'Kiely' ), ( 'Shalne', 'Needham' ), ( 'Roel', 'Childress' ), ( 'Cordey', 'Challice' ), ( 'Muhammad', 'Hamidi' ), ( 'Selvaraj', 'Wessenberg' ), ( 'Indira', 'Mcnair' ) }, [ '+99 603 345 592', '+36 335 726 417', '+56 642 659 180', '+11 324 670 843', '+33 116 349 143', '+25 780 927 819', '+63 201 326 814', '+80 543 598 929', '+29 202 928 647', '+21 169 317 497' ], { 'leonardo.myrillas@yahoo.com', 'mounir.waldick@mail.com', 'babs.theocharakis@hotmail.com', 'phillie.bouchard@live.com', 'franni.sherrer@gmail.com', 'roseanne.ramseyer@mail.com', 'lara.oldham@outlook.com', 'georgeann.mcallister@yahoo.com', 'serena.hoddinott@hotmail.com', 'corena.mcnally@yahoo.com' }, { '+54 282 153 855' : 'Suykens Depot', '+90 781 351 163' : 'Chamard Magazine', '+54 110 348 568' : 'Dekeyser Insurance', '+27 911 970 824' : 'Propes Services', '+59 493 953 191' : 'Montsko Limited', '+39 318 349 723' : 'Derosenroll Channel', '+26 680 563 458' : 'Shelton Magazine', '+78 217 175 588' : 'Perrin Security', '+31 853 147 704' : 'Jung News', '+55 613 977 576' : 'Inge Agency' }, '2007-12-12', { ( 'Amalie', 'Lawson' ) : '2001-02-03', ( 'Dierdre', 'Dejongh' ) : '2007-12-12', ( '', '' ) : '2007-01-28', ( 'Aubrie', 'Greco' ) : '2001-02-03', ( 'Valma', 'Fedyk' ) : '2000-05-10', ( 'Marybeth', 'Przewlocki' ) : '2014-08-14', ( 'Mireielle', 'Zenisek' ) : '2007-12-12', ( 'Malcolm', 'Beech' ) : '2007-12-12', ( 'Bahadir', 'Standrin' ) : '2004-10-15', ( 'Minnie', 'Charron' ) : '2007-01-28' }, { '2001-08-20', '2004-10-15', '2009-09-26', '2001-02-03', '2012-10-06', '2007-01-28', '2014-08-14', '2007-12-12', '2000-05-10', '2001-06-24', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2000-05-10', '2012-10-06', '2012-10-06' ], { '2004-10-15' : { ( '', '' ), ( '', '' ) }, '2012-10-06' : { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, '2001-08-20' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, '2009-09-26' : { ( 'Esko', 'Manuszak' ), ( 'Ulrike', 'Donak' ), ( 'Brittany', 'Sacarello' ), ( 'Roseanne', 'Conte' ), ( 'Sunil', 'Bankhead' ), ( 'Tsuyoshi', 'Presti' ), ( 'Inanc', 'Hafermalz' ), ( 'Nolie', 'Moynihan' ), ( 'Jenine', 'Devlin' ), ( 'Hendrika', 'Nemes' ) }, '2007-01-28' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2001-06-24' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, '2001-02-03' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2014-08-14' : { ( 'Esko', 'Manuszak' ), ( 'Ulrike', 'Donak' ), ( 'Brittany', 'Sacarello' ), ( 'Roseanne', 'Conte' ), ( 'Sunil', 'Bankhead' ), ( 'Tsuyoshi', 'Presti' ), ( 'Inanc', 'Hafermalz' ), ( 'Nolie', 'Moynihan' ), ( 'Jenine', 'Devlin' ), ( 'Hendrika', 'Nemes' ) }, '2007-12-12' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, '2000-05-10' : { ( 'Esko', 'Manuszak' ), ( 'Ulrike', 'Donak' ), ( 'Brittany', 'Sacarello' ), ( 'Roseanne', 'Conte' ), ( 'Sunil', 'Bankhead' ), ( 'Tsuyoshi', 'Presti' ), ( 'Inanc', 'Hafermalz' ), ( 'Nolie', 'Moynihan' ), ( 'Jenine', 'Devlin' ), ( 'Hendrika', 'Nemes' ) } }, 'It''s true I''m on face watched it so. Clothes shoes of touched and undefeatable feats to read. How could also thank you don''t know, if once seen her left and almost none.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 4, 'Panamomo', ( 'Marybeth', 'Przewlocki' ), { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, [ '+57 594 456 420', '+71 894 694 920', '+13 329 141 385', '+55 999 567 655', '+76 164 911 822', '+88 975 755 879', '+88 914 203 756', '+67 182 165 526', '+17 263 145 185', '+99 415 870 677' ], { 'ganesh.deraaf@outlook.com', 'derick.obrusniak@mail.com', 'novene.brading@outlook.com', 'vaughn.hurtado@hotmail.com', 'dulciana.aula@mail.com', 'patti.gilles@outlook.com', 'abel.janssen@yahoo.com', 'cassi.peavoy@gmail.com', 'lurlene.shukor@live.com', 'waihung.peralta@live.com' }, { '+87 947 323 834' : 'Cardozo Insurance', '+50 766 876 287' : 'Terneus Incorporated', '+27 129 318 804' : 'Bangia Center', '+45 458 649 645' : 'Frangoulis Factory', '+35 975 633 884' : 'Denno Services', '+21 620 883 963' : 'Sojkowski Church', '+35 500 984 554' : 'Sandness Store', '+79 436 962 201' : 'Ircbellcore Corporation', '+17 931 603 801' : 'Gagne Design', '+59 889 425 786' : 'Parton Shop' }, '2007-01-28', { ( 'Dierdre', 'Dejongh' ) : '2007-01-28', ( 'Malcolm', 'Beech' ) : '2001-08-20', ( 'Mireielle', 'Zenisek' ) : '2012-10-06', ( 'Marybeth', 'Przewlocki' ) : '2007-12-12', ( 'Minnie', 'Charron' ) : '2009-09-26', ( '', '' ) : '2014-08-14', ( 'Valma', 'Fedyk' ) : '2001-02-03', ( 'Aubrie', 'Greco' ) : '2001-06-24', ( 'Bahadir', 'Standrin' ) : '2001-02-03', ( 'Amalie', 'Lawson' ) : '2000-05-10' }, { '2009-09-26', '2012-10-06', '2001-02-03', '2014-08-14', '2007-12-12', '2000-05-10', '2001-08-20', '2007-01-28', '2004-10-15', '2001-06-24', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2000-05-10' ], { '2004-10-15' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2000-05-10' : { ( 'Sammie', 'Anhorn' ), ( 'Beatrice', 'Smit' ), ( 'Adelheid', 'Cottengim' ), ( 'Dacey', 'Kiely' ), ( 'Shalne', 'Needham' ), ( 'Roel', 'Childress' ), ( 'Cordey', 'Challice' ), ( 'Muhammad', 'Hamidi' ), ( 'Selvaraj', 'Wessenberg' ), ( 'Indira', 'Mcnair' ) }, '2009-09-26' : { ( 'Esko', 'Manuszak' ), ( 'Ulrike', 'Donak' ), ( 'Brittany', 'Sacarello' ), ( 'Roseanne', 'Conte' ), ( 'Sunil', 'Bankhead' ), ( 'Tsuyoshi', 'Presti' ), ( 'Inanc', 'Hafermalz' ), ( 'Nolie', 'Moynihan' ), ( 'Jenine', 'Devlin' ), ( 'Hendrika', 'Nemes' ) }, '2007-12-12' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2014-08-14' : { ( 'Alaine', 'Jaswal' ), ( 'Sabina', 'Chaudhary' ), ( 'Vida', 'Raschig' ), ( 'Ky', 'Sandler' ), ( 'Minoru', 'Trotter' ), ( 'Tonia', 'Pilipchuk' ), ( 'Ellyn', 'Strandberg' ), ( 'Ketti', 'Kehr' ), ( 'Erzsebet', 'Ross' ), ( 'Carmon', 'Strober' ) }, '2001-06-24' : { ( 'Alaine', 'Jaswal' ), ( 'Sabina', 'Chaudhary' ), ( 'Vida', 'Raschig' ), ( 'Ky', 'Sandler' ), ( 'Minoru', 'Trotter' ), ( 'Tonia', 'Pilipchuk' ), ( 'Ellyn', 'Strandberg' ), ( 'Ketti', 'Kehr' ), ( 'Erzsebet', 'Ross' ), ( 'Carmon', 'Strober' ) }, '2007-01-28' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2012-10-06' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2001-08-20' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2001-02-03' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) } }, 'Example hadn''t been looked around they used crude swearwords, my pouch and again disgust and deed. Spared him sit and time with calm days.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 5, 'Nongichi', ( 'Minnie', 'Charron' ), { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, [ '+18 965 428 798', '+50 399 300 210', '+19 934 908 380', '+34 323 559 498', '+46 385 829 984', '+73 853 114 930', '+17 273 915 634', '+23 607 188 539', '+51 417 973 694', '+95 807 568 659' ], { 'leo.patacki@hotmail.com', 'cathie.bower@mail.com', 'haroon.hanser@live.com', 'hildy.glinski@yahoo.com', 'winifred.bernstein@outlook.com', 'antonina.schumacher@hotmail.com', 'emma.capindale@live.com', 'hendrika.bringhurst@yahoo.com', 'ebony.lockwood@hotmail.com', 'auguste.knickerbocker@outlook.com' }, { '+20 474 467 875' : 'Eros Bank', '+35 443 886 744' : 'Castelloe Express', '+22 876 685 806' : 'Antle Associates', '+13 611 414 875' : 'Li Store', '+61 735 981 743' : 'Hixson Studio', '+38 535 441 864' : 'Aston Insurance', '+55 162 458 402' : 'Vahary Tech', '+79 956 300 117' : 'Paget Direct', '+71 756 466 741' : 'Heydon Direct', '+73 183 433 758' : 'Southon Online' }, '2012-10-06', { ( 'Bahadir', 'Standrin' ) : '2014-08-14', ( 'Marybeth', 'Przewlocki' ) : '2014-08-14', ( 'Minnie', 'Charron' ) : '2007-01-28', ( 'Malcolm', 'Beech' ) : '2014-08-14', ( 'Valma', 'Fedyk' ) : '2007-01-28', ( '', '' ) : '2014-08-14', ( 'Aubrie', 'Greco' ) : '2014-08-14', ( 'Dierdre', 'Dejongh' ) : '2001-08-20', ( 'Amalie', 'Lawson' ) : '2001-02-03', ( 'Mireielle', 'Zenisek' ) : '2004-10-15' }, { '2000-05-10', '2001-06-24', '2009-09-26', '2001-02-03', '2014-08-14', '2007-12-12', '2001-08-20', '2007-01-28', '2012-10-06', '2004-10-15', '', '', '', '', '', '', '', '', '', '', '' }, [ '2001-02-03', '2001-06-24', '2012-10-06' ], { '2001-06-24' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2014-08-14' : { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, '2004-10-15' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2001-08-20' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) }, '2000-05-10' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2001-02-03' : { ( 'Esko', 'Manuszak' ), ( 'Ulrike', 'Donak' ), ( 'Brittany', 'Sacarello' ), ( 'Roseanne', 'Conte' ), ( 'Sunil', 'Bankhead' ), ( 'Tsuyoshi', 'Presti' ), ( 'Inanc', 'Hafermalz' ), ( 'Nolie', 'Moynihan' ), ( 'Jenine', 'Devlin' ), ( 'Hendrika', 'Nemes' ) }, '2007-01-28' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, '2012-10-06' : { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, '2009-09-26' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2007-12-12' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) } }, 'Image and wisdom that no within himself. Might have teachers since that your poem, from under a beautiful woman with doubt. Accepted a feared gambler few with both would be.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 6, 'Nicerrignonu', ( 'Mireielle', 'Zenisek' ), { ( 'Esko', 'Manuszak' ), ( 'Ulrike', 'Donak' ), ( 'Brittany', 'Sacarello' ), ( 'Roseanne', 'Conte' ), ( 'Sunil', 'Bankhead' ), ( 'Tsuyoshi', 'Presti' ), ( 'Inanc', 'Hafermalz' ), ( 'Nolie', 'Moynihan' ), ( 'Jenine', 'Devlin' ), ( 'Hendrika', 'Nemes' ) }, [ '+44 605 288 981', '+35 219 405 388', '+69 170 503 849', '+69 383 861 674', '+81 984 954 269', '+36 855 416 560', '+13 500 144 913', '+36 896 907 252', '+51 765 356 424', '+20 615 753 527' ], { 'darline.mccreesh@hotmail.com', 'chabert.atoui@gmail.com', 'oorschot.eros@gmail.com', 'wren.klimon@yahoo.com', 'robina.maguire@mail.com', 'glen.hickin@outlook.com', 'brinna.dufour@mail.com', 'francine.jong@mail.com', 'torrie.bennison@mail.com', 'shani.ensing@outlook.com' }, { '+43 469 800 316' : 'Holbrooks Team', '+23 569 311 429' : 'Steenburg Center', '+11 263 487 795' : 'Valko Magazine', '+15 656 688 862' : 'Qureshi Associates', '+48 381 214 867' : 'Christian Institute', '+24 660 738 713' : 'Maritan Fashion', '+88 980 897 989' : 'Kiens Market', '+67 834 566 273' : 'Wissler Labs', '+85 392 653 657' : 'Metcalfe Vision', '+59 977 358 810' : 'Diederichs Media' }, '2000-05-10', { ( '', '' ) : '2014-08-14', ( 'Dierdre', 'Dejongh' ) : '2007-12-12', ( 'Valma', 'Fedyk' ) : '2007-12-12', ( 'Minnie', 'Charron' ) : '2004-10-15', ( 'Bahadir', 'Standrin' ) : '2012-10-06', ( 'Malcolm', 'Beech' ) : '2001-06-24', ( 'Mireielle', 'Zenisek' ) : '2001-08-20', ( 'Aubrie', 'Greco' ) : '2009-09-26', ( 'Marybeth', 'Przewlocki' ) : '2001-02-03', ( 'Amalie', 'Lawson' ) : '2000-05-10' }, { '2001-08-20', '2001-06-24', '2014-08-14', '2007-12-12', '2000-05-10', '2001-02-03', '2007-01-28', '2009-09-26', '2004-10-15', '2012-10-06', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2014-08-14', '2004-10-15', '2009-09-26' ], { '2001-08-20' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) }, '2014-08-14' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) }, '2012-10-06' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) }, '2004-10-15' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) }, '2001-06-24' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2007-01-28' : { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, '2000-05-10' : { ( 'Esko', 'Manuszak' ), ( 'Ulrike', 'Donak' ), ( 'Brittany', 'Sacarello' ), ( 'Roseanne', 'Conte' ), ( 'Sunil', 'Bankhead' ), ( 'Tsuyoshi', 'Presti' ), ( 'Inanc', 'Hafermalz' ), ( 'Nolie', 'Moynihan' ), ( 'Jenine', 'Devlin' ), ( 'Hendrika', 'Nemes' ) }, '2009-09-26' : { ( '', '' ), ( '', '' ) }, '2007-12-12' : { ( 'Esko', 'Manuszak' ), ( 'Ulrike', 'Donak' ), ( 'Brittany', 'Sacarello' ), ( 'Roseanne', 'Conte' ), ( 'Sunil', 'Bankhead' ), ( 'Tsuyoshi', 'Presti' ), ( 'Inanc', 'Hafermalz' ), ( 'Nolie', 'Moynihan' ), ( 'Jenine', 'Devlin' ), ( 'Hendrika', 'Nemes' ) }, '2001-02-03' : { ( 'Alaine', 'Jaswal' ), ( 'Sabina', 'Chaudhary' ), ( 'Vida', 'Raschig' ), ( 'Ky', 'Sandler' ), ( 'Minoru', 'Trotter' ), ( 'Tonia', 'Pilipchuk' ), ( 'Ellyn', 'Strandberg' ), ( 'Ketti', 'Kehr' ), ( 'Erzsebet', 'Ross' ), ( 'Carmon', 'Strober' ) } }, 'Fell silent in reaching the rumour of meditation, how she had changed character took your thoughts. We''ll continue squandering continue on my pleasure-garden.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 7, 'Arscescardip', ( 'Valma', 'Fedyk' ), { ( 'Alaine', 'Jaswal' ), ( 'Sabina', 'Chaudhary' ), ( 'Vida', 'Raschig' ), ( 'Ky', 'Sandler' ), ( 'Minoru', 'Trotter' ), ( 'Tonia', 'Pilipchuk' ), ( 'Ellyn', 'Strandberg' ), ( 'Ketti', 'Kehr' ), ( 'Erzsebet', 'Ross' ), ( 'Carmon', 'Strober' ) }, [ '+39 687 411 732', '+17 162 210 441', '+28 137 288 711', '+54 845 810 472', '+57 974 966 761', '+33 798 138 991', '+96 272 603 135', '+76 727 836 258', '+58 193 304 916', '+50 391 681 682' ], { 'cloris.kozsukan@hotmail.com', 'charmion.chalker@mail.com', 'sonny.tawfik@gmail.com', 'alyssa.kovacs@mail.com', 'junie.monterossowood@live.com', 'hally.ronaldson@mail.com', 'monte.mcmurray@live.com', 'cherilynn.sayegh@live.com', 'jemmie.scholman@mail.com', 'hali.pevzner@outlook.com' }, { '+29 881 396 988' : 'Langner Limited', '+30 865 203 914' : 'Herod Network', '+51 888 426 409' : 'Porter Vision', '+86 905 459 994' : 'Bareham Channel', '+21 427 793 636' : 'Lilleniit Vision', '+86 336 168 663' : 'Dalrymple Church', '+61 307 180 851' : 'Deligdisch Factory', '+92 351 543 913' : 'Borha Association', '+52 219 214 251' : 'Cromwell Group', '+48 103 579 692' : 'Beland Store' }, '2004-10-15', { ( 'Malcolm', 'Beech' ) : '2000-05-10', ( 'Minnie', 'Charron' ) : '2001-02-03', ( 'Valma', 'Fedyk' ) : '2014-08-14', ( 'Bahadir', 'Standrin' ) : '2009-09-26', ( 'Dierdre', 'Dejongh' ) : '2014-08-14', ( 'Amalie', 'Lawson' ) : '2007-12-12', ( 'Mireielle', 'Zenisek' ) : '2007-12-12', ( 'Aubrie', 'Greco' ) : '2014-08-14', ( 'Marybeth', 'Przewlocki' ) : '2004-10-15', ( '', '' ) : '2004-10-15' }, { '2001-02-03', '2004-10-15', '2001-06-24', '2000-05-10', '2007-12-12', '2007-01-28', '2014-08-14', '2012-10-06', '2009-09-26', '2001-08-20', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2000-05-10', '2001-06-24', '2001-06-24' ], { '2001-08-20' : { ( '', '' ), ( '', '' ) }, '2007-12-12' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2014-08-14' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2001-02-03' : { ( 'Alaine', 'Jaswal' ), ( 'Sabina', 'Chaudhary' ), ( 'Vida', 'Raschig' ), ( 'Ky', 'Sandler' ), ( 'Minoru', 'Trotter' ), ( 'Tonia', 'Pilipchuk' ), ( 'Ellyn', 'Strandberg' ), ( 'Ketti', 'Kehr' ), ( 'Erzsebet', 'Ross' ), ( 'Carmon', 'Strober' ) }, '2004-10-15' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2007-01-28' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-06-24' : { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, '2009-09-26' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2000-05-10' : { ( 'Alaine', 'Jaswal' ), ( 'Sabina', 'Chaudhary' ), ( 'Vida', 'Raschig' ), ( 'Ky', 'Sandler' ), ( 'Minoru', 'Trotter' ), ( 'Tonia', 'Pilipchuk' ), ( 'Ellyn', 'Strandberg' ), ( 'Ketti', 'Kehr' ), ( 'Erzsebet', 'Ross' ), ( 'Carmon', 'Strober' ) }, '2012-10-06' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) } }, 'You''re coming from such shoes of him, know this my knees farmers have found friendship, language would like foolishness used the rest. Wondrous teachings that last human existence by this.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 8, 'Galavaman', ( 'Aubrie', 'Greco' ), { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, [ '+99 939 386 727', '+62 503 951 690', '+70 279 371 646', '+37 954 240 188', '+82 430 829 506', '+68 105 617 667', '+15 955 831 806', '+16 264 188 823', '+41 142 580 536', '+38 904 393 768' ], { 'erika.dowdy@mail.com', 'bessy.mawst@yahoo.com', 'bibi.statile@outlook.com', 'lujanka.whiteside@hotmail.com', 'niek.ranoska@outlook.com', 'ivonne.blythe@yahoo.com', 'patrick.harron@yahoo.com', 'nariko.edey@gmail.com', 'jocelin.eu@gmail.com', 'hakan.briggs@gmail.com' }, { '+69 693 740 605' : 'Juan Services', '+37 260 211 697' : 'Winslow Express', '+39 603 145 330' : 'Donkers Store', '+74 228 716 859' : 'Mitchell Depot', '+68 998 656 309' : 'Kolos Insurance', '+28 904 651 490' : 'Martins Depot', '+77 559 599 774' : 'Eierstock Group', '+96 105 173 600' : 'Deitiker Factory', '+70 879 811 690' : 'Schavo Club', '+44 264 760 105' : 'Nahabedian Channel' }, '2001-08-20', { ( 'Dierdre', 'Dejongh' ) : '2001-02-03', ( 'Bahadir', 'Standrin' ) : '2007-01-28', ( 'Aubrie', 'Greco' ) : '2004-10-15', ( 'Marybeth', 'Przewlocki' ) : '2007-12-12', ( 'Valma', 'Fedyk' ) : '2001-06-24', ( 'Mireielle', 'Zenisek' ) : '2001-08-20', ( 'Malcolm', 'Beech' ) : '2007-01-28', ( 'Amalie', 'Lawson' ) : '2012-10-06', ( 'Minnie', 'Charron' ) : '2000-05-10', ( '', '' ) : '2004-10-15' }, { '2001-06-24', '2009-09-26', '2001-08-20', '2004-10-15', '2007-01-28', '2007-12-12', '2012-10-06', '2000-05-10', '2001-02-03', '2014-08-14', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2012-10-06', '2001-06-24' ], { '2001-06-24' : { ( 'Sammie', 'Anhorn' ), ( 'Beatrice', 'Smit' ), ( 'Adelheid', 'Cottengim' ), ( 'Dacey', 'Kiely' ), ( 'Shalne', 'Needham' ), ( 'Roel', 'Childress' ), ( 'Cordey', 'Challice' ), ( 'Muhammad', 'Hamidi' ), ( 'Selvaraj', 'Wessenberg' ), ( 'Indira', 'Mcnair' ) }, '2012-10-06' : { ( 'Sammie', 'Anhorn' ), ( 'Beatrice', 'Smit' ), ( 'Adelheid', 'Cottengim' ), ( 'Dacey', 'Kiely' ), ( 'Shalne', 'Needham' ), ( 'Roel', 'Childress' ), ( 'Cordey', 'Challice' ), ( 'Muhammad', 'Hamidi' ), ( 'Selvaraj', 'Wessenberg' ), ( 'Indira', 'Mcnair' ) }, '2004-10-15' : { ( 'Alaine', 'Jaswal' ), ( 'Sabina', 'Chaudhary' ), ( 'Vida', 'Raschig' ), ( 'Ky', 'Sandler' ), ( 'Minoru', 'Trotter' ), ( 'Tonia', 'Pilipchuk' ), ( 'Ellyn', 'Strandberg' ), ( 'Ketti', 'Kehr' ), ( 'Erzsebet', 'Ross' ), ( 'Carmon', 'Strober' ) }, '2014-08-14' : { ( 'Sammie', 'Anhorn' ), ( 'Beatrice', 'Smit' ), ( 'Adelheid', 'Cottengim' ), ( 'Dacey', 'Kiely' ), ( 'Shalne', 'Needham' ), ( 'Roel', 'Childress' ), ( 'Cordey', 'Challice' ), ( 'Muhammad', 'Hamidi' ), ( 'Selvaraj', 'Wessenberg' ), ( 'Indira', 'Mcnair' ) }, '2001-08-20' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2001-02-03' : { ( '', '' ), ( '', '' ) }, '2000-05-10' : { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, '2007-12-12' : { ( '', '' ), ( '', '' ) }, '2007-01-28' : { ( 'Alaine', 'Jaswal' ), ( 'Sabina', 'Chaudhary' ), ( 'Vida', 'Raschig' ), ( 'Ky', 'Sandler' ), ( 'Minoru', 'Trotter' ), ( 'Tonia', 'Pilipchuk' ), ( 'Ellyn', 'Strandberg' ), ( 'Ketti', 'Kehr' ), ( 'Erzsebet', 'Ross' ), ( 'Carmon', 'Strober' ) }, '2009-09-26' : { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) } }, 'Scolding and sons of ill-humour of their fearfulness, curious more neither happy in him dead. Ate could no nobleman who seeks unity, walking along pondered his blood flowed on.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 9, 'Otlottefor', ( 'Amalie', 'Lawson' ), { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, [ '+76 430 227 390', '+82 514 723 941', '+83 682 255 142', '+90 553 546 220', '+78 602 309 712', '+49 119 323 799', '+29 979 111 288', '+39 258 660 430', '+38 560 294 287', '+88 646 165 469' ], { 'azra.macinnis@outlook.com', 'malory.mckibbin@mail.com', 'keelia.moshtagh@hotmail.com', 'pierre.montag@live.com', 'rocco.moghis@gmail.com', 'bendite.rider@live.com', 'metrics.minichilli@gmail.com', 'dehlia.roehl@gmail.com', 'kwong.rolfes@gmail.com', 'marylynn.planche@yahoo.com' }, { '+53 832 375 450' : 'Loza Club', '+78 744 676 464' : 'Sandness Church', '+55 945 136 847' : 'Blumer Center', '+88 355 324 323' : 'Maikawa Security', '+35 745 335 484' : 'Kruger Security', '+18 496 985 245' : 'Mackin Team', '+17 432 289 235' : 'Lugwig Factory', '+17 825 708 900' : 'Mettrey Group', '+16 952 927 225' : 'Huynh Design', '+46 185 756 405' : 'Fisher Solutions' }, '2014-08-14', { ( '', '' ) : '2012-10-06', ( 'Minnie', 'Charron' ) : '2014-08-14', ( 'Valma', 'Fedyk' ) : '2000-05-10', ( 'Dierdre', 'Dejongh' ) : '2001-08-20', ( 'Aubrie', 'Greco' ) : '2014-08-14', ( 'Mireielle', 'Zenisek' ) : '2001-02-03', ( 'Bahadir', 'Standrin' ) : '2014-08-14', ( 'Marybeth', 'Przewlocki' ) : '2001-06-24', ( 'Malcolm', 'Beech' ) : '2007-01-28', ( 'Amalie', 'Lawson' ) : '2001-06-24' }, { '2000-05-10', '2009-09-26', '2007-01-28', '2001-02-03', '2012-10-06', '2001-06-24', '2001-08-20', '2014-08-14', '2007-12-12', '2004-10-15', '', '', '', '', '', '' }, [ '2012-10-06' ], { '2009-09-26' : { ( 'Sammie', 'Anhorn' ), ( 'Beatrice', 'Smit' ), ( 'Adelheid', 'Cottengim' ), ( 'Dacey', 'Kiely' ), ( 'Shalne', 'Needham' ), ( 'Roel', 'Childress' ), ( 'Cordey', 'Challice' ), ( 'Muhammad', 'Hamidi' ), ( 'Selvaraj', 'Wessenberg' ), ( 'Indira', 'Mcnair' ) }, '2004-10-15' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, '2001-08-20' : { ( '', '' ), ( '', '' ) }, '2012-10-06' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) }, '2007-12-12' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2000-05-10' : { ( 'Esko', 'Manuszak' ), ( 'Ulrike', 'Donak' ), ( 'Brittany', 'Sacarello' ), ( 'Roseanne', 'Conte' ), ( 'Sunil', 'Bankhead' ), ( 'Tsuyoshi', 'Presti' ), ( 'Inanc', 'Hafermalz' ), ( 'Nolie', 'Moynihan' ), ( 'Jenine', 'Devlin' ), ( 'Hendrika', 'Nemes' ) }, '2007-01-28' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2001-06-24' : { ( 'Alaine', 'Jaswal' ), ( 'Sabina', 'Chaudhary' ), ( 'Vida', 'Raschig' ), ( 'Ky', 'Sandler' ), ( 'Minoru', 'Trotter' ), ( 'Tonia', 'Pilipchuk' ), ( 'Ellyn', 'Strandberg' ), ( 'Ketti', 'Kehr' ), ( 'Erzsebet', 'Ross' ), ( 'Carmon', 'Strober' ) }, '2001-02-03' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2014-08-14' : { ( 'Katharina', 'Cuthill' ), ( 'Dinah', 'Mcintee' ), ( 'Thane', 'Heppes' ), ( 'Genevra', 'Cimolai' ), ( 'Laina', 'Sullivan' ), ( 'Delphine', 'Pera' ), ( 'Samara', 'Fenati' ), ( 'Margo', 'Streight' ), ( 'Nikolia', 'Mccaw' ), ( 'Milan', 'Cashin' ) } }, 'We are perhaps benevolent perhaps reciprocate it. Anxiety in learning which roughly means of any longer, how let his people lead in ear, quietly flowing did and patience I felt. Until a invited me to read scorned nor self-castigation.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 10, 'Urnsigigi', ( 'Dierdre', 'Dejongh' ), { ( 'Honey', 'Slinkard' ), ( 'Tori', 'Rayl' ), ( 'Kayley', 'Lally' ), ( 'Haruko', 'Hanel' ), ( 'Bassam', 'Navalta' ), ( 'Erena', 'Hintonsmith' ), ( 'Alyse', 'Mccolman' ), ( 'Tilly', 'Symons' ), ( 'Naoma', 'Cianci' ), ( 'Anabella', 'Moniter' ) }, [ '+51 918 769 954', '+30 323 189 413', '+37 840 696 763', '+82 674 841 204', '+78 814 414 907', '+55 286 186 324', '+76 494 916 434', '+52 218 595 534', '+25 375 640 918', '+91 140 503 677' ], { 'sunshine.lockett@gmail.com', 'latrena.jasny@live.com', 'jody.mandel@yahoo.com', 'cara.fuson@yahoo.com', 'faizal.montor@hotmail.com', 'cara.luker@hotmail.com', 'fan.mersinger@yahoo.com', 'class.haskins@live.com', 'tandie.morcinelli@yahoo.com', 'cherish.macgillivray@live.com' }, { '+47 786 657 891' : 'Swepston Fashion', '+94 399 909 740' : 'Vitacco Incorporated', '+55 186 874 639' : 'Urnes Network', '+95 101 630 574' : 'Lattanzi Foundation', '+18 486 179 816' : 'Hiscoe Labs', '+39 507 674 886' : 'Heald Shop', '+42 347 963 295' : 'Drwiega Trust', '+79 528 742 948' : 'Auyeung Network', '+83 283 819 665' : 'Patriarche Club', '+90 905 755 999' : 'Shears Associates' }, '2009-09-26', { ( 'Aubrie', 'Greco' ) : '2014-08-14', ( '', '' ) : '2007-12-12', ( 'Valma', 'Fedyk' ) : '2007-12-12', ( 'Dierdre', 'Dejongh' ) : '2014-08-14', ( 'Mireielle', 'Zenisek' ) : '2001-06-24', ( 'Minnie', 'Charron' ) : '2001-02-03', ( 'Malcolm', 'Beech' ) : '2001-08-20', ( 'Marybeth', 'Przewlocki' ) : '2007-01-28', ( 'Bahadir', 'Standrin' ) : '2009-09-26', ( 'Amalie', 'Lawson' ) : '2012-10-06' }, { '2009-09-26', '2004-10-15', '2007-01-28', '2000-05-10', '2014-08-14', '2001-08-20', '2007-12-12', '2012-10-06', '2001-06-24', '2001-02-03', '', '', '', '', '', '', '' }, [ '2001-02-03' ], { '2001-08-20' : { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, '2007-01-28' : { ( 'Alaine', 'Jaswal' ), ( 'Sabina', 'Chaudhary' ), ( 'Vida', 'Raschig' ), ( 'Ky', 'Sandler' ), ( 'Minoru', 'Trotter' ), ( 'Tonia', 'Pilipchuk' ), ( 'Ellyn', 'Strandberg' ), ( 'Ketti', 'Kehr' ), ( 'Erzsebet', 'Ross' ), ( 'Carmon', 'Strober' ) }, '2004-10-15' : { ( 'Christy', 'Lindemulder' ), ( 'Woon', 'Bullett' ), ( 'Elga', 'Valentik' ), ( 'Miro', 'Barbary' ), ( 'Geza', 'Lalu' ), ( 'Karlyn', 'Dane' ), ( 'Gill', 'Baskin' ), ( 'Cordelia', 'Comstock' ), ( 'Anatoly', 'Datema' ), ( 'Karie', 'Vandervelde' ) }, '2012-10-06' : { ( '', '' ), ( '', '' ) }, '2014-08-14' : { ( 'Sammie', 'Anhorn' ), ( 'Beatrice', 'Smit' ), ( 'Adelheid', 'Cottengim' ), ( 'Dacey', 'Kiely' ), ( 'Shalne', 'Needham' ), ( 'Roel', 'Childress' ), ( 'Cordey', 'Challice' ), ( 'Muhammad', 'Hamidi' ), ( 'Selvaraj', 'Wessenberg' ), ( 'Indira', 'Mcnair' ) }, '2007-12-12' : { ( 'Belinda', 'Tasuk' ), ( 'Marjoke', 'Mackenzie' ), ( 'Christabella', 'Lightfoot' ), ( 'Henry', 'Garee' ), ( 'Jana', 'Herberger' ), ( 'Nevsa', 'Docherty' ), ( 'Thanhhung', 'Wroblewski' ), ( 'Feynman', 'Drenan' ), ( 'Joeann', 'Michelussi' ), ( 'Izabel', 'Borum' ) }, '2001-06-24' : { ( 'Sammie', 'Anhorn' ), ( 'Beatrice', 'Smit' ), ( 'Adelheid', 'Cottengim' ), ( 'Dacey', 'Kiely' ), ( 'Shalne', 'Needham' ), ( 'Roel', 'Childress' ), ( 'Cordey', 'Challice' ), ( 'Muhammad', 'Hamidi' ), ( 'Selvaraj', 'Wessenberg' ), ( 'Indira', 'Mcnair' ) }, '2009-09-26' : { ( 'Candida', 'Gawargy' ), ( 'Janet', 'Beznowski' ), ( 'Emilio', 'Kingshott' ), ( 'Paloma', 'Projects' ), ( 'Joan', 'Glowa' ), ( 'Fearless', 'Homonick' ), ( 'Marsiella', 'Piercey' ), ( 'Sukyin', 'Valdez' ), ( 'Violante', 'Daoust' ), ( 'Dodi', 'Kohn' ) }, '2000-05-10' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-03' : { ( 'Esko', 'Manuszak' ), ( 'Ulrike', 'Donak' ), ( 'Brittany', 'Sacarello' ), ( 'Roseanne', 'Conte' ), ( 'Sunil', 'Bankhead' ), ( 'Tsuyoshi', 'Presti' ), ( 'Inanc', 'Hafermalz' ), ( 'Nolie', 'Moynihan' ), ( 'Jenine', 'Devlin' ), ( 'Hendrika', 'Nemes' ) } }, 'Deaf and my father left him on loaned money, gloomy and months passed quickly across this house, all perceived it my joy I thank you. Only hide from did we learn this. Mute gaze asked timidly fled that ''soft is better.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5, 'first', 1, ' This is the first text, with spaces ' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612, 'second', 2, 'This is the second text, with escaped characters ^~{}' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524, 'third', 3, 'This is the third text§with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -7654305769731274948, c0759f24-1649-8708-841e-7975566360ce, 'fourth', 4, 'This is the fourth text§also with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 2629192448731392108, ae7a22e0-a56d-4394-dffd-1e6d3a668a8b, 'Bruno', 793, 'Ran the entered for people own face the. Just lighting the times I said who petitioned him. Only thing we refer to annihilate himself something cooked.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 6036429769411198071, 39380c5e-fbd9-48f8-0e54-5c1aea937322, 'Kriegler', 938, 'Worry in my travels not content the golden cage, heard them was nothing about himself despised, up fear to eat became disobedient and a. Listened gratefully to receive me exclaimed lamentingly.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 4378675055730314798, 03ed03a0-af5b-4ffd-d0c4-8ceb30964b6d, 'Silang', 989, 'Always picked up he happened today because of desires. Teachings will ask one might very gray in ear, monk in this has driven me on shoulder. Any time he heard his other and distant son.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 9093560561001646649, 0585f68f-8eeb-431f-e812-fc866cf3dba6, 'Lapostolle', 53, 'Walked through the pleasure-grove which cannot be on foot, scent of service and worldly and remained silent. Before his secret voice assumed a poem, enchantment which was leading away all voices in poverty, possessions renounced all in here twenty years which goal.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 6864675750318371179, 14b6aceb-c7c3-4ac5-a1e6-095f4508de67, 'Olson', 771, 'Speaking still this thought with fine clothes. Greeted her hands so affectionately to myself in the, enchantment which guided by lust covetousness sloth and sorrow. Bad voices apart not act of despair.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 7052010554300720588, 3c066a40-60b6-4e41-15b6-73b1a3dbb070, 'Seagle', 859, 'First news would spent with gods together, people laughed surely I knock at him. Stayed rigidly focused towards himself appeared on it.' );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 56196916-b579-4045-1ece-2381707cc9be, 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( d2fbd124-90b3-442b-9bd4-5424d54605fa, -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( f298d4c9-6f8d-44b5-d2cf-24191df469fc, -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( abd666f1-e974-4dfc-73fb-c6f1b539f9d5, -5359923222225123686, 0883a652-0e6e-b6c9-304d-cfb71034d053 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 45cd636e-c353-4752-b2e7-766f0d1bf77c, -5292141111288023615, 03ed03a0-af5b-4ffd-d0c4-8ceb30964b6d );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 93fc73d9-0bcb-4da3-e181-28281e4b48bd, 6864675750318371179, 03ed03a0-af5b-4ffd-d0c4-8ceb30964b6d );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 77da35c5-a28a-4596-3904-98adb7e5e673, 6864675750318371179, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( ed786c29-dca0-44a1-c76d-8b9e7278bfe6, -6907789044519798771, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 722278d7-20f6-410f-2e43-6313e43ef2b3, -7654305769731274948, 0585f68f-8eeb-431f-e812-fc866cf3dba6 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( ce329ae9-04f9-4117-67dd-98a2a6c9d8cb, 9093560561001646649, 14b6aceb-c7c3-4ac5-a1e6-095f4508de67 );
