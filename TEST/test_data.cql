insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 8dbdda48-fb87-48d6-746f-1965824e966a, false, 1, 2, 3, 4, 5, 6, 7, 8, 1.1, 2.2, 'Hello world!', 'Martincello', '2001-02-03', '2001-02-03 04:05:06.789', 0x123456781234567891234567812345678 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( a8b03882-bc43-402e-4eff-1987a9ba04ee, false, 23, 54, 783, 599, 508, 903, 959, 502, 49, 78.48, 'Auschana', 'Crampton', '2003-04-09', '2009-02-26 01:43:29', 0x9edb62f961d99ba226e5 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 0a2928f7-4d7e-4754-9eee-36f832ea99a1, true, 26, 79, 309, 965, 157, 853, 605, 369, 41.05, 66.57, 'Rumiepajoli', 'Olmstead', '2004-04-15', '2009-11-24 20:41:00', 0x89bb3f241a6c9bc743d0 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( a07d41ed-28b6-48df-19db-e1eafeec4915, false, 65, 100, 451, 679, 506, 902, 33, 530, 69.75, 29.13, 'Ewserndi', 'Ehrenholz', '2011-09-12', '2013-02-15 08:13:29', 0xd11d1e21a9106b21d2a5 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 5731016c-ad5d-4f30-8d9e-0c04e6eaf9b3, false, 21, 97, 491, 389, 505, 393, 328, 868, 94.99, 12.61, 'Penelopef', 'Borkowicz', '2009-07-19', '2002-05-04 06:01:21', 0x685c9d91246b7a40da2c );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 8cbdc81c-93ca-4f81-6d4f-9c7f24d1efde, true, 82, 69, 631, 735, 904, 201, 711, 68, 85.45, 88.86, 'Pasardovaric', 'Shuster', '2015-07-09', '2012-04-15 15:42:09', 0x216fef3160771058569e );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 8f118131-c3ec-4a3a-c198-53a37d1cad65, false, 80, 42, 151, 780, 937, 915, 748, 118, 85.66, 90.16, 'Essergweadiv', 'Matney', '2010-09-09', '2003-07-02 11:21:18', 0xd460b744f43cfad57e17 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( fe1c6f36-bfb7-4048-dce2-8fb5c29edc37, false, 72, 52, 268, 441, 502, 253, 883, 702, 68.66, 75.43, 'Ashoniki', 'Ajersch', '2014-01-06', '2008-11-22 06:03:17', 0x3f94e685a1a05205c2cc );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 1f26d5c1-4123-47de-18ae-84eade6c5c41, false, 33, 35, 874, 15, 818, 785, 415, 623, 59.38, 50.78, 'Auvadob', 'Basa', '2006-12-11', '2002-10-18 19:20:48', 0x9614df0a3c4c468eacc5 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( eb84317d-c83f-4ad4-0974-487bd0d25d19, true, 5, 29, 170, 236, 673, 175, 309, 699, 51.1, 61.95, 'Eceppelyu', 'Kwok', '2008-06-19', '2012-08-08 04:36:01', 0x5c1b36650795801bc507 );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 1, 'Belgium', ( 'Malcolm', 'Beech' ), { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, [ '12345678', '23456789' ], { 'jack.harper@gmail.com', 'victoria.olsen@outlook.com' }, { '12345678' : 'Warner Bros', '23456789' : 'Universal Pictures' }, '2008-06-19', { ( 'Yalcin', 'Yaeger' ) : '2014-01-06', ( 'Clare', 'Boeyen' ) : '2004-04-15', ( 'Celisse', 'Okada' ) : '2014-01-06', ( 'Torey', 'Rheault' ) : '2006-12-11', ( 'Malcolm', 'Beech' ) : '2006-12-11', ( 'Janick', 'Turbyfill' ) : '2003-04-09', ( 'Catharine', 'Propes' ) : '2011-09-12', ( '', '' ) : '2004-04-15', ( 'Vicente', 'Jeffries' ) : '2009-07-19', ( 'Wilmette', 'Lepage' ) : '2010-09-09' }, { '2011-09-12', '2014-01-06', '2001-02-03', '2009-07-19', '2004-04-15', '2010-09-09', '2015-07-09', '2003-04-09', '2006-12-11', '2008-06-19', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2014-01-06', '2003-04-09' ], { '2006-12-11' : { ( 'Irish', 'Marshaus' ), ( 'Vally', 'Dikens' ), ( 'Terrell', 'Erler' ), ( 'Klara', 'Consultancy' ), ( 'Korella', 'Firat' ), ( 'Meg', 'Vieira' ), ( 'Laslo', 'Wun' ), ( 'Follick', 'Stovall' ), ( 'Nelda', 'Davids' ), ( 'Helaine', 'Mc' ) }, '2010-09-09' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2015-07-09' : { ( 'Ivor', 'Montsko' ), ( 'Naval', 'Fildey' ), ( 'Berti', 'Foubert' ), ( 'Tomy', 'Reese' ), ( 'Aditya', 'Hungle' ), ( 'Sayla', 'Soyland' ), ( 'Malcolm', 'Kirkley' ), ( 'Joell', 'Franze' ), ( 'Laury', 'Stephen' ), ( 'Georges', 'Gronwall' ) }, '2011-09-12' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2014-01-06' : { ( 'Lester', 'Tjia' ), ( 'Bernadine', 'Applegarth' ), ( 'Fima', 'Kempster' ), ( 'Kaela', 'Spolar' ), ( 'Heda', 'Darroch' ), ( 'Geralda', 'Zuk' ), ( 'Britt', 'Magnuson' ), ( 'Maggy', 'Burnette' ), ( 'Claudie', 'Hinds' ), ( 'Krystal', 'Bestavros' ) }, '2003-04-09' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2001-02-03' : { ( 'Mufi', 'Motashaw' ), ( 'Susanna', 'Maynes' ), ( 'Enis', 'Conoly' ), ( 'Marita', 'Birkwood' ), ( 'Dolorita', 'Ruaud' ), ( 'Maribel', 'Girgis' ), ( 'Pamelina', 'Benfield' ), ( 'Angy', 'Brummitt' ), ( 'Elvina', 'Teasley' ), ( 'Attilla', 'Hosseini' ) }, '2009-07-19' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2004-04-15' : { ( 'Irish', 'Marshaus' ), ( 'Vally', 'Dikens' ), ( 'Terrell', 'Erler' ), ( 'Klara', 'Consultancy' ), ( 'Korella', 'Firat' ), ( 'Meg', 'Vieira' ), ( 'Laslo', 'Wun' ), ( 'Follick', 'Stovall' ), ( 'Nelda', 'Davids' ), ( 'Helaine', 'Mc' ) }, '2008-06-19' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) } }, '{}' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 2, '', ( '', '' ), { ( '', '' ), ( '', '' ) }, [ '', '' ], { 'rick.deckard@gmail.com', 'dave.holden@outlook.com' }, { '12345678' : '', '23456789' : '' }, '2008-06-19', { ( 'Torey', 'Rheault' ) : '2010-09-09', ( 'Vicente', 'Jeffries' ) : '2015-07-09', ( 'Catharine', 'Propes' ) : '2001-02-03', ( 'Celisse', 'Okada' ) : '2003-04-09', ( 'Janick', 'Turbyfill' ) : '2001-02-03', ( 'Yalcin', 'Yaeger' ) : '2009-07-19', ( 'Wilmette', 'Lepage' ) : '2010-09-09', ( 'Malcolm', 'Beech' ) : '2011-09-12', ( '', '' ) : '2009-07-19', ( 'Clare', 'Boeyen' ) : '2009-07-19' }, { '2011-09-12', '2009-07-19', '2015-07-09', '2004-04-15', '2006-12-11', '2008-06-19', '2001-02-03', '2010-09-09', '2014-01-06', '2003-04-09', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2008-06-19' ], { '2014-01-06' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2004-04-15' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2015-07-09' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2006-12-11' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2008-06-19' : { ( '', '' ), ( '', '' ) }, '2001-02-03' : { ( 'Irish', 'Marshaus' ), ( 'Vally', 'Dikens' ), ( 'Terrell', 'Erler' ), ( 'Klara', 'Consultancy' ), ( 'Korella', 'Firat' ), ( 'Meg', 'Vieira' ), ( 'Laslo', 'Wun' ), ( 'Follick', 'Stovall' ), ( 'Nelda', 'Davids' ), ( 'Helaine', 'Mc' ) }, '2011-09-12' : { ( '', '' ), ( '', '' ) }, '2009-07-19' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2003-04-09' : { ( '', '' ), ( '', '' ) }, '2010-09-09' : { ( '', '' ), ( '', '' ) } }, '' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 3, 'Oswanajeav', ( 'Catharine', 'Propes' ), { ( 'Irish', 'Marshaus' ), ( 'Vally', 'Dikens' ), ( 'Terrell', 'Erler' ), ( 'Klara', 'Consultancy' ), ( 'Korella', 'Firat' ), ( 'Meg', 'Vieira' ), ( 'Laslo', 'Wun' ), ( 'Follick', 'Stovall' ), ( 'Nelda', 'Davids' ), ( 'Helaine', 'Mc' ) }, [ '+21 306 523 792', '+17 359 705 597', '+93 671 204 679', '+21 971 226 198', '+41 411 443 462', '+90 484 812 114', '+94 690 670 408', '+31 399 190 938', '+52 282 511 145', '+47 856 473 848' ], { 'crystalbay.kurash@mail.com', 'tian.croxall@mail.com', 'rhody.sellars@hotmail.com', 'othilia.zaia@outlook.com', 'tessy.reimann@yahoo.com', 'bela.lugsdin@hotmail.com', 'glynn.valerien@hotmail.com', 'weringh.keyes@yahoo.com', 'aaron.pomerleau@hotmail.com', 'devonne.evers@mail.com' }, { '+70 295 633 603' : 'Nickonov Vision', '+51 690 728 475' : 'Kwong Limited', '+33 773 847 614' : 'Favell News', '+68 734 148 781' : 'Papineau Studio', '+14 873 772 253' : 'Ryall Associates', '+69 635 267 363' : 'Chesser Logic', '+65 704 499 295' : 'Maenpaa Security', '+55 889 657 556' : 'Biggers College', '+13 883 143 214' : 'Wallace Vision', '+71 638 627 959' : 'Gilmour Magazine' }, '2010-09-09', { ( 'Catharine', 'Propes' ) : '2010-09-09', ( 'Vicente', 'Jeffries' ) : '2004-04-15', ( 'Janick', 'Turbyfill' ) : '2015-07-09', ( 'Wilmette', 'Lepage' ) : '2006-12-11', ( 'Yalcin', 'Yaeger' ) : '2015-07-09', ( 'Clare', 'Boeyen' ) : '2004-04-15', ( 'Celisse', 'Okada' ) : '2008-06-19', ( '', '' ) : '2011-09-12', ( 'Malcolm', 'Beech' ) : '2015-07-09', ( 'Torey', 'Rheault' ) : '2004-04-15' }, { '2003-04-09', '2015-07-09', '2010-09-09', '2014-01-06', '2004-04-15', '2008-06-19', '2011-09-12', '2006-12-11', '2001-02-03', '2009-07-19', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2011-09-12' ], { '2015-07-09' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2008-06-19' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-03' : { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) }, '2006-12-11' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2003-04-09' : { ( 'Lester', 'Tjia' ), ( 'Bernadine', 'Applegarth' ), ( 'Fima', 'Kempster' ), ( 'Kaela', 'Spolar' ), ( 'Heda', 'Darroch' ), ( 'Geralda', 'Zuk' ), ( 'Britt', 'Magnuson' ), ( 'Maggy', 'Burnette' ), ( 'Claudie', 'Hinds' ), ( 'Krystal', 'Bestavros' ) }, '2011-09-12' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2014-01-06' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2004-04-15' : { ( 'Ivor', 'Montsko' ), ( 'Naval', 'Fildey' ), ( 'Berti', 'Foubert' ), ( 'Tomy', 'Reese' ), ( 'Aditya', 'Hungle' ), ( 'Sayla', 'Soyland' ), ( 'Malcolm', 'Kirkley' ), ( 'Joell', 'Franze' ), ( 'Laury', 'Stephen' ), ( 'Georges', 'Gronwall' ) }, '2009-07-19' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2010-09-09' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) } }, 'Thoughts to her bed and abused soul. Will give a goal by was broken, goal because it may go any goals. Blossomed his present self it educated and money.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 4, 'Ralacgix', ( 'Torey', 'Rheault' ), { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, [ '+41 632 770 478', '+39 442 412 991', '+14 836 499 985', '+81 719 973 724', '+93 591 746 518', '+19 235 205 458', '+17 743 251 205', '+76 850 263 656', '+67 756 976 346', '+89 615 181 457' ], { 'xavier.witzmann@live.com', 'pinder.prichard@hotmail.com', 'howard.yuan@mail.com', 'walley.cheba@live.com', 'cad.parman@gmail.com', 'yuemin.nanamiya@mail.com', 'dedie.ascott@yahoo.com', 'trevor.ziegler@live.com', 'jobina.ladva@yahoo.com', 'honkong.fogleman@mail.com' }, { '+38 453 583 771' : 'Cividino Corporation', '+89 987 308 785' : 'Siddiqui Fund', '+98 277 140 283' : 'Mukherjee Church', '+80 897 370 378' : 'Painter Institute', '+41 349 403 796' : 'Heinjus Solutions', '+74 713 866 145' : 'Kletchko Institute', '+54 175 850 788' : 'Rosche Magazine', '+14 137 396 256' : 'Triplehorn Corporation', '+43 227 501 725' : 'Kriz Fx', '+90 251 431 620' : 'Enders Factory' }, '2010-09-09', { ( 'Vicente', 'Jeffries' ) : '2011-09-12', ( 'Malcolm', 'Beech' ) : '2015-07-09', ( 'Wilmette', 'Lepage' ) : '2010-09-09', ( 'Janick', 'Turbyfill' ) : '2001-02-03', ( 'Celisse', 'Okada' ) : '2014-01-06', ( 'Clare', 'Boeyen' ) : '2001-02-03', ( 'Torey', 'Rheault' ) : '2011-09-12', ( 'Catharine', 'Propes' ) : '2010-09-09', ( 'Yalcin', 'Yaeger' ) : '2014-01-06', ( '', '' ) : '2009-07-19' }, { '2014-01-06', '2001-02-03', '2006-12-11', '2011-09-12', '2003-04-09', '2010-09-09', '2008-06-19', '2015-07-09', '2004-04-15', '2009-07-19', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2010-09-09', '2010-09-09' ], { '2011-09-12' : { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) }, '2001-02-03' : { ( 'Irish', 'Marshaus' ), ( 'Vally', 'Dikens' ), ( 'Terrell', 'Erler' ), ( 'Klara', 'Consultancy' ), ( 'Korella', 'Firat' ), ( 'Meg', 'Vieira' ), ( 'Laslo', 'Wun' ), ( 'Follick', 'Stovall' ), ( 'Nelda', 'Davids' ), ( 'Helaine', 'Mc' ) }, '2014-01-06' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2015-07-09' : { ( '', '' ), ( '', '' ) }, '2004-04-15' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2006-12-11' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2009-07-19' : { ( 'Lester', 'Tjia' ), ( 'Bernadine', 'Applegarth' ), ( 'Fima', 'Kempster' ), ( 'Kaela', 'Spolar' ), ( 'Heda', 'Darroch' ), ( 'Geralda', 'Zuk' ), ( 'Britt', 'Magnuson' ), ( 'Maggy', 'Burnette' ), ( 'Claudie', 'Hinds' ), ( 'Krystal', 'Bestavros' ) }, '2003-04-09' : { ( 'Mufi', 'Motashaw' ), ( 'Susanna', 'Maynes' ), ( 'Enis', 'Conoly' ), ( 'Marita', 'Birkwood' ), ( 'Dolorita', 'Ruaud' ), ( 'Maribel', 'Girgis' ), ( 'Pamelina', 'Benfield' ), ( 'Angy', 'Brummitt' ), ( 'Elvina', 'Teasley' ), ( 'Attilla', 'Hosseini' ) }, '2008-06-19' : { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) }, '2010-09-09' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) } }, 'Felt how kind childlike or human being, opened mouth was startled and used to. Clean and full height any longer used to. Him leave it hating himself was smiling.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 5, 'Uredefoke', ( 'Wilmette', 'Lepage' ), { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, [ '+72 303 313 369', '+53 812 779 170', '+82 513 686 133', '+87 334 117 385', '+84 529 309 895', '+10 326 353 695', '+34 610 160 859', '+45 160 534 142', '+80 384 854 856', '+59 903 709 970' ], { 'dacie.badza@outlook.com', 'shoshana.lathrop@live.com', 'drusy.kinrys@mail.com', 'ciriaco.deatrick@mail.com', 'albrecht.rooney@live.com', 'joaquin.willette@outlook.com', 'dayton.tellup@live.com', 'jacynth.dube@live.com', 'melinie.beeston@live.com', 'theodora.sawada@hotmail.com' }, { '+40 885 410 524' : 'Diperna Insurance', '+34 115 509 137' : 'Ayaz Services', '+52 262 465 613' : 'Monet Agency', '+14 271 338 161' : 'Koster Studio', '+17 709 609 308' : 'Marting Express', '+80 886 144 407' : 'Bottis Agency', '+41 850 790 376' : 'Brindley Consulting', '+78 141 123 177' : 'Beeton Design', '+24 676 422 288' : 'Rolston Cooperative', '+32 831 538 311' : 'Simmonds Corporation' }, '2003-04-09', { ( 'Torey', 'Rheault' ) : '2008-06-19', ( 'Janick', 'Turbyfill' ) : '2004-04-15', ( 'Wilmette', 'Lepage' ) : '2010-09-09', ( 'Vicente', 'Jeffries' ) : '2009-07-19', ( '', '' ) : '2015-07-09', ( 'Yalcin', 'Yaeger' ) : '2006-12-11', ( 'Clare', 'Boeyen' ) : '2010-09-09', ( 'Malcolm', 'Beech' ) : '2006-12-11', ( 'Celisse', 'Okada' ) : '2004-04-15', ( 'Catharine', 'Propes' ) : '2004-04-15' }, { '2011-09-12', '2001-02-03', '2014-01-06', '2015-07-09', '2004-04-15', '2010-09-09', '2008-06-19', '2003-04-09', '2006-12-11', '2009-07-19', '', '', '', '', '', '', '', '' }, [ '2006-12-11', '2001-02-03' ], { '2001-02-03' : { ( 'Lester', 'Tjia' ), ( 'Bernadine', 'Applegarth' ), ( 'Fima', 'Kempster' ), ( 'Kaela', 'Spolar' ), ( 'Heda', 'Darroch' ), ( 'Geralda', 'Zuk' ), ( 'Britt', 'Magnuson' ), ( 'Maggy', 'Burnette' ), ( 'Claudie', 'Hinds' ), ( 'Krystal', 'Bestavros' ) }, '2008-06-19' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2011-09-12' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2009-07-19' : { ( 'Mufi', 'Motashaw' ), ( 'Susanna', 'Maynes' ), ( 'Enis', 'Conoly' ), ( 'Marita', 'Birkwood' ), ( 'Dolorita', 'Ruaud' ), ( 'Maribel', 'Girgis' ), ( 'Pamelina', 'Benfield' ), ( 'Angy', 'Brummitt' ), ( 'Elvina', 'Teasley' ), ( 'Attilla', 'Hosseini' ) }, '2004-04-15' : { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) }, '2014-01-06' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2003-04-09' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2006-12-11' : { ( 'Ivor', 'Montsko' ), ( 'Naval', 'Fildey' ), ( 'Berti', 'Foubert' ), ( 'Tomy', 'Reese' ), ( 'Aditya', 'Hungle' ), ( 'Sayla', 'Soyland' ), ( 'Malcolm', 'Kirkley' ), ( 'Joell', 'Franze' ), ( 'Laury', 'Stephen' ), ( 'Georges', 'Gronwall' ) }, '2010-09-09' : { ( '', '' ), ( '', '' ) }, '2015-07-09' : { ( 'Ivor', 'Montsko' ), ( 'Naval', 'Fildey' ), ( 'Berti', 'Foubert' ), ( 'Tomy', 'Reese' ), ( 'Aditya', 'Hungle' ), ( 'Sayla', 'Soyland' ), ( 'Malcolm', 'Kirkley' ), ( 'Joell', 'Franze' ), ( 'Laury', 'Stephen' ), ( 'Georges', 'Gronwall' ) } }, 'Ran and ever seen her suffering began asked himself, more visitors and face had heard everything, venerable among people less about the gamblers. The worth keeping he pleased he lived alone.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 6, 'Atheckulka', ( 'Vicente', 'Jeffries' ), { ( 'Lester', 'Tjia' ), ( 'Bernadine', 'Applegarth' ), ( 'Fima', 'Kempster' ), ( 'Kaela', 'Spolar' ), ( 'Heda', 'Darroch' ), ( 'Geralda', 'Zuk' ), ( 'Britt', 'Magnuson' ), ( 'Maggy', 'Burnette' ), ( 'Claudie', 'Hinds' ), ( 'Krystal', 'Bestavros' ) }, [ '+30 891 140 336', '+34 713 948 422', '+67 204 276 477', '+33 154 659 174', '+74 714 305 881', '+99 631 369 728', '+52 239 181 174', '+50 770 248 471', '+44 787 223 834', '+82 758 890 283' ], { 'stevana.squires@outlook.com', 'nayneshkumar.byczko@outlook.com', 'hiroko.ouellet@yahoo.com', 'joellen.forster@hotmail.com', 'torcac.sergo@hotmail.com', 'huguette.iyer@outlook.com', 'addi.speaker@outlook.com', 'rolando.luzine@outlook.com', 'snehal.forslund@mail.com', 'thanhtinh.kannemann@gmail.com' }, { '+71 385 524 735' : 'Malkani News', '+36 722 834 353' : 'Joiner Society', '+26 386 359 674' : 'Catherwood Institute', '+79 233 986 861' : 'Dangelo Network', '+19 423 886 625' : 'Nambride University', '+63 819 485 981' : 'Lamm Magazine', '+41 454 595 944' : 'Leon Dynamics', '+98 684 827 376' : 'Foessl Trust', '+56 205 264 770' : 'Shukster Magazine', '+42 467 117 456' : 'Deyirmendjian University' }, '2006-12-11', { ( 'Vicente', 'Jeffries' ) : '2011-09-12', ( 'Janick', 'Turbyfill' ) : '2008-06-19', ( 'Torey', 'Rheault' ) : '2015-07-09', ( 'Clare', 'Boeyen' ) : '2015-07-09', ( 'Yalcin', 'Yaeger' ) : '2015-07-09', ( 'Wilmette', 'Lepage' ) : '2006-12-11', ( 'Malcolm', 'Beech' ) : '2015-07-09', ( 'Celisse', 'Okada' ) : '2008-06-19', ( 'Catharine', 'Propes' ) : '2008-06-19', ( '', '' ) : '2001-02-03' }, { '2014-01-06', '2006-12-11', '2010-09-09', '2004-04-15', '2011-09-12', '2003-04-09', '2008-06-19', '2009-07-19', '2001-02-03', '2015-07-09', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2006-12-11', '2003-04-09', '2006-12-11' ], { '2004-04-15' : { ( 'Lester', 'Tjia' ), ( 'Bernadine', 'Applegarth' ), ( 'Fima', 'Kempster' ), ( 'Kaela', 'Spolar' ), ( 'Heda', 'Darroch' ), ( 'Geralda', 'Zuk' ), ( 'Britt', 'Magnuson' ), ( 'Maggy', 'Burnette' ), ( 'Claudie', 'Hinds' ), ( 'Krystal', 'Bestavros' ) }, '2011-09-12' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2015-07-09' : { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) }, '2006-12-11' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2001-02-03' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2008-06-19' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2003-04-09' : { ( 'Mufi', 'Motashaw' ), ( 'Susanna', 'Maynes' ), ( 'Enis', 'Conoly' ), ( 'Marita', 'Birkwood' ), ( 'Dolorita', 'Ruaud' ), ( 'Maribel', 'Girgis' ), ( 'Pamelina', 'Benfield' ), ( 'Angy', 'Brummitt' ), ( 'Elvina', 'Teasley' ), ( 'Attilla', 'Hosseini' ) }, '2014-01-06' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2009-07-19' : { ( 'Irish', 'Marshaus' ), ( 'Vally', 'Dikens' ), ( 'Terrell', 'Erler' ), ( 'Klara', 'Consultancy' ), ( 'Korella', 'Firat' ), ( 'Meg', 'Vieira' ), ( 'Laslo', 'Wun' ), ( 'Follick', 'Stovall' ), ( 'Nelda', 'Davids' ), ( 'Helaine', 'Mc' ) }, '2010-09-09' : { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) } }, 'Whom he asked again and about what he felt, fled back to suspect that long pause, questions he in fine shoes they commanded him safe.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 7, 'Reradu', ( 'Clare', 'Boeyen' ), { ( 'Ivor', 'Montsko' ), ( 'Naval', 'Fildey' ), ( 'Berti', 'Foubert' ), ( 'Tomy', 'Reese' ), ( 'Aditya', 'Hungle' ), ( 'Sayla', 'Soyland' ), ( 'Malcolm', 'Kirkley' ), ( 'Joell', 'Franze' ), ( 'Laury', 'Stephen' ), ( 'Georges', 'Gronwall' ) }, [ '+71 808 463 203', '+48 737 850 872', '+49 717 858 189', '+54 782 186 627', '+22 367 280 918', '+42 593 140 669', '+97 332 503 346', '+62 879 705 189', '+63 485 153 511', '+42 565 232 432' ], { 'phaedra.pighin@hotmail.com', 'sallyann.farrell@live.com', 'karoline.prevost@live.com', 'wieslawa.colucci@mail.com', 'johnath.peng@hotmail.com', 'sarina.grinham@hotmail.com', 'joni.kapsa@hotmail.com', 'margery.feild@outlook.com', 'guglielma.grossutti@mail.com', 'wynny.burkert@mail.com' }, { '+16 132 132 389' : 'Mayo Fashion', '+34 905 405 377' : 'Kinstley Society', '+89 311 348 426' : 'Waterman Institute', '+12 257 574 574' : 'Cisco Bank', '+24 721 208 924' : 'Zukas Point', '+65 756 182 322' : 'Kinrys Corporation', '+73 978 517 341' : 'Masika Shop', '+96 114 795 821' : 'Kamboh University', '+41 629 986 875' : 'Rizzuti Labs', '+61 907 362 629' : 'Gouldson Consulting' }, '2010-09-09', { ( 'Yalcin', 'Yaeger' ) : '2015-07-09', ( 'Catharine', 'Propes' ) : '2006-12-11', ( 'Wilmette', 'Lepage' ) : '2004-04-15', ( 'Celisse', 'Okada' ) : '2009-07-19', ( 'Clare', 'Boeyen' ) : '2008-06-19', ( 'Janick', 'Turbyfill' ) : '2004-04-15', ( 'Malcolm', 'Beech' ) : '2001-02-03', ( 'Torey', 'Rheault' ) : '2003-04-09', ( '', '' ) : '2001-02-03', ( 'Vicente', 'Jeffries' ) : '2009-07-19' }, { '2010-09-09', '2003-04-09', '2008-06-19', '2015-07-09', '2004-04-15', '2011-09-12', '2009-07-19', '2006-12-11', '2001-02-03', '2014-01-06', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2014-01-06' ], { '2006-12-11' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2003-04-09' : { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) }, '2009-07-19' : { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) }, '2011-09-12' : { ( 'Mufi', 'Motashaw' ), ( 'Susanna', 'Maynes' ), ( 'Enis', 'Conoly' ), ( 'Marita', 'Birkwood' ), ( 'Dolorita', 'Ruaud' ), ( 'Maribel', 'Girgis' ), ( 'Pamelina', 'Benfield' ), ( 'Angy', 'Brummitt' ), ( 'Elvina', 'Teasley' ), ( 'Attilla', 'Hosseini' ) }, '2015-07-09' : { ( 'Lester', 'Tjia' ), ( 'Bernadine', 'Applegarth' ), ( 'Fima', 'Kempster' ), ( 'Kaela', 'Spolar' ), ( 'Heda', 'Darroch' ), ( 'Geralda', 'Zuk' ), ( 'Britt', 'Magnuson' ), ( 'Maggy', 'Burnette' ), ( 'Claudie', 'Hinds' ), ( 'Krystal', 'Bestavros' ) }, '2001-02-03' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2014-01-06' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2008-06-19' : { ( 'Lester', 'Tjia' ), ( 'Bernadine', 'Applegarth' ), ( 'Fima', 'Kempster' ), ( 'Kaela', 'Spolar' ), ( 'Heda', 'Darroch' ), ( 'Geralda', 'Zuk' ), ( 'Britt', 'Magnuson' ), ( 'Maggy', 'Burnette' ), ( 'Claudie', 'Hinds' ), ( 'Krystal', 'Bestavros' ) }, '2010-09-09' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2004-04-15' : { ( 'Lester', 'Tjia' ), ( 'Bernadine', 'Applegarth' ), ( 'Fima', 'Kempster' ), ( 'Kaela', 'Spolar' ), ( 'Heda', 'Darroch' ), ( 'Geralda', 'Zuk' ), ( 'Britt', 'Magnuson' ), ( 'Maggy', 'Burnette' ), ( 'Claudie', 'Hinds' ), ( 'Krystal', 'Bestavros' ) } }, 'Or wherever because to appeal to handle the food, softly touched and first light an old. Tears he reported of taking care and ultimate thirst, among travellers felt it spoke go to bear. Until the air floating in himself and rested.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 8, 'Alcarel', ( 'Celisse', 'Okada' ), { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) }, [ '+86 464 404 353', '+21 445 314 464', '+25 349 781 337', '+76 741 741 236', '+46 988 258 238', '+42 274 436 486', '+59 986 732 923', '+28 956 746 157', '+21 433 762 675', '+94 564 652 508' ], { 'vrinda.sangha@live.com', 'koral.trutschel@outlook.com', 'shamsia.smolin@hotmail.com', 'joshua.mote@hotmail.com', 'dupuy.sanschagrin@live.com', 'bliss.pevzner@mail.com', 'irc.ewing@yahoo.com', 'deena.stegman@outlook.com', 'juliana.shek@outlook.com', 'fushin.kahnert@hotmail.com' }, { '+25 375 968 506' : 'Asquin Fx', '+94 526 951 219' : 'Nickells Store', '+81 111 955 555' : 'Slinkard Studio', '+86 784 773 219' : 'Harshfield Logic', '+66 419 474 737' : 'Kreiger Online', '+44 731 950 997' : 'Jubb Solutions', '+77 247 505 261' : 'Vuncannon Institute', '+26 711 851 362' : 'Malmqvist Church', '+68 217 642 787' : 'Sampat Center', '+45 884 226 429' : 'Baynes Insurance' }, '2001-02-03', { ( 'Clare', 'Boeyen' ) : '2015-07-09', ( 'Celisse', 'Okada' ) : '2015-07-09', ( 'Torey', 'Rheault' ) : '2004-04-15', ( '', '' ) : '2003-04-09', ( 'Catharine', 'Propes' ) : '2015-07-09', ( 'Malcolm', 'Beech' ) : '2008-06-19', ( 'Vicente', 'Jeffries' ) : '2008-06-19', ( 'Yalcin', 'Yaeger' ) : '2011-09-12', ( 'Janick', 'Turbyfill' ) : '2003-04-09', ( 'Wilmette', 'Lepage' ) : '2014-01-06' }, { '2010-09-09', '2014-01-06', '2003-04-09', '2008-06-19', '2011-09-12', '2004-04-15', '2006-12-11', '2001-02-03', '2015-07-09', '2009-07-19', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2015-07-09' ], { '2015-07-09' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2009-07-19' : { ( 'Irish', 'Marshaus' ), ( 'Vally', 'Dikens' ), ( 'Terrell', 'Erler' ), ( 'Klara', 'Consultancy' ), ( 'Korella', 'Firat' ), ( 'Meg', 'Vieira' ), ( 'Laslo', 'Wun' ), ( 'Follick', 'Stovall' ), ( 'Nelda', 'Davids' ), ( 'Helaine', 'Mc' ) }, '2001-02-03' : { ( 'Irish', 'Marshaus' ), ( 'Vally', 'Dikens' ), ( 'Terrell', 'Erler' ), ( 'Klara', 'Consultancy' ), ( 'Korella', 'Firat' ), ( 'Meg', 'Vieira' ), ( 'Laslo', 'Wun' ), ( 'Follick', 'Stovall' ), ( 'Nelda', 'Davids' ), ( 'Helaine', 'Mc' ) }, '2004-04-15' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2006-12-11' : { ( 'Ivor', 'Montsko' ), ( 'Naval', 'Fildey' ), ( 'Berti', 'Foubert' ), ( 'Tomy', 'Reese' ), ( 'Aditya', 'Hungle' ), ( 'Sayla', 'Soyland' ), ( 'Malcolm', 'Kirkley' ), ( 'Joell', 'Franze' ), ( 'Laury', 'Stephen' ), ( 'Georges', 'Gronwall' ) }, '2014-01-06' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2008-06-19' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2010-09-09' : { ( 'Mufi', 'Motashaw' ), ( 'Susanna', 'Maynes' ), ( 'Enis', 'Conoly' ), ( 'Marita', 'Birkwood' ), ( 'Dolorita', 'Ruaud' ), ( 'Maribel', 'Girgis' ), ( 'Pamelina', 'Benfield' ), ( 'Angy', 'Brummitt' ), ( 'Elvina', 'Teasley' ), ( 'Attilla', 'Hosseini' ) }, '2003-04-09' : { ( 'Riki', 'Guttman' ), ( 'Nalin', 'Steven' ), ( 'Ceciley', 'Dido' ), ( 'Edy', 'Eperjesy' ), ( 'Samir', 'Maroun' ), ( 'Misty', 'Aiken' ), ( 'Bess', 'Vandevalk' ), ( 'Karlon', 'Mendez' ), ( 'Lona', 'Castillo' ), ( 'Barbaraanne', 'Runkel' ) }, '2011-09-12' : { ( 'Mufi', 'Motashaw' ), ( 'Susanna', 'Maynes' ), ( 'Enis', 'Conoly' ), ( 'Marita', 'Birkwood' ), ( 'Dolorita', 'Ruaud' ), ( 'Maribel', 'Girgis' ), ( 'Pamelina', 'Benfield' ), ( 'Angy', 'Brummitt' ), ( 'Elvina', 'Teasley' ), ( 'Attilla', 'Hosseini' ) } }, 'Eternal chain a timid voice hovered over I thought, travellers of thinking people laughed about it I think, body inside that someone asked his arm. Pointed them too felt something he needed. Sat in order to consciousness thus rejuvenated.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 9, 'Gutastelayqo', ( 'Yalcin', 'Yaeger' ), { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, [ '+52 453 781 391', '+15 171 280 517', '+74 152 522 794', '+64 673 317 784', '+66 315 193 913', '+15 856 119 659', '+81 270 674 301', '+39 541 859 400', '+11 177 832 699', '+70 973 505 211' ], { 'tessty.sides@hotmail.com', 'migdalia.dignam@outlook.com', 'laurna.hayman@yahoo.com', 'behnam.nagarur@outlook.com', 'gratia.schick@gmail.com', 'cheslie.jahromi@outlook.com', 'doloritas.moosavi@mail.com', 'waneta.rea@mail.com', 'sharl.stamboulie@yahoo.com', 'rohit.kerwin@mail.com' }, { '+99 844 957 331' : 'Bates Society', '+24 902 471 145' : 'Despault Market', '+11 312 437 271' : 'Leahy Tech', '+73 503 549 894' : 'Karibian Bank', '+59 106 679 391' : 'Mcgill College', '+11 404 367 781' : 'Oreilly Club', '+89 555 235 816' : 'Belir Fx', '+15 844 604 921' : 'Dolson Fashion', '+38 510 784 401' : 'Deugau University', '+76 526 133 789' : 'Micklos Online' }, '2004-04-15', { ( 'Janick', 'Turbyfill' ) : '2009-07-19', ( 'Wilmette', 'Lepage' ) : '2001-02-03', ( 'Yalcin', 'Yaeger' ) : '2014-01-06', ( 'Catharine', 'Propes' ) : '2015-07-09', ( 'Vicente', 'Jeffries' ) : '2009-07-19', ( '', '' ) : '2014-01-06', ( 'Malcolm', 'Beech' ) : '2003-04-09', ( 'Torey', 'Rheault' ) : '2009-07-19', ( 'Clare', 'Boeyen' ) : '2008-06-19', ( 'Celisse', 'Okada' ) : '2004-04-15' }, { '2014-01-06', '2001-02-03', '2008-06-19', '2003-04-09', '2010-09-09', '2004-04-15', '2015-07-09', '2006-12-11', '2009-07-19', '2011-09-12', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2009-07-19', '2014-01-06' ], { '2004-04-15' : { ( 'Ivor', 'Montsko' ), ( 'Naval', 'Fildey' ), ( 'Berti', 'Foubert' ), ( 'Tomy', 'Reese' ), ( 'Aditya', 'Hungle' ), ( 'Sayla', 'Soyland' ), ( 'Malcolm', 'Kirkley' ), ( 'Joell', 'Franze' ), ( 'Laury', 'Stephen' ), ( 'Georges', 'Gronwall' ) }, '2015-07-09' : { ( 'Lester', 'Tjia' ), ( 'Bernadine', 'Applegarth' ), ( 'Fima', 'Kempster' ), ( 'Kaela', 'Spolar' ), ( 'Heda', 'Darroch' ), ( 'Geralda', 'Zuk' ), ( 'Britt', 'Magnuson' ), ( 'Maggy', 'Burnette' ), ( 'Claudie', 'Hinds' ), ( 'Krystal', 'Bestavros' ) }, '2008-06-19' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2010-09-09' : { ( 'Irish', 'Marshaus' ), ( 'Vally', 'Dikens' ), ( 'Terrell', 'Erler' ), ( 'Klara', 'Consultancy' ), ( 'Korella', 'Firat' ), ( 'Meg', 'Vieira' ), ( 'Laslo', 'Wun' ), ( 'Follick', 'Stovall' ), ( 'Nelda', 'Davids' ), ( 'Helaine', 'Mc' ) }, '2006-12-11' : { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) }, '2014-01-06' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2001-02-03' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2003-04-09' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2011-09-12' : { ( '', '' ), ( '', '' ) }, '2009-07-19' : { ( 'Ivor', 'Montsko' ), ( 'Naval', 'Fildey' ), ( 'Berti', 'Foubert' ), ( 'Tomy', 'Reese' ), ( 'Aditya', 'Hungle' ), ( 'Sayla', 'Soyland' ), ( 'Malcolm', 'Kirkley' ), ( 'Joell', 'Franze' ), ( 'Laury', 'Stephen' ), ( 'Georges', 'Gronwall' ) } }, 'Warrior and write something dying people can''t. Truly searching still aware that you recognise me, remained as bright almost forever etched in him.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 10, 'Krisikrix', ( 'Janick', 'Turbyfill' ), { ( 'Mufi', 'Motashaw' ), ( 'Susanna', 'Maynes' ), ( 'Enis', 'Conoly' ), ( 'Marita', 'Birkwood' ), ( 'Dolorita', 'Ruaud' ), ( 'Maribel', 'Girgis' ), ( 'Pamelina', 'Benfield' ), ( 'Angy', 'Brummitt' ), ( 'Elvina', 'Teasley' ), ( 'Attilla', 'Hosseini' ) }, [ '+30 872 925 245', '+99 441 920 838', '+71 405 815 125', '+97 339 576 377', '+55 210 794 667', '+49 425 631 189', '+70 257 692 995', '+24 463 607 534', '+54 293 436 386', '+80 514 412 499' ], { 'brandea.hr@gmail.com', 'ilsa.christl@mail.com', 'laine.todo@yahoo.com', 'hedwiga.sigut@yahoo.com', 'midge.lienhard@gmail.com', 'elicia.sarrazin@hotmail.com', 'adelice.ordway@mail.com', 'cordey.vanderveen@live.com', 'zdenko.walrond@gmail.com', 'rivkah.maennling@outlook.com' }, { '+38 525 408 883' : 'Krueger Cooperative', '+42 478 629 811' : 'Paulett University', '+79 761 218 924' : 'Gramiak Cooperative', '+41 414 330 290' : 'Mcsheffrey Market', '+46 288 397 361' : 'Lidster Store', '+47 661 772 148' : 'Brys Foundation', '+77 245 245 709' : 'Majd Online', '+71 581 400 247' : 'Marson Studio', '+49 751 154 987' : 'Doss Logic', '+20 494 890 418' : 'Kay Limited' }, '2009-07-19', { ( 'Malcolm', 'Beech' ) : '2014-01-06', ( '', '' ) : '2014-01-06', ( 'Catharine', 'Propes' ) : '2010-09-09', ( 'Yalcin', 'Yaeger' ) : '2008-06-19', ( 'Vicente', 'Jeffries' ) : '2003-04-09', ( 'Janick', 'Turbyfill' ) : '2014-01-06', ( 'Celisse', 'Okada' ) : '2006-12-11', ( 'Torey', 'Rheault' ) : '2008-06-19', ( 'Clare', 'Boeyen' ) : '2011-09-12', ( 'Wilmette', 'Lepage' ) : '2001-02-03' }, { '2009-07-19', '2015-07-09', '2011-09-12', '2014-01-06', '2001-02-03', '2008-06-19', '2004-04-15', '2006-12-11', '2003-04-09', '2010-09-09', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2003-04-09', '2004-04-15' ], { '2006-12-11' : { ( 'Mufi', 'Motashaw' ), ( 'Susanna', 'Maynes' ), ( 'Enis', 'Conoly' ), ( 'Marita', 'Birkwood' ), ( 'Dolorita', 'Ruaud' ), ( 'Maribel', 'Girgis' ), ( 'Pamelina', 'Benfield' ), ( 'Angy', 'Brummitt' ), ( 'Elvina', 'Teasley' ), ( 'Attilla', 'Hosseini' ) }, '2010-09-09' : { ( 'Lindsey', 'Korbe' ), ( 'Correna', 'Vinnell' ), ( 'Nettie', 'Szopinski' ), ( 'Leona', 'Hunter' ), ( 'Belleville', 'Ciccarelli' ), ( 'Carena', 'Waldick' ), ( 'Buford', 'Levin' ), ( 'Kiley', 'Sommer' ), ( 'Stock', 'Einersen' ), ( 'Tionghoe', 'Brasington' ) }, '2015-07-09' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2011-09-12' : { ( 'Irish', 'Marshaus' ), ( 'Vally', 'Dikens' ), ( 'Terrell', 'Erler' ), ( 'Klara', 'Consultancy' ), ( 'Korella', 'Firat' ), ( 'Meg', 'Vieira' ), ( 'Laslo', 'Wun' ), ( 'Follick', 'Stovall' ), ( 'Nelda', 'Davids' ), ( 'Helaine', 'Mc' ) }, '2008-06-19' : { ( 'Ric', 'Tubb' ), ( 'Margeaux', 'Sammon' ), ( 'Feiyin', 'Deng' ), ( 'Almire', 'Joson' ), ( 'Kirstin', 'Cardozo' ), ( 'Imogene', 'Barbary' ), ( 'Fidelia', 'Ludwig' ), ( 'Keeley', 'Barr' ), ( 'Eoin', 'Kosiorska' ), ( 'Morna', 'Lotochinski' ) }, '2009-07-19' : { ( 'Mufi', 'Motashaw' ), ( 'Susanna', 'Maynes' ), ( 'Enis', 'Conoly' ), ( 'Marita', 'Birkwood' ), ( 'Dolorita', 'Ruaud' ), ( 'Maribel', 'Girgis' ), ( 'Pamelina', 'Benfield' ), ( 'Angy', 'Brummitt' ), ( 'Elvina', 'Teasley' ), ( 'Attilla', 'Hosseini' ) }, '2004-04-15' : { ( 'Ivor', 'Montsko' ), ( 'Naval', 'Fildey' ), ( 'Berti', 'Foubert' ), ( 'Tomy', 'Reese' ), ( 'Aditya', 'Hungle' ), ( 'Sayla', 'Soyland' ), ( 'Malcolm', 'Kirkley' ), ( 'Joell', 'Franze' ), ( 'Laury', 'Stephen' ), ( 'Georges', 'Gronwall' ) }, '2003-04-09' : { ( 'Ivor', 'Montsko' ), ( 'Naval', 'Fildey' ), ( 'Berti', 'Foubert' ), ( 'Tomy', 'Reese' ), ( 'Aditya', 'Hungle' ), ( 'Sayla', 'Soyland' ), ( 'Malcolm', 'Kirkley' ), ( 'Joell', 'Franze' ), ( 'Laury', 'Stephen' ), ( 'Georges', 'Gronwall' ) }, '2014-01-06' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-03' : { ( 'Wilhelmus', 'Sturdivant' ), ( 'Cordelia', 'Longfield' ), ( 'Veda', 'Gregg' ), ( 'Kym', 'Fernald' ), ( 'Ardene', 'Knouse' ), ( 'Gracie', 'Elbi' ), ( 'Hans', 'Nessman' ), ( 'Hadi', 'Hixson' ), ( 'Janos', 'Mattes' ), ( 'Gertruda', 'Lineham' ) } }, 'Should live according to tell him without mockery, came through enlightenment had lasted his thirst tiredness, you''ll make it was shimmering in one his chest. Know nothing yet repeated murmuring the branches and evening.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5, 'first', 1, ' This is the first text, with spaces ' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612, 'second', 2, 'This is the second text, with escaped characters ^~{}' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524, 'third', 3, 'This is the third text§with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -7654305769731274948, c0759f24-1649-8708-841e-7975566360ce, 'fourth', 4, 'This is the fourth text§also with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 8190536675626372929, c4d0bdb0-2302-4939-9906-5570494806e3, 'Traut', 221, 'Accepted and answers and drunk far from you, put his masterful skills until his stomach listened silently. Eyes long laborious life had others of monks, fasting and learning to me any goals.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 413791340510883411, 28c5df58-8198-4281-50d6-0046a36183a8, 'Tyner', 831, 'Tales and not venerate and cooked rice there, pearls he silently into deception called name, broke loose embraced once it out from foolishness.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 4752436224516713098, 819524c4-6517-4009-d24c-54338faddb04, 'Leiwe', 242, 'Knew little pleasures these pleasures for yours. Ferryman looked up though without the wound. Else I searched I wouldn''t punish him, broke loose embraced once he shook himself fall. Image the courtesy and done well from me.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 548695948040832316, df0982bf-6f3e-4c2a-99f8-1953900d3db5, 'Zorzi', 694, 'Your father appeared on slender legs in words exclaimed, of sickliness of transformations therefore I see, this piece of perfect everything hard for you.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 4065027841501332541, b8f5ea42-5e7d-42d0-f286-ed2ccf70f8b7, 'Kemish', 301, 'Monk and wishes and patience listening attentively. Saw young fish costs and so now see. A shaven head sitting on gods together with, soon they heard a village for help his shoulder.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 3460344806704043088, 9e5fed2d-1321-4907-b686-87cd95a03993, 'Mangione', 840, 'Join us await with you venerable among people. Near death a magic or mold or to beg, near which used the banana she uttered a river. O he returned extremely satisfied from foolishness.' );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 7538af47-c794-4726-702a-389de826fa4c, 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 3d239e99-6251-43fd-cc12-89d3d3449847, -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 23f81f28-e30e-416e-6fc6-134aca9f1b8b, -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 324834c9-0ddf-4e3f-555d-669ebd91c34e, -5359923222225123686, 0883a652-0e6e-b6c9-304d-cfb71034d053 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 345d01f4-6a84-425b-aa88-63a13a78bbcc, 8190536675626372929, c0759f24-1649-8708-841e-7975566360ce );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( ee382142-e7cd-450f-bbd1-a5a01cd747c6, 3344523601393165508, c0759f24-1649-8708-841e-7975566360ce );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 1bbe1b7f-56df-4180-cc2e-c0d7274144d1, 3344523601393165508, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( b97e4848-229e-442f-32ca-d253c2a51be8, 3344523601393165508, c0759f24-1649-8708-841e-7975566360ce );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 5fceeb43-4248-458a-637f-ed4df0b6ad72, 8190536675626372929, c4d0bdb0-2302-4939-9906-5570494806e3 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 4e001382-21e9-4cbc-9709-0708ed90c964, 3460344806704043088, c4d0bdb0-2302-4939-9906-5570494806e3 );
