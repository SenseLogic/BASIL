insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 8dbdda48-fb87-48d6-746f-1965824e966a, false, 1, 2, 3, 4, 5, 6, 7, 8, 1.1, 2.2, 'Hello world!', 'Ficici', '2001-02-03', '2001-02-03 04:05:06.789', 0x123456781234567891234567812345678, 'second_Ficici' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 57cb372b-65a2-4e12-f7bc-0ac025d8e8cb, true, 29, 91, 286, 922, 450, 70, 720, 526, 16.76, 79.82, 'Ookewat', 'Sirevicius', '2013-04-09', '2006-03-18 11:25:00', 0x49a3953b5fd48edec193, 'third_2013-04-09' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 5fd4b6bc-0de6-4182-d6c4-a392192d0daa, false, 52, 17, 127, 115, 839, 684, 39, 316, 72.48, 15.95, 'Ellemliddid', 'Corey', '2004-06-01', '2013-08-24 17:14:26', 0xe4a98233cc9010a48b37, 'first_Ellemliddid' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 17f932c3-5e55-4858-b13a-6789af88825c, true, 96, 80, 62, 675, 205, 292, 453, 812, 87.11, 46.72, 'Nahumarral', 'Ebrahim', '2003-01-11', '2011-08-28 22:12:39', 0xf615fd8b21bd2ad023d4, 'first_Nahumarral' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 8c4e347c-6718-405c-91c9-d4ae2f06acbc, true, 65, 60, 405, 855, 882, 747, 769, 782, 56.32, 80.65, 'Orsirfyu', 'Zargham', '2010-05-15', '2010-10-02 19:10:28', 0x255085677837c7fbebe9, 'first_Orsirfyu' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( b6bc187d-fc50-4d95-f6cb-33fe0a2b659a, true, 8, 82, 670, 827, 705, 153, 991, 148, 50.51, 91.56, 'Mollane', 'Whelpdale', '2014-12-09', '2009-05-14 17:52:12', 0xd8caac76ec1a1d7696a2, 'first_Mollane' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 0b27c6ea-3c1a-4b4e-b881-3c3e53acac67, false, 60, 90, 41, 864, 677, 41, 989, 796, 74.39, 45.16, 'Etysadellaky', 'Rahman', '2012-10-11', '2007-04-15 07:14:40', 0x745bcdc6c040219dde9f, 'second_Rahman' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 82eb5e77-224b-4f8c-d9a7-e91d4cb8e180, false, 56, 44, 625, 499, 240, 500, 928, 547, 86.49, 57.37, 'Lesacereku', 'Nabors', '2009-05-22', '2000-03-13 14:21:35', 0xcfd359ef1a644da76efa, 'first_Lesacereku' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 47e9c780-bf2c-4492-47a1-15c67b69d1a5, true, 82, 43, 666, 855, 54, 216, 849, 179, 10.98, 75.69, 'Otsunnisabby', 'Clapham', '2009-09-15', '2004-04-14 12:27:35', 0x6d56a2c4230bad432887, 'first_Otsunnisabby' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 91b972c7-ff2a-498d-ad75-0177ba71cf5b, false, 49, 29, 591, 252, 176, 796, 47, 203, 27.14, 15.34, 'Ackaettie', 'Kember', '2000-09-08', '2001-09-13 00:51:48', 0xc91805a34ddcd1b2e61c, 'second_Kember' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 1, 'Belgium', ( 'Malcolm', 'Beech' ), { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, [ '12345678', '23456789' ], { 'jack.harper@gmail.com', 'victoria.olsen@outlook.com' }, { '12345678' : 'Warner Bros', '23456789' : 'Universal Pictures' }, '2013-04-09', { ( 'Morna', 'Heffner' ) : '2009-09-15', ( 'Avis', 'Serbin' ) : '2010-05-15', ( 'Emalia', 'Patteson' ) : '2004-06-01', ( 'Malcolm', 'Beech' ) : '2014-12-09', ( 'Greet', 'Medeiros' ) : '2012-10-11', ( 'Valenka', 'Lamarche' ) : '2009-05-22', ( '', '' ) : '2000-09-08', ( 'Edna', 'Capps' ) : '2004-06-01', ( 'Koral', 'Gruska' ) : '2003-01-11', ( 'Schell', 'Whitwam' ) : '2012-10-11' }, { '2013-04-09', '2009-09-15', '2004-06-01', '2010-05-15', '2014-12-09', '2009-05-22', '2000-09-08', '2012-10-11', '2003-01-11', '2001-02-03', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2012-10-11', '2009-05-22' ], { '2009-09-15' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-03' : { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) }, '2000-09-08' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2010-05-15' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2009-05-22' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2004-06-01' : { ( '', '' ), ( '', '' ) }, '2014-12-09' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2003-01-11' : { ( 'Kit', 'Loughran' ), ( 'Liem', 'Cadieux' ), ( 'Courtenay', 'Bundschuh' ), ( 'Ilan', 'Zabokrzycki' ), ( 'Anabelle', 'Drane' ), ( 'Abel', 'Macalik' ), ( 'Bethina', 'Projofc' ), ( 'Britney', 'Schulze' ), ( 'Juliette', 'Hooper' ), ( 'Nelleke', 'Linegar' ) }, '2012-10-11' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2013-04-09' : { ( '', '' ), ( '', '' ) } }, '{}' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 2, '', ( '', '' ), { ( '', '' ), ( '', '' ) }, [ '', '' ], { 'rick.deckard@gmail.com', 'dave.holden@outlook.com' }, { '12345678' : '', '23456789' : '' }, '2003-01-11', { ( 'Avis', 'Serbin' ) : '2010-05-15', ( 'Valenka', 'Lamarche' ) : '2010-05-15', ( '', '' ) : '2012-10-11', ( 'Morna', 'Heffner' ) : '2010-05-15', ( 'Greet', 'Medeiros' ) : '2003-01-11', ( 'Edna', 'Capps' ) : '2010-05-15', ( 'Malcolm', 'Beech' ) : '2003-01-11', ( 'Emalia', 'Patteson' ) : '2012-10-11', ( 'Schell', 'Whitwam' ) : '2013-04-09', ( 'Koral', 'Gruska' ) : '2010-05-15' }, { '2009-09-15', '2000-09-08', '2010-05-15', '2009-05-22', '2001-02-03', '2013-04-09', '2004-06-01', '2003-01-11', '2014-12-09', '2012-10-11', '', '', '', '', '', '', '', '', '', '' }, [ '2009-09-15', '2009-09-15', '2004-06-01' ], { '2014-12-09' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2010-05-15' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2009-09-15' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2001-02-03' : { ( 'Jackson', 'Risto' ), ( 'Fae', 'Loza' ), ( 'Rosemarie', 'Kryski' ), ( 'Tami', 'Timler' ), ( 'Tybi', 'Curmon' ), ( 'Normand', 'Kemkeng' ), ( 'Terri', 'Callanan' ), ( 'Lenny', 'Shen' ), ( 'Rashid', 'Fleurima' ), ( 'Yannick', 'Leuty' ) }, '2000-09-08' : { ( 'Kit', 'Loughran' ), ( 'Liem', 'Cadieux' ), ( 'Courtenay', 'Bundschuh' ), ( 'Ilan', 'Zabokrzycki' ), ( 'Anabelle', 'Drane' ), ( 'Abel', 'Macalik' ), ( 'Bethina', 'Projofc' ), ( 'Britney', 'Schulze' ), ( 'Juliette', 'Hooper' ), ( 'Nelleke', 'Linegar' ) }, '2009-05-22' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2003-01-11' : { ( 'Maridel', 'Campos' ), ( 'Melly', 'Jamison' ), ( 'Jonis', 'Bellehumeur' ), ( 'Discover', 'Begley' ), ( 'Silvia', 'Klaassen' ), ( 'Dolly', 'Morek' ), ( 'Philippa', 'Brum' ), ( 'Theressa', 'Piecaitis' ), ( 'Riva', 'Wacker' ), ( 'Dareen', 'Xu' ) }, '2013-04-09' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2004-06-01' : { ( '', '' ), ( '', '' ) }, '2012-10-11' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) } }, '' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 3, 'Ottowendyx', ( 'Schell', 'Whitwam' ), { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, [ '+71 867 916 550', '+37 116 382 399', '+44 621 368 889', '+63 765 419 635', '+29 632 593 809', '+24 589 582 472', '+64 197 885 868', '+18 580 874 810', '+74 811 392 981', '+43 665 419 573' ], { 'aviva.silianu@live.com', 'poppy.vowels@mail.com', 'edouard.hoque@outlook.com', 'dorey.maclean@gmail.com', 'hweiling.pinel@yahoo.com', 'niel.bullard@outlook.com', 'mustapha.michaels@live.com', 'velvet.ovas@hotmail.com', 'liem.maynard@gmail.com', 'aridatha.mccartin@live.com' }, { '+98 729 880 547' : 'Viens Club', '+33 590 832 894' : 'Vettese Foundation', '+84 834 271 442' : 'Mckechnie Tech', '+32 662 570 452' : 'Carle Company', '+35 342 622 604' : 'Mikhail Central', '+90 770 481 269' : 'Gunasekera Fund', '+30 392 728 364' : 'Abadines Network', '+52 462 352 502' : 'Austin Church', '+31 196 191 567' : 'Schick Market', '+70 659 253 270' : 'Holdaway Store' }, '2003-01-11', { ( 'Avis', 'Serbin' ) : '2009-05-22', ( 'Morna', 'Heffner' ) : '2003-01-11', ( '', '' ) : '2009-09-15', ( 'Malcolm', 'Beech' ) : '2014-12-09', ( 'Schell', 'Whitwam' ) : '2014-12-09', ( 'Valenka', 'Lamarche' ) : '2001-02-03', ( 'Koral', 'Gruska' ) : '2009-05-22', ( 'Emalia', 'Patteson' ) : '2010-05-15', ( 'Edna', 'Capps' ) : '2004-06-01', ( 'Greet', 'Medeiros' ) : '2014-12-09' }, { '2009-05-22', '2004-06-01', '2013-04-09', '2001-02-03', '2003-01-11', '2010-05-15', '2000-09-08', '2014-12-09', '2009-09-15', '2012-10-11', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2001-02-03' ], { '2001-02-03' : { ( 'Maridel', 'Campos' ), ( 'Melly', 'Jamison' ), ( 'Jonis', 'Bellehumeur' ), ( 'Discover', 'Begley' ), ( 'Silvia', 'Klaassen' ), ( 'Dolly', 'Morek' ), ( 'Philippa', 'Brum' ), ( 'Theressa', 'Piecaitis' ), ( 'Riva', 'Wacker' ), ( 'Dareen', 'Xu' ) }, '2000-09-08' : { ( 'Jackson', 'Risto' ), ( 'Fae', 'Loza' ), ( 'Rosemarie', 'Kryski' ), ( 'Tami', 'Timler' ), ( 'Tybi', 'Curmon' ), ( 'Normand', 'Kemkeng' ), ( 'Terri', 'Callanan' ), ( 'Lenny', 'Shen' ), ( 'Rashid', 'Fleurima' ), ( 'Yannick', 'Leuty' ) }, '2010-05-15' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2012-10-11' : { ( 'Kit', 'Loughran' ), ( 'Liem', 'Cadieux' ), ( 'Courtenay', 'Bundschuh' ), ( 'Ilan', 'Zabokrzycki' ), ( 'Anabelle', 'Drane' ), ( 'Abel', 'Macalik' ), ( 'Bethina', 'Projofc' ), ( 'Britney', 'Schulze' ), ( 'Juliette', 'Hooper' ), ( 'Nelleke', 'Linegar' ) }, '2009-05-22' : { ( 'Suki', 'Prestonthomas' ), ( 'Retha', 'Srikrishna' ), ( 'Yves', 'Preece' ), ( 'Harmonia', 'Popowycz' ), ( 'Gayleen', 'Simonsen' ), ( 'Trisha', 'Payne' ), ( 'Maye', 'Priestley' ), ( 'Lanita', 'Heybroek' ), ( 'Maroun', 'Firerobin' ), ( 'Fil', 'Tooyserkani' ) }, '2009-09-15' : { ( 'Jackson', 'Risto' ), ( 'Fae', 'Loza' ), ( 'Rosemarie', 'Kryski' ), ( 'Tami', 'Timler' ), ( 'Tybi', 'Curmon' ), ( 'Normand', 'Kemkeng' ), ( 'Terri', 'Callanan' ), ( 'Lenny', 'Shen' ), ( 'Rashid', 'Fleurima' ), ( 'Yannick', 'Leuty' ) }, '2014-12-09' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2003-01-11' : { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) }, '2013-04-09' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2004-06-01' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) } }, 'Willingness my benefactor spoke wouldn''t punish him against them, indignant he displayed a stop thus childlike person, goal is holy word which consisted in grief. Tell him found refuge in meditation he belong to, weren''t you subject to abstain from myself.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 4, 'Olohuy', ( 'Edna', 'Capps' ), { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) }, [ '+58 652 172 983', '+68 274 570 151', '+85 899 609 612', '+27 866 888 800', '+10 673 279 460', '+16 800 833 664', '+35 366 353 383', '+91 381 430 148', '+76 526 328 157', '+38 342 979 430' ], { 'tavis.kinsman@live.com', 'vanking.newland@gmail.com', 'ott.weaver@gmail.com', 'faiz.beshir@outlook.com', 'rilla.hartgrove@hotmail.com', 'kyle.barkwill@yahoo.com', 'dani.clason@hotmail.com', 'fletcher.wepf@live.com', 'felipa.roehl@hotmail.com', 'joyan.han@outlook.com' }, { '+37 635 533 293' : 'Yerneni Tech', '+90 288 584 518' : 'Fallows Design', '+46 401 294 907' : 'Skwarok Corporation', '+36 907 905 264' : 'Sabo Shop', '+93 776 243 763' : 'Carle Limited', '+92 499 847 619' : 'Meggitt Network', '+90 345 972 738' : 'Everitt Solutions', '+43 790 818 533' : 'Millette Vision', '+86 169 141 175' : 'Nipper Online', '+39 744 276 173' : 'Cleroux News' }, '2000-09-08', { ( 'Valenka', 'Lamarche' ) : '2009-05-22', ( 'Greet', 'Medeiros' ) : '2001-02-03', ( 'Avis', 'Serbin' ) : '2003-01-11', ( 'Emalia', 'Patteson' ) : '2009-09-15', ( 'Koral', 'Gruska' ) : '2009-05-22', ( 'Edna', 'Capps' ) : '2014-12-09', ( 'Morna', 'Heffner' ) : '2013-04-09', ( '', '' ) : '2001-02-03', ( 'Schell', 'Whitwam' ) : '2010-05-15', ( 'Malcolm', 'Beech' ) : '2000-09-08' }, { '2013-04-09', '2000-09-08', '2010-05-15', '2001-02-03', '2014-12-09', '2003-01-11', '2009-05-22', '2009-09-15', '2012-10-11', '2004-06-01', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2001-02-03', '2014-12-09' ], { '2013-04-09' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2012-10-11' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2003-01-11' : { ( 'Maridel', 'Campos' ), ( 'Melly', 'Jamison' ), ( 'Jonis', 'Bellehumeur' ), ( 'Discover', 'Begley' ), ( 'Silvia', 'Klaassen' ), ( 'Dolly', 'Morek' ), ( 'Philippa', 'Brum' ), ( 'Theressa', 'Piecaitis' ), ( 'Riva', 'Wacker' ), ( 'Dareen', 'Xu' ) }, '2004-06-01' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2009-09-15' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2010-05-15' : { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) }, '2000-09-08' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2009-05-22' : { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) }, '2001-02-03' : { ( 'Suki', 'Prestonthomas' ), ( 'Retha', 'Srikrishna' ), ( 'Yves', 'Preece' ), ( 'Harmonia', 'Popowycz' ), ( 'Gayleen', 'Simonsen' ), ( 'Trisha', 'Payne' ), ( 'Maye', 'Priestley' ), ( 'Lanita', 'Heybroek' ), ( 'Maroun', 'Firerobin' ), ( 'Fil', 'Tooyserkani' ) }, '2014-12-09' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) } }, 'Accepted and received evermore a wish of him, fine oil or she asked how rejecting, children were water thus soul an accusation in grief. Here opened mouth how despicable how do nothing else.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 5, 'Allocy', ( 'Emalia', 'Patteson' ), { ( 'Maridel', 'Campos' ), ( 'Melly', 'Jamison' ), ( 'Jonis', 'Bellehumeur' ), ( 'Discover', 'Begley' ), ( 'Silvia', 'Klaassen' ), ( 'Dolly', 'Morek' ), ( 'Philippa', 'Brum' ), ( 'Theressa', 'Piecaitis' ), ( 'Riva', 'Wacker' ), ( 'Dareen', 'Xu' ) }, [ '+64 271 673 510', '+33 118 803 985', '+44 723 551 738', '+96 502 724 326', '+34 747 492 132', '+68 705 338 231', '+99 212 387 914', '+77 619 954 681', '+15 877 127 857', '+13 514 288 427' ], { 'amparo.ticzon@hotmail.com', 'leigh.viehweg@hotmail.com', 'myron.zoellner@outlook.com', 'ardie.decacqueray@mail.com', 'eryn.ircinternaldocs@hotmail.com', 'ganesh.redway@outlook.com', 'sophronia.carkner@live.com', 'annora.weaver@gmail.com', 'gerhard.landon@mail.com', 'pulak.tools@live.com' }, { '+71 301 806 584' : 'Swinkels Consulting', '+57 805 486 964' : 'Mussallem Consulting', '+35 879 656 740' : 'Hengeveld Group', '+75 357 460 733' : 'Hassan Magazine', '+52 451 705 186' : 'Gutzmann Magazine', '+12 212 431 926' : 'Baxter Store', '+25 127 913 850' : 'Gunawan Center', '+25 783 484 677' : 'Butts Vision', '+70 589 869 249' : 'Mooyoung Limited', '+63 127 854 328' : 'Kirley Association' }, '2009-09-15', { ( 'Edna', 'Capps' ) : '2000-09-08', ( 'Valenka', 'Lamarche' ) : '2010-05-15', ( 'Malcolm', 'Beech' ) : '2003-01-11', ( 'Koral', 'Gruska' ) : '2001-02-03', ( 'Avis', 'Serbin' ) : '2014-12-09', ( '', '' ) : '2010-05-15', ( 'Morna', 'Heffner' ) : '2000-09-08', ( 'Emalia', 'Patteson' ) : '2013-04-09', ( 'Greet', 'Medeiros' ) : '2014-12-09', ( 'Schell', 'Whitwam' ) : '2009-05-22' }, { '2000-09-08', '2001-02-03', '2014-12-09', '2010-05-15', '2009-09-15', '2003-01-11', '2004-06-01', '2009-05-22', '2012-10-11', '2013-04-09', '', '', '', '', '', '', '', '', '' }, [ '2009-09-15' ], { '2001-02-03' : { ( 'Suki', 'Prestonthomas' ), ( 'Retha', 'Srikrishna' ), ( 'Yves', 'Preece' ), ( 'Harmonia', 'Popowycz' ), ( 'Gayleen', 'Simonsen' ), ( 'Trisha', 'Payne' ), ( 'Maye', 'Priestley' ), ( 'Lanita', 'Heybroek' ), ( 'Maroun', 'Firerobin' ), ( 'Fil', 'Tooyserkani' ) }, '2012-10-11' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2014-12-09' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2004-06-01' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2009-05-22' : { ( 'Maridel', 'Campos' ), ( 'Melly', 'Jamison' ), ( 'Jonis', 'Bellehumeur' ), ( 'Discover', 'Begley' ), ( 'Silvia', 'Klaassen' ), ( 'Dolly', 'Morek' ), ( 'Philippa', 'Brum' ), ( 'Theressa', 'Piecaitis' ), ( 'Riva', 'Wacker' ), ( 'Dareen', 'Xu' ) }, '2009-09-15' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2003-01-11' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2013-04-09' : { ( 'Suki', 'Prestonthomas' ), ( 'Retha', 'Srikrishna' ), ( 'Yves', 'Preece' ), ( 'Harmonia', 'Popowycz' ), ( 'Gayleen', 'Simonsen' ), ( 'Trisha', 'Payne' ), ( 'Maye', 'Priestley' ), ( 'Lanita', 'Heybroek' ), ( 'Maroun', 'Firerobin' ), ( 'Fil', 'Tooyserkani' ) }, '2000-09-08' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2010-05-15' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) } }, 'Deaf and weighed it slowly and told about this, has stopped fighting his separation from an. Have stayed where are also left but it already, him very end in anything enter the bamboo-wood.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 6, 'Florinegery', ( 'Greet', 'Medeiros' ), { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, [ '+47 427 900 703', '+17 134 185 558', '+85 913 187 305', '+21 705 966 151', '+53 567 443 806', '+19 645 742 611', '+48 629 736 944', '+47 663 303 554', '+11 303 141 549', '+34 789 268 581' ], { 'fiona.nanamiya@yahoo.com', 'sanchez.vreugdenhil@gmail.com', 'foad.klodt@hotmail.com', 'mail.rolland@gmail.com', 'dodi.oucharek@live.com', 'lonee.luciani@outlook.com', 'tewei.joron@hotmail.com', 'dis.konomis@hotmail.com', 'benefits.kudas@gmail.com', 'noni.carlton@gmail.com' }, { '+16 418 778 665' : 'Pommainville Network', '+62 601 695 181' : 'Shamblin Insurance', '+23 303 942 170' : 'Elgar Software', '+76 301 341 110' : 'Yassa Society', '+82 629 236 512' : 'Soucie Tech', '+83 431 374 839' : 'Hine Express', '+10 372 303 272' : 'Shew Logic', '+19 407 529 290' : 'Paquin Design', '+66 193 139 164' : 'Bergstrom Insurance', '+30 569 258 159' : 'Locke Services' }, '2014-12-09', { ( 'Emalia', 'Patteson' ) : '2009-09-15', ( 'Koral', 'Gruska' ) : '2012-10-11', ( 'Edna', 'Capps' ) : '2009-05-22', ( 'Schell', 'Whitwam' ) : '2014-12-09', ( 'Valenka', 'Lamarche' ) : '2004-06-01', ( 'Morna', 'Heffner' ) : '2000-09-08', ( 'Malcolm', 'Beech' ) : '2009-05-22', ( 'Avis', 'Serbin' ) : '2000-09-08', ( 'Greet', 'Medeiros' ) : '2010-05-15', ( '', '' ) : '2013-04-09' }, { '2009-05-22', '2012-10-11', '2013-04-09', '2000-09-08', '2003-01-11', '2010-05-15', '2014-12-09', '2009-09-15', '2001-02-03', '2004-06-01', '', '', '', '', '', '', '', '', '', '' }, [ '2012-10-11', '2001-02-03' ], { '2010-05-15' : { ( 'Suki', 'Prestonthomas' ), ( 'Retha', 'Srikrishna' ), ( 'Yves', 'Preece' ), ( 'Harmonia', 'Popowycz' ), ( 'Gayleen', 'Simonsen' ), ( 'Trisha', 'Payne' ), ( 'Maye', 'Priestley' ), ( 'Lanita', 'Heybroek' ), ( 'Maroun', 'Firerobin' ), ( 'Fil', 'Tooyserkani' ) }, '2003-01-11' : { ( '', '' ), ( '', '' ) }, '2012-10-11' : { ( 'Maridel', 'Campos' ), ( 'Melly', 'Jamison' ), ( 'Jonis', 'Bellehumeur' ), ( 'Discover', 'Begley' ), ( 'Silvia', 'Klaassen' ), ( 'Dolly', 'Morek' ), ( 'Philippa', 'Brum' ), ( 'Theressa', 'Piecaitis' ), ( 'Riva', 'Wacker' ), ( 'Dareen', 'Xu' ) }, '2014-12-09' : { ( 'Jackson', 'Risto' ), ( 'Fae', 'Loza' ), ( 'Rosemarie', 'Kryski' ), ( 'Tami', 'Timler' ), ( 'Tybi', 'Curmon' ), ( 'Normand', 'Kemkeng' ), ( 'Terri', 'Callanan' ), ( 'Lenny', 'Shen' ), ( 'Rashid', 'Fleurima' ), ( 'Yannick', 'Leuty' ) }, '2004-06-01' : { ( 'Suki', 'Prestonthomas' ), ( 'Retha', 'Srikrishna' ), ( 'Yves', 'Preece' ), ( 'Harmonia', 'Popowycz' ), ( 'Gayleen', 'Simonsen' ), ( 'Trisha', 'Payne' ), ( 'Maye', 'Priestley' ), ( 'Lanita', 'Heybroek' ), ( 'Maroun', 'Firerobin' ), ( 'Fil', 'Tooyserkani' ) }, '2009-09-15' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2000-09-08' : { ( '', '' ), ( '', '' ) }, '2009-05-22' : { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) }, '2013-04-09' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2001-02-03' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) } }, 'Times of a banana she loved and smiling thanked, children have always watched the thirst tiredness, false god it became confused and taking shape. He''ll accept you wanted for we are old man''s, pilgrims do therefore good everything the ferry-boat for them.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 7, 'Addolafeste', ( 'Koral', 'Gruska' ), { ( 'Kit', 'Loughran' ), ( 'Liem', 'Cadieux' ), ( 'Courtenay', 'Bundschuh' ), ( 'Ilan', 'Zabokrzycki' ), ( 'Anabelle', 'Drane' ), ( 'Abel', 'Macalik' ), ( 'Bethina', 'Projofc' ), ( 'Britney', 'Schulze' ), ( 'Juliette', 'Hooper' ), ( 'Nelleke', 'Linegar' ) }, [ '+39 996 338 332', '+45 736 270 712', '+24 232 503 254', '+67 799 629 472', '+56 236 192 936', '+81 962 251 249', '+50 690 833 156', '+31 194 270 262', '+96 798 815 273', '+21 611 212 623' ], { 'maria.downing@outlook.com', 'anabella.fleuchaus@gmail.com', 'joly.communications@mail.com', 'dru.ghelarducci@outlook.com', 'dewi.kalnitsky@outlook.com', 'pardo.nicholl@outlook.com', 'stephane.sherk@outlook.com', 'anver.bogal@live.com', 'abigael.khalilzadeh@gmail.com', 'lydie.landon@live.com' }, { '+43 923 802 761' : 'Remrey Studio', '+77 879 825 683' : 'Girgis Fashion', '+53 532 516 902' : 'Nill Channel', '+70 468 285 234' : 'Craib Software', '+69 620 982 494' : 'Cinqmars Online', '+52 449 648 129' : 'Nomura Labs', '+63 761 337 306' : 'Cramm Church', '+58 320 735 758' : 'Davidson Foundation', '+50 594 710 996' : 'Sei Fx', '+66 388 951 730' : 'Scomello Market' }, '2000-09-08', { ( 'Greet', 'Medeiros' ) : '2001-02-03', ( 'Emalia', 'Patteson' ) : '2009-05-22', ( '', '' ) : '2012-10-11', ( 'Avis', 'Serbin' ) : '2001-02-03', ( 'Edna', 'Capps' ) : '2010-05-15', ( 'Koral', 'Gruska' ) : '2000-09-08', ( 'Malcolm', 'Beech' ) : '2014-12-09', ( 'Valenka', 'Lamarche' ) : '2009-05-22', ( 'Schell', 'Whitwam' ) : '2014-12-09', ( 'Morna', 'Heffner' ) : '2013-04-09' }, { '2013-04-09', '2004-06-01', '2009-09-15', '2000-09-08', '2001-02-03', '2010-05-15', '2014-12-09', '2003-01-11', '2012-10-11', '2009-05-22', '', '', '', '' }, [ '2012-10-11', '2001-02-03' ], { '2009-05-22' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2010-05-15' : { ( 'Suki', 'Prestonthomas' ), ( 'Retha', 'Srikrishna' ), ( 'Yves', 'Preece' ), ( 'Harmonia', 'Popowycz' ), ( 'Gayleen', 'Simonsen' ), ( 'Trisha', 'Payne' ), ( 'Maye', 'Priestley' ), ( 'Lanita', 'Heybroek' ), ( 'Maroun', 'Firerobin' ), ( 'Fil', 'Tooyserkani' ) }, '2001-02-03' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2004-06-01' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2009-09-15' : { ( 'Jackson', 'Risto' ), ( 'Fae', 'Loza' ), ( 'Rosemarie', 'Kryski' ), ( 'Tami', 'Timler' ), ( 'Tybi', 'Curmon' ), ( 'Normand', 'Kemkeng' ), ( 'Terri', 'Callanan' ), ( 'Lenny', 'Shen' ), ( 'Rashid', 'Fleurima' ), ( 'Yannick', 'Leuty' ) }, '2012-10-11' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2000-09-08' : { ( 'Kit', 'Loughran' ), ( 'Liem', 'Cadieux' ), ( 'Courtenay', 'Bundschuh' ), ( 'Ilan', 'Zabokrzycki' ), ( 'Anabelle', 'Drane' ), ( 'Abel', 'Macalik' ), ( 'Bethina', 'Projofc' ), ( 'Britney', 'Schulze' ), ( 'Juliette', 'Hooper' ), ( 'Nelleke', 'Linegar' ) }, '2014-12-09' : { ( '', '' ), ( '', '' ) }, '2003-01-11' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2013-04-09' : { ( '', '' ), ( '', '' ) } }, 'Waiting having grown pale from on so long pause. Years passed on stiff legs any sleep, leapt in a rare who wove his shadow. World that of lies it you well.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 8, 'Auriprov', ( 'Avis', 'Serbin' ), { ( 'Jackson', 'Risto' ), ( 'Fae', 'Loza' ), ( 'Rosemarie', 'Kryski' ), ( 'Tami', 'Timler' ), ( 'Tybi', 'Curmon' ), ( 'Normand', 'Kemkeng' ), ( 'Terri', 'Callanan' ), ( 'Lenny', 'Shen' ), ( 'Rashid', 'Fleurima' ), ( 'Yannick', 'Leuty' ) }, [ '+33 489 204 807', '+85 186 460 549', '+60 596 624 148', '+63 998 654 278', '+64 345 932 364', '+62 912 545 401', '+81 828 611 707', '+63 470 879 710', '+74 858 787 339', '+93 478 927 847' ], { 'beverlee.maxin@outlook.com', 'lauraine.hillring@yahoo.com', 'sys.larue@live.com', 'andres.fields@yahoo.com', 'lark.alzofon@live.com', 'serge.bomstein@hotmail.com', 'ariella.ploof@outlook.com', 'ingemar.fredriksen@gmail.com', 'jere.hillidge@outlook.com', 'leo.valliere@mail.com' }, { '+58 267 273 848' : 'Koskinen Magazine', '+85 931 407 529' : 'Beall Center', '+15 624 856 894' : 'Buczek Association', '+83 549 495 516' : 'Fabijanic Vision', '+97 303 547 187' : 'Toly Depot', '+98 281 701 616' : 'Ruffolo Associates', '+35 230 885 310' : 'Gille Network', '+63 163 436 811' : 'Dueppen Union', '+57 881 132 165' : 'Karmousedwards Point', '+28 860 174 583' : 'Ellington Network' }, '2013-04-09', { ( 'Avis', 'Serbin' ) : '2001-02-03', ( '', '' ) : '2013-04-09', ( 'Emalia', 'Patteson' ) : '2004-06-01', ( 'Edna', 'Capps' ) : '2014-12-09', ( 'Malcolm', 'Beech' ) : '2004-06-01', ( 'Valenka', 'Lamarche' ) : '2009-05-22', ( 'Greet', 'Medeiros' ) : '2003-01-11', ( 'Koral', 'Gruska' ) : '2001-02-03', ( 'Morna', 'Heffner' ) : '2014-12-09', ( 'Schell', 'Whitwam' ) : '2010-05-15' }, { '2000-09-08', '2012-10-11', '2014-12-09', '2010-05-15', '2001-02-03', '2004-06-01', '2009-05-22', '2009-09-15', '2013-04-09', '2003-01-11', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2014-12-09', '2000-09-08' ], { '2014-12-09' : { ( 'Jackson', 'Risto' ), ( 'Fae', 'Loza' ), ( 'Rosemarie', 'Kryski' ), ( 'Tami', 'Timler' ), ( 'Tybi', 'Curmon' ), ( 'Normand', 'Kemkeng' ), ( 'Terri', 'Callanan' ), ( 'Lenny', 'Shen' ), ( 'Rashid', 'Fleurima' ), ( 'Yannick', 'Leuty' ) }, '2012-10-11' : { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) }, '2003-01-11' : { ( 'Jackson', 'Risto' ), ( 'Fae', 'Loza' ), ( 'Rosemarie', 'Kryski' ), ( 'Tami', 'Timler' ), ( 'Tybi', 'Curmon' ), ( 'Normand', 'Kemkeng' ), ( 'Terri', 'Callanan' ), ( 'Lenny', 'Shen' ), ( 'Rashid', 'Fleurima' ), ( 'Yannick', 'Leuty' ) }, '2001-02-03' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2004-06-01' : { ( 'Jackson', 'Risto' ), ( 'Fae', 'Loza' ), ( 'Rosemarie', 'Kryski' ), ( 'Tami', 'Timler' ), ( 'Tybi', 'Curmon' ), ( 'Normand', 'Kemkeng' ), ( 'Terri', 'Callanan' ), ( 'Lenny', 'Shen' ), ( 'Rashid', 'Fleurima' ), ( 'Yannick', 'Leuty' ) }, '2000-09-08' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2010-05-15' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2013-04-09' : { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) }, '2009-09-15' : { ( '', '' ), ( '', '' ) }, '2009-05-22' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) } }, 'Placed him in years passed by bees, fully become old skin a fleeting pleasure. Accepted the monk stopped looking at him, got off all pleasure and being young man.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 9, 'Afraven', ( 'Valenka', 'Lamarche' ), { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, [ '+39 334 544 934', '+97 451 274 362', '+57 404 701 596', '+37 541 648 223', '+50 936 681 840', '+98 389 167 660', '+29 424 343 407', '+75 655 568 485', '+56 760 643 407', '+88 910 516 244' ], { 'teodora.yokeley@mail.com', 'pavia.fiset@yahoo.com', 'babara.jaques@gmail.com', 'tunlin.wardle@live.com', 'clair.wyble@gmail.com', 'tammara.sanoy@outlook.com', 'arlyne.dumas@hotmail.com', 'shauna.dionne@yahoo.com', 'jemimah.gilliard@gmail.com', 'chen.stephens@yahoo.com' }, { '+83 557 320 865' : 'Soreanu Media', '+12 432 699 520' : 'Haubert Market', '+39 921 116 457' : 'Penafernandez Point', '+70 988 387 283' : 'Nobes Group', '+61 110 455 296' : 'Stults Network', '+66 182 728 106' : 'Burkhardt Depot', '+19 624 468 673' : 'Edkins Church', '+77 227 869 777' : 'Passin Point', '+77 455 504 862' : 'Crain Central', '+11 577 414 342' : 'Pelton Bank' }, '2003-01-11', { ( 'Schell', 'Whitwam' ) : '2014-12-09', ( 'Morna', 'Heffner' ) : '2000-09-08', ( 'Emalia', 'Patteson' ) : '2012-10-11', ( 'Edna', 'Capps' ) : '2014-12-09', ( 'Malcolm', 'Beech' ) : '2000-09-08', ( 'Valenka', 'Lamarche' ) : '2009-05-22', ( '', '' ) : '2004-06-01', ( 'Koral', 'Gruska' ) : '2014-12-09', ( 'Avis', 'Serbin' ) : '2009-05-22', ( 'Greet', 'Medeiros' ) : '2013-04-09' }, { '2012-10-11', '2013-04-09', '2009-09-15', '2004-06-01', '2009-05-22', '2010-05-15', '2014-12-09', '2000-09-08', '2003-01-11', '2001-02-03', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2009-05-22' ], { '2003-01-11' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2000-09-08' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2004-06-01' : { ( '', '' ), ( '', '' ) }, '2009-05-22' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2014-12-09' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2010-05-15' : { ( 'Kit', 'Loughran' ), ( 'Liem', 'Cadieux' ), ( 'Courtenay', 'Bundschuh' ), ( 'Ilan', 'Zabokrzycki' ), ( 'Anabelle', 'Drane' ), ( 'Abel', 'Macalik' ), ( 'Bethina', 'Projofc' ), ( 'Britney', 'Schulze' ), ( 'Juliette', 'Hooper' ), ( 'Nelleke', 'Linegar' ) }, '2001-02-03' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2009-09-15' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2012-10-11' : { ( 'Chan', 'Lem' ), ( 'Fariborz', 'Spruell' ), ( 'Sheridan', 'Deardurff' ), ( 'Siggy', 'Dipietro' ), ( 'Hangtong', 'Krone' ), ( 'Milli', 'Honda' ), ( 'Tyler', 'Vaserfirer' ), ( 'Habeeb', 'Oziskender' ), ( 'Cristi', 'Bruner' ), ( 'Golda', 'Schuett' ) }, '2013-04-09' : { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) } }, 'Rest now emptiness saw in an era was you, wheel of reluctance and kiss your work. Than I meet with your child so thus happily, broke loose embraced once transported the magic words exclaimed. Understood them was necessary to inform his head.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 10, 'Elmelanderix', ( 'Morna', 'Heffner' ), { ( 'Suki', 'Prestonthomas' ), ( 'Retha', 'Srikrishna' ), ( 'Yves', 'Preece' ), ( 'Harmonia', 'Popowycz' ), ( 'Gayleen', 'Simonsen' ), ( 'Trisha', 'Payne' ), ( 'Maye', 'Priestley' ), ( 'Lanita', 'Heybroek' ), ( 'Maroun', 'Firerobin' ), ( 'Fil', 'Tooyserkani' ) }, [ '+66 400 477 619', '+52 452 745 787', '+10 939 933 887', '+28 214 685 641', '+79 356 464 994', '+25 282 864 794', '+38 408 222 313', '+22 311 616 767', '+35 314 721 251', '+91 514 133 575' ], { 'robinia.dusomos@hotmail.com', 'marella.garrett@outlook.com', 'svennerik.bomba@mail.com', 'famke.hamlin@mail.com', 'naoma.werner@yahoo.com', 'vinod.digiacomo@mail.com', 'alleen.braddock@gmail.com', 'pierremarc.starowicz@hotmail.com', 'sissy.crisler@yahoo.com', 'jeanyves.diaconu@mail.com' }, { '+51 721 574 690' : 'Langley Network', '+90 169 569 201' : 'Jimenez Solutions', '+11 279 994 625' : 'Bialkenius College', '+81 347 834 923' : 'Dzioba Point', '+95 517 305 395' : 'Marzullo Vision', '+87 330 827 931' : 'Jeroski Labs', '+13 334 332 932' : 'Siew Shop', '+83 356 540 121' : 'Romanchuck Solutions', '+92 971 471 147' : 'Wittik Studio', '+64 586 558 742' : 'Macinnes Channel' }, '2010-05-15', { ( 'Avis', 'Serbin' ) : '2012-10-11', ( 'Edna', 'Capps' ) : '2013-04-09', ( 'Koral', 'Gruska' ) : '2009-09-15', ( 'Schell', 'Whitwam' ) : '2009-05-22', ( 'Morna', 'Heffner' ) : '2014-12-09', ( 'Emalia', 'Patteson' ) : '2003-01-11', ( '', '' ) : '2012-10-11', ( 'Valenka', 'Lamarche' ) : '2004-06-01', ( 'Greet', 'Medeiros' ) : '2010-05-15', ( 'Malcolm', 'Beech' ) : '2012-10-11' }, { '2010-05-15', '2014-12-09', '2009-05-22', '2004-06-01', '2009-09-15', '2000-09-08', '2012-10-11', '2003-01-11', '2001-02-03', '2013-04-09', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2012-10-11', '2013-04-09' ], { '2000-09-08' : { ( 'Kit', 'Loughran' ), ( 'Liem', 'Cadieux' ), ( 'Courtenay', 'Bundschuh' ), ( 'Ilan', 'Zabokrzycki' ), ( 'Anabelle', 'Drane' ), ( 'Abel', 'Macalik' ), ( 'Bethina', 'Projofc' ), ( 'Britney', 'Schulze' ), ( 'Juliette', 'Hooper' ), ( 'Nelleke', 'Linegar' ) }, '2013-04-09' : { ( 'Toyoji', 'Crooks' ), ( 'Leecia', 'Hilberman' ), ( 'Ceriel', 'Kipnis' ), ( 'Aartjan', 'Nomura' ), ( 'Emeline', 'English' ), ( 'Sterling', 'Mabson' ), ( 'Spence', 'Gheorghe' ), ( 'Go', 'Burkert' ), ( 'Ania', 'Dorronsoro' ), ( 'Clemmie', 'Dao' ) }, '2010-05-15' : { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) }, '2001-02-03' : { ( '', '' ), ( '', '' ) }, '2009-05-22' : { ( 'Kit', 'Loughran' ), ( 'Liem', 'Cadieux' ), ( 'Courtenay', 'Bundschuh' ), ( 'Ilan', 'Zabokrzycki' ), ( 'Anabelle', 'Drane' ), ( 'Abel', 'Macalik' ), ( 'Bethina', 'Projofc' ), ( 'Britney', 'Schulze' ), ( 'Juliette', 'Hooper' ), ( 'Nelleke', 'Linegar' ) }, '2014-12-09' : { ( 'Maridel', 'Campos' ), ( 'Melly', 'Jamison' ), ( 'Jonis', 'Bellehumeur' ), ( 'Discover', 'Begley' ), ( 'Silvia', 'Klaassen' ), ( 'Dolly', 'Morek' ), ( 'Philippa', 'Brum' ), ( 'Theressa', 'Piecaitis' ), ( 'Riva', 'Wacker' ), ( 'Dareen', 'Xu' ) }, '2004-06-01' : { ( 'Kevina', 'Pinel' ), ( 'Damara', 'Vanterrie' ), ( 'Elora', 'Acharyya' ), ( 'Robert', 'Traylor' ), ( 'Aprilette', 'Kovacs' ), ( 'Viviene', 'Yost' ), ( 'Lucina', 'Fssup' ), ( 'Pearle', 'Hine' ), ( 'Barb', 'Kornitzer' ), ( 'Jacki', 'Prashad' ) }, '2009-09-15' : { ( 'Karylin', 'Bergado' ), ( 'Monroe', 'Questell' ), ( 'Lurlene', 'Lamers' ), ( 'Grietje', 'Haire' ), ( 'Leita', 'Cioffi' ), ( 'Melisent', 'Blackshire' ), ( 'Winna', 'Carufel' ), ( 'Hannie', 'Colquitt' ), ( 'Stoddard', 'Mejury' ), ( 'Rani', 'Hsu' ) }, '2003-01-11' : { ( 'Maridel', 'Campos' ), ( 'Melly', 'Jamison' ), ( 'Jonis', 'Bellehumeur' ), ( 'Discover', 'Begley' ), ( 'Silvia', 'Klaassen' ), ( 'Dolly', 'Morek' ), ( 'Philippa', 'Brum' ), ( 'Theressa', 'Piecaitis' ), ( 'Riva', 'Wacker' ), ( 'Dareen', 'Xu' ) }, '2012-10-11' : { ( 'Suki', 'Prestonthomas' ), ( 'Retha', 'Srikrishna' ), ( 'Yves', 'Preece' ), ( 'Harmonia', 'Popowycz' ), ( 'Gayleen', 'Simonsen' ), ( 'Trisha', 'Payne' ), ( 'Maye', 'Priestley' ), ( 'Lanita', 'Heybroek' ), ( 'Maroun', 'Firerobin' ), ( 'Fil', 'Tooyserkani' ) } }, 'Since all vices through town to death, someone asked timidly fled back and inwardly. Know where the if this man slowly getting lost.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5, 'first', 1, ' This is the first text, with spaces ' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612, 'second', 2, 'This is the second text, with escaped characters ^~{}' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524, 'third', 3, 'This is the third text§with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -7654305769731274948, c0759f24-1649-8708-841e-7975566360ce, 'fourth', 4, 'This is the fourth text§also with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 5936751264929006192, 5f58d823-c247-4836-908d-d55236ff15c8, 'Kanies', 336, 'Know there simultaneously and talked incessantly hit, venerable one had for people asked again taken away. Thoughts this depraved and fell silent until the nirvana.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 4209174606023890186, 8d26e294-d205-49e5-0fdb-c7a34ea4368d, 'Lightfield', 459, 'Full height any person thus the glory, sir intent to death where their way, been instantly felt its surface the boat. It''s you abandon the wide golden cage, someone is near death that your work.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 8373043515869131492, 99ce5c27-f9e6-457a-6dc7-5dfa99dd654f, 'Syal', 90, 'Could win him proud state of salvation. Still had broken both delighted about words. Though I searched I envy you follow that.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 8276040811587742355, 7e8674db-e153-496e-ad9d-9bf633b4b5ba, 'Fikis', 511, 'You''ve turned all pleasure cannot deny my pilgrimage, sinner which we want you going to. Was transformed was what do at all.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 8887086234995371924, f5611ace-7314-42bb-0d9a-386d3dc34e67, 'Laba', 345, 'Shouldn''t I might we search was without one wants, her gaze sought shelter and dice-gambler the passenger spoke, these so voluntarily suffering had left him. Ate neither had died how much to salvation.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 7500921550476393050, 9d7aabdc-750a-469f-bbc7-02a76ef2518b, 'Robert', 235, 'Did his envy you make love words, mumbled a mother to servants and lazy. Yes I sat here under my words, full of nothing but since all peels in heat, mumbled a quiet face listening attentively perceived.' );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 1fac4b65-8d2c-4817-a7a5-90d997132216, 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 81e9c46b-dea8-4eca-c486-e475d837a597, -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 6c8b0e8b-f419-4d23-998e-0cfd2ae78861, -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 7a6c1c14-e937-4df4-69ce-043c3ce2f20d, -5359923222225123686, 0883a652-0e6e-b6c9-304d-cfb71034d053 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 4d7e50a5-7ac5-4708-8a14-1a33bb5d9e71, -6907789044519798771, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 93b94312-93b4-43eb-2894-708184141801, -5292141111288023615, 5f58d823-c247-4836-908d-d55236ff15c8 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( cbc7dfb6-6a84-4fce-41af-f16cc0ca1e83, -7654305769731274948, 8d26e294-d205-49e5-0fdb-c7a34ea4368d );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 5343d755-c818-449d-813c-f2a73d468017, -7654305769731274948, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 3cd2ab63-6afa-48e3-6a89-2a72ddc61eee, 3344523601393165508, 8d26e294-d205-49e5-0fdb-c7a34ea4368d );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 5b62c3b4-0b9a-49ff-1c9c-57af62579e9d, 8276040811587742355, 9d7aabdc-750a-469f-bbc7-02a76ef2518b );
