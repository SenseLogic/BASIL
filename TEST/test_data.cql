insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 8dbdda48-fb87-48d6-746f-1965824e966a, false, 1, 2, 3, 4, 5, 6, 7, 8, 1.1, 2.2, 'Hello world!', 'Propes', '2001-02-03', '2001-02-03 04:05:06.789', 0x123456781234567891234567812345678, 'second_Propes' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 710bcf33-6710-4490-db6b-ffd92f452996, false, 38, 98, 520, 616, 190, 743, 716, 223, 61.73, 79.92, 'Orideasop', 'Brunelle', '2001-02-04', '2001-06-23 13:47:40', 0xab84ac336e368b74ee18, 'third_2001-02-04' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 1933307a-1170-4423-6f16-40903bb1bb07, false, 27, 17, 529, 872, 927, 742, 296, 874, 43.7, 28.94, 'Escivi', 'Bronec', '2000-08-09', '2011-05-05 05:22:45', 0x756b495afee53a0a9e07, 'fourth_2011-05-05 05:22:45' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 6139e01b-54b0-40a1-b638-fa26a6b0dd31, true, 29, 58, 26, 812, 610, 694, 413, 148, 80.51, 49.7, 'Menancoko', 'Cotuna', '2011-07-15', '2014-08-22 00:00:53', 0xb42d30481d72b392806a, 'fourth_2014-08-22 00:00:53' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( c4e8d2f6-5185-434e-49e2-88b1c19358ac, false, 44, 62, 735, 115, 853, 346, 490, 626, 38.91, 84.23, 'Flossidai', 'Dunlap', '2003-05-27', '2005-01-06 16:53:39', 0x11f26f3831043cd816b6, 'third_2003-05-27' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 42913d4b-d2c1-4581-9c63-33fb6fb27975, false, 76, 79, 364, 342, 662, 76, 466, 263, 73.16, 47.37, 'Upasersuccuc', 'Dane', '2015-06-14', '2005-01-28 14:12:49', 0x16fc1d041823d7ba2155, 'third_2015-06-14' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( adf4d2b4-41b9-4aab-464b-7dac3af15218, true, 51, 87, 590, 711, 286, 494, 175, 853, 15.06, 22.63, 'Erodina', 'Chai', '2015-02-13', '2011-04-22 15:16:20', 0x76010bdfa5c827d03668, 'second_Chai' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 1da1cec3-6afd-496a-e380-aad4831dec52, true, 9, 87, 743, 370, 68, 783, 899, 641, 25.25, 42.43, 'Boilinto', 'Pitre', '2012-09-17', '2004-02-22 21:41:54', 0x06014284d73510c297d5, 'second_Pitre' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( db83e712-c929-4c6e-38f8-c54e2ca1cb32, true, 29, 44, 118, 294, 745, 374, 641, 653, 24.32, 92.25, 'Eejigu', 'Gagnier', '2015-05-16', '2015-11-05 23:42:10', 0xaa602d6037915b1201a8, 'fourth_2015-11-05 23:42:10' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 3b8376bc-738d-4a87-adb3-06d228db9c20, true, 81, 88, 1000, 324, 237, 414, 923, 271, 46.76, 67.64, 'Olkashalamat', 'Hassenklover', '2014-04-26', '2006-11-07 14:05:13', 0xb783a38133a8ac0fa7d9, 'fourth_2006-11-07 14:05:13' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 1, 'Belgium', ( 'Malcolm', 'Beech' ), { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, [ '12345678', '23456789' ], { 'jack.harper@gmail.com', 'victoria.olsen@outlook.com' }, { '12345678' : 'Warner Bros', '23456789' : 'Universal Pictures' }, '2001-02-03', { ( 'Shou', 'Kernodle' ) : '2001-02-04', ( 'Cang', 'Janiszewski' ) : '2001-02-03', ( 'Vino', 'Randolph' ) : '2001-02-04', ( '', '' ) : '2003-05-27', ( 'Cory', 'Mcbeth' ) : '2001-02-03', ( 'Celine', 'Malizia' ) : '2003-05-27', ( 'Malcolm', 'Beech' ) : '2014-04-26', ( 'Sigrid', 'Cheatham' ) : '2000-08-09', ( 'Carmen', 'Degenova' ) : '2003-05-27', ( 'Daniel', 'Dorishampton' ) : '2001-02-04' }, { '2012-09-17', '2015-05-16', '2003-05-27', '2011-07-15', '2001-02-04', '2014-04-26', '2015-06-14', '2000-08-09', '2015-02-13', '2001-02-03', '', '', '', '', '', '', '', '', '', '' }, [ '2000-08-09', '2001-02-03' ], { '2015-06-14' : { ( 'Hettie', 'Vonende' ), ( 'Cang', 'Adhem' ), ( 'Shahab', 'Beeston' ), ( 'Clemente', 'Roger' ), ( 'Dusan', 'Eppenstiner' ), ( 'Carolynn', 'Laplante' ), ( 'Leena', 'Grosman' ), ( 'Renata', 'Rabecs' ), ( 'Rodrigus', 'Beconovich' ), ( 'Tiina', 'Semeniuk' ) }, '2003-05-27' : { ( 'Luther', 'Watkins' ), ( 'Redgie', 'Fadlallah' ), ( 'Kaiming', 'Kazimierski' ), ( 'Crista', 'Takashima' ), ( 'Utilla', 'Soin' ), ( 'Devan', 'Christian' ), ( 'Neilla', 'Regan' ), ( 'Geralda', 'Bradbury' ), ( 'Gabi', 'Pearce' ), ( 'Ailey', 'Visser' ) }, '2014-04-26' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2015-02-13' : { ( 'Luther', 'Watkins' ), ( 'Redgie', 'Fadlallah' ), ( 'Kaiming', 'Kazimierski' ), ( 'Crista', 'Takashima' ), ( 'Utilla', 'Soin' ), ( 'Devan', 'Christian' ), ( 'Neilla', 'Regan' ), ( 'Geralda', 'Bradbury' ), ( 'Gabi', 'Pearce' ), ( 'Ailey', 'Visser' ) }, '2001-02-03' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2001-02-04' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2011-07-15' : { ( 'Petri', 'Schofield' ), ( 'Esma', 'Bruce' ), ( 'Jeannine', 'Torok' ), ( 'Rhoda', 'Ivancic' ), ( 'Puran', 'Santos' ), ( 'Kellina', 'Praeuner' ), ( 'Ardra', 'Manica' ), ( 'Perla', 'Pambianchi' ), ( 'Doralia', 'Arellano' ), ( 'Carine', 'Rios' ) }, '2015-05-16' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2012-09-17' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2000-08-09' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) } }, '{}' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 2, '', ( '', '' ), { ( '', '' ), ( '', '' ) }, [ '', '' ], { 'rick.deckard@gmail.com', 'dave.holden@outlook.com' }, { '12345678' : '', '23456789' : '' }, '2015-05-16', { ( 'Cang', 'Janiszewski' ) : '2015-02-13', ( 'Sigrid', 'Cheatham' ) : '2015-05-16', ( 'Celine', 'Malizia' ) : '2001-02-04', ( 'Vino', 'Randolph' ) : '2011-07-15', ( 'Carmen', 'Degenova' ) : '2003-05-27', ( 'Shou', 'Kernodle' ) : '2011-07-15', ( 'Cory', 'Mcbeth' ) : '2014-04-26', ( '', '' ) : '2014-04-26', ( 'Daniel', 'Dorishampton' ) : '2012-09-17', ( 'Malcolm', 'Beech' ) : '2001-02-03' }, { '2011-07-15', '2014-04-26', '2015-02-13', '2015-05-16', '2003-05-27', '2001-02-03', '2000-08-09', '2015-06-14', '2012-09-17', '2001-02-04', '', '', '', '', '', '', '' }, [ '2015-02-13', '2001-02-03', '2015-02-13' ], { '2015-05-16' : { ( 'Hettie', 'Vonende' ), ( 'Cang', 'Adhem' ), ( 'Shahab', 'Beeston' ), ( 'Clemente', 'Roger' ), ( 'Dusan', 'Eppenstiner' ), ( 'Carolynn', 'Laplante' ), ( 'Leena', 'Grosman' ), ( 'Renata', 'Rabecs' ), ( 'Rodrigus', 'Beconovich' ), ( 'Tiina', 'Semeniuk' ) }, '2015-06-14' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2011-07-15' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2012-09-17' : { ( 'Marylinda', 'Daniels' ), ( 'Bernice', 'Marcanti' ), ( 'Gavrielle', 'Freeth' ), ( 'Rhodia', 'Magee' ), ( 'Ladan', 'Schmidt' ), ( 'Rafiq', 'Azer' ), ( 'Goldi', 'Rantala' ), ( 'Janifer', 'Dubose' ), ( 'Yokan', 'Acs' ), ( 'Edmond', 'Montmorency' ) }, '2001-02-04' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2003-05-27' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2000-08-09' : { ( '', '' ), ( '', '' ) }, '2001-02-03' : { ( 'Petri', 'Schofield' ), ( 'Esma', 'Bruce' ), ( 'Jeannine', 'Torok' ), ( 'Rhoda', 'Ivancic' ), ( 'Puran', 'Santos' ), ( 'Kellina', 'Praeuner' ), ( 'Ardra', 'Manica' ), ( 'Perla', 'Pambianchi' ), ( 'Doralia', 'Arellano' ), ( 'Carine', 'Rios' ) }, '2014-04-26' : { ( 'Hettie', 'Vonende' ), ( 'Cang', 'Adhem' ), ( 'Shahab', 'Beeston' ), ( 'Clemente', 'Roger' ), ( 'Dusan', 'Eppenstiner' ), ( 'Carolynn', 'Laplante' ), ( 'Leena', 'Grosman' ), ( 'Renata', 'Rabecs' ), ( 'Rodrigus', 'Beconovich' ), ( 'Tiina', 'Semeniuk' ) }, '2015-02-13' : { ( 'Marylinda', 'Daniels' ), ( 'Bernice', 'Marcanti' ), ( 'Gavrielle', 'Freeth' ), ( 'Rhodia', 'Magee' ), ( 'Ladan', 'Schmidt' ), ( 'Rafiq', 'Azer' ), ( 'Goldi', 'Rantala' ), ( 'Janifer', 'Dubose' ), ( 'Yokan', 'Acs' ), ( 'Edmond', 'Montmorency' ) } }, '' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 3, 'Maranatai', ( 'Carmen', 'Degenova' ), { ( 'Hettie', 'Vonende' ), ( 'Cang', 'Adhem' ), ( 'Shahab', 'Beeston' ), ( 'Clemente', 'Roger' ), ( 'Dusan', 'Eppenstiner' ), ( 'Carolynn', 'Laplante' ), ( 'Leena', 'Grosman' ), ( 'Renata', 'Rabecs' ), ( 'Rodrigus', 'Beconovich' ), ( 'Tiina', 'Semeniuk' ) }, [ '+27 465 565 937', '+16 228 679 119', '+31 335 977 618', '+60 686 593 653', '+46 962 146 378', '+30 666 614 149', '+23 314 771 363', '+36 594 216 974', '+67 529 628 214', '+82 338 914 962' ], { 'gunilla.heldenbrand@hotmail.com', 'shanta.dee@outlook.com', 'murat.trefts@hotmail.com', 'stormi.rudzinski@outlook.com', 'lilin.petersen@live.com', 'gretchen.venturini@hotmail.com', 'becki.brisson@hotmail.com', 'penang.khorami@mail.com', 'pierreyves.jayamanne@yahoo.com', 'rodrigus.kish@outlook.com' }, { '+10 923 287 550' : 'Knieps Incorporated', '+30 585 799 160' : 'Scheffler Union', '+75 119 682 727' : 'Shigemura Solutions', '+50 331 442 599' : 'Fastpack News', '+37 229 199 622' : 'Woodley Associates', '+52 627 216 307' : 'Poe Channel', '+58 463 804 452' : 'Ruane Trust', '+82 443 891 491' : 'Urbick College', '+48 602 585 157' : 'Programoffice Depot', '+86 585 881 127' : 'Chaudhry Market' }, '2000-08-09', { ( 'Cang', 'Janiszewski' ) : '2015-05-16', ( 'Cory', 'Mcbeth' ) : '2000-08-09', ( 'Shou', 'Kernodle' ) : '2011-07-15', ( 'Celine', 'Malizia' ) : '2015-05-16', ( '', '' ) : '2011-07-15', ( 'Sigrid', 'Cheatham' ) : '2015-06-14', ( 'Carmen', 'Degenova' ) : '2001-02-04', ( 'Vino', 'Randolph' ) : '2011-07-15', ( 'Malcolm', 'Beech' ) : '2015-05-16', ( 'Daniel', 'Dorishampton' ) : '2014-04-26' }, { '2003-05-27', '2015-06-14', '2015-02-13', '2011-07-15', '2000-08-09', '2001-02-03', '2012-09-17', '2014-04-26', '2001-02-04', '2015-05-16', '', '', '', '', '', '', '', '' }, [ '2015-05-16' ], { '2015-02-13' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2001-02-04' : { ( 'Hettie', 'Vonende' ), ( 'Cang', 'Adhem' ), ( 'Shahab', 'Beeston' ), ( 'Clemente', 'Roger' ), ( 'Dusan', 'Eppenstiner' ), ( 'Carolynn', 'Laplante' ), ( 'Leena', 'Grosman' ), ( 'Renata', 'Rabecs' ), ( 'Rodrigus', 'Beconovich' ), ( 'Tiina', 'Semeniuk' ) }, '2014-04-26' : { ( 'Luther', 'Watkins' ), ( 'Redgie', 'Fadlallah' ), ( 'Kaiming', 'Kazimierski' ), ( 'Crista', 'Takashima' ), ( 'Utilla', 'Soin' ), ( 'Devan', 'Christian' ), ( 'Neilla', 'Regan' ), ( 'Geralda', 'Bradbury' ), ( 'Gabi', 'Pearce' ), ( 'Ailey', 'Visser' ) }, '2011-07-15' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2003-05-27' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2012-09-17' : { ( 'Luther', 'Watkins' ), ( 'Redgie', 'Fadlallah' ), ( 'Kaiming', 'Kazimierski' ), ( 'Crista', 'Takashima' ), ( 'Utilla', 'Soin' ), ( 'Devan', 'Christian' ), ( 'Neilla', 'Regan' ), ( 'Geralda', 'Bradbury' ), ( 'Gabi', 'Pearce' ), ( 'Ailey', 'Visser' ) }, '2015-05-16' : { ( 'Hettie', 'Vonende' ), ( 'Cang', 'Adhem' ), ( 'Shahab', 'Beeston' ), ( 'Clemente', 'Roger' ), ( 'Dusan', 'Eppenstiner' ), ( 'Carolynn', 'Laplante' ), ( 'Leena', 'Grosman' ), ( 'Renata', 'Rabecs' ), ( 'Rodrigus', 'Beconovich' ), ( 'Tiina', 'Semeniuk' ) }, '2000-08-09' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-03' : { ( 'Luther', 'Watkins' ), ( 'Redgie', 'Fadlallah' ), ( 'Kaiming', 'Kazimierski' ), ( 'Crista', 'Takashima' ), ( 'Utilla', 'Soin' ), ( 'Devan', 'Christian' ), ( 'Neilla', 'Regan' ), ( 'Geralda', 'Bradbury' ), ( 'Gabi', 'Pearce' ), ( 'Ailey', 'Visser' ) }, '2015-06-14' : { ( 'Petri', 'Schofield' ), ( 'Esma', 'Bruce' ), ( 'Jeannine', 'Torok' ), ( 'Rhoda', 'Ivancic' ), ( 'Puran', 'Santos' ), ( 'Kellina', 'Praeuner' ), ( 'Ardra', 'Manica' ), ( 'Perla', 'Pambianchi' ), ( 'Doralia', 'Arellano' ), ( 'Carine', 'Rios' ) } }, 'Death all dependencies by lust like them. These clothes you''ve heard whose hearts are a thoughts, scolding and completely concentrated soul fuming from all conceptions.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 4, 'Urrabuebasav', ( 'Celine', 'Malizia' ), { ( 'Marylinda', 'Daniels' ), ( 'Bernice', 'Marcanti' ), ( 'Gavrielle', 'Freeth' ), ( 'Rhodia', 'Magee' ), ( 'Ladan', 'Schmidt' ), ( 'Rafiq', 'Azer' ), ( 'Goldi', 'Rantala' ), ( 'Janifer', 'Dubose' ), ( 'Yokan', 'Acs' ), ( 'Edmond', 'Montmorency' ) }, [ '+67 989 109 553', '+12 741 328 803', '+39 699 594 708', '+99 170 983 924', '+49 201 410 399', '+22 270 204 182', '+74 112 432 394', '+67 554 857 360', '+35 195 623 108', '+25 681 139 128' ], { 'vries.petrea@hotmail.com', 'eyde.mcclarren@gmail.com', 'ladonna.mcafee@hotmail.com', 'wynne.clarkstewart@hotmail.com', 'nha.ribaldo@yahoo.com', 'adelice.peterson@outlook.com', 'sascha.casadonte@gmail.com', 'ingres.covey@live.com', 'henrietta.choptovy@gmail.com', 'larkin.neumann@outlook.com' }, { '+60 331 388 310' : 'Subick Media', '+11 304 347 797' : 'Bruketa Magazine', '+46 725 240 652' : 'Guay Bank', '+48 642 349 544' : 'Miceli Depot', '+52 229 862 274' : 'Ryall Consulting', '+95 683 854 462' : 'Samhaber Consulting', '+82 540 981 560' : 'Blazejewski Union', '+54 540 163 833' : 'Wojnar Incorporated', '+37 970 683 310' : 'Sutphen Team', '+12 684 968 846' : 'Guerin Society' }, '2000-08-09', { ( 'Cory', 'Mcbeth' ) : '2000-08-09', ( '', '' ) : '2015-06-14', ( 'Celine', 'Malizia' ) : '2001-02-03', ( 'Vino', 'Randolph' ) : '2012-09-17', ( 'Shou', 'Kernodle' ) : '2001-02-04', ( 'Cang', 'Janiszewski' ) : '2012-09-17', ( 'Malcolm', 'Beech' ) : '2012-09-17', ( 'Carmen', 'Degenova' ) : '2003-05-27', ( 'Daniel', 'Dorishampton' ) : '2014-04-26', ( 'Sigrid', 'Cheatham' ) : '2014-04-26' }, { '2000-08-09', '2001-02-03', '2015-05-16', '2015-06-14', '2015-02-13', '2014-04-26', '2001-02-04', '2003-05-27', '2011-07-15', '2012-09-17', '', '', '', '', '', '', '' }, [ '2015-06-14' ], { '2003-05-27' : { ( 'Marylinda', 'Daniels' ), ( 'Bernice', 'Marcanti' ), ( 'Gavrielle', 'Freeth' ), ( 'Rhodia', 'Magee' ), ( 'Ladan', 'Schmidt' ), ( 'Rafiq', 'Azer' ), ( 'Goldi', 'Rantala' ), ( 'Janifer', 'Dubose' ), ( 'Yokan', 'Acs' ), ( 'Edmond', 'Montmorency' ) }, '2015-02-13' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-04' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2015-05-16' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2014-04-26' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2015-06-14' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2011-07-15' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2001-02-03' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2000-08-09' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2012-09-17' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) } }, 'Man this pointless was what shines a path, farewell to proceed swiftly smoothly moving water, exalted one many there among girls to earthly things.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 5, 'Endorek', ( 'Shou', 'Kernodle' ), { ( 'Melonie', 'Chiamvimonvat' ), ( 'Jap', 'Raley' ), ( 'Suzanna', 'Reyes' ), ( 'Karee', 'Varkey' ), ( 'Glendon', 'Clouthier' ), ( 'Moria', 'Lyons' ), ( 'Berty', 'Dupras' ), ( 'Raul', 'Carnegie' ), ( 'Chabert', 'Bodkin' ), ( 'Andaree', 'Skerry' ) }, [ '+79 266 699 717', '+34 591 162 235', '+16 875 734 461', '+13 348 590 714', '+15 466 837 406', '+48 510 257 870', '+94 434 753 216', '+34 710 188 405', '+11 737 512 631', '+68 960 139 424' ], { 'arlinda.biel@yahoo.com', 'jeroen.fullum@mail.com', 'kevina.sicotte@yahoo.com', 'oscar.bulman@yahoo.com', 'mada.majmudar@outlook.com', 'kazuyuki.parsloe@gmail.com', 'sait.bedient@outlook.com', 'bab.caton@live.com', 'hetty.juni@mail.com', 'tiphanie.altherr@live.com' }, { '+12 621 206 589' : 'Burke Institute', '+77 672 160 423' : 'Hartkopf University', '+33 719 578 841' : 'Sousa Team', '+65 693 878 631' : 'Finnighan Fund', '+28 313 329 750' : 'Shishakly Network', '+72 687 664 822' : 'Evans Club', '+70 917 532 548' : 'Hans Solutions', '+58 789 927 195' : 'Loiseau Fund', '+12 986 149 714' : 'Hersee Fund', '+45 550 850 893' : 'Martineau Foundation' }, '2015-05-16', { ( 'Vino', 'Randolph' ) : '2001-02-04', ( '', '' ) : '2015-02-13', ( 'Cang', 'Janiszewski' ) : '2012-09-17', ( 'Sigrid', 'Cheatham' ) : '2015-02-13', ( 'Shou', 'Kernodle' ) : '2015-02-13', ( 'Cory', 'Mcbeth' ) : '2015-02-13', ( 'Malcolm', 'Beech' ) : '2003-05-27', ( 'Carmen', 'Degenova' ) : '2001-02-04', ( 'Daniel', 'Dorishampton' ) : '2012-09-17', ( 'Celine', 'Malizia' ) : '2001-02-03' }, { '2015-06-14', '2012-09-17', '2015-05-16', '2000-08-09', '2001-02-04', '2003-05-27', '2014-04-26', '2011-07-15', '2001-02-03', '2015-02-13', '', '', '', '', '', '', '', '', '' }, [ '2011-07-15' ], { '2014-04-26' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2001-02-04' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2003-05-27' : { ( 'Marylinda', 'Daniels' ), ( 'Bernice', 'Marcanti' ), ( 'Gavrielle', 'Freeth' ), ( 'Rhodia', 'Magee' ), ( 'Ladan', 'Schmidt' ), ( 'Rafiq', 'Azer' ), ( 'Goldi', 'Rantala' ), ( 'Janifer', 'Dubose' ), ( 'Yokan', 'Acs' ), ( 'Edmond', 'Montmorency' ) }, '2000-08-09' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2011-07-15' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2015-05-16' : { ( 'Melonie', 'Chiamvimonvat' ), ( 'Jap', 'Raley' ), ( 'Suzanna', 'Reyes' ), ( 'Karee', 'Varkey' ), ( 'Glendon', 'Clouthier' ), ( 'Moria', 'Lyons' ), ( 'Berty', 'Dupras' ), ( 'Raul', 'Carnegie' ), ( 'Chabert', 'Bodkin' ), ( 'Andaree', 'Skerry' ) }, '2015-06-14' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2015-02-13' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2012-09-17' : { ( 'Melonie', 'Chiamvimonvat' ), ( 'Jap', 'Raley' ), ( 'Suzanna', 'Reyes' ), ( 'Karee', 'Varkey' ), ( 'Glendon', 'Clouthier' ), ( 'Moria', 'Lyons' ), ( 'Berty', 'Dupras' ), ( 'Raul', 'Carnegie' ), ( 'Chabert', 'Bodkin' ), ( 'Andaree', 'Skerry' ) }, '2001-02-03' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) } }, 'Occasionally they may go there with magic spells, you''ve always there and divine voice a goal. Greeted you and half unconsciousness a rich I knew.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 6, 'Ilbigalalty', ( 'Cang', 'Janiszewski' ), { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, [ '+87 726 576 415', '+60 945 832 387', '+78 678 129 363', '+69 410 127 548', '+38 235 198 654', '+69 797 730 929', '+26 322 153 573', '+47 955 285 429', '+35 438 646 650', '+38 563 301 948' ], { 'ursa.hugo@outlook.com', 'pawel.grossutti@gmail.com', 'starlet.yuhn@gmail.com', 'baris.lasch@live.com', 'daveta.willhoff@gmail.com', 'neile.karchevski@gmail.com', 'merissa.hambali@live.com', 'leisa.neisius@gmail.com', 'phoebe.bunker@mail.com', 'mufinella.vinet@yahoo.com' }, { '+80 709 731 652' : 'Leibowitz Association', '+50 361 643 724' : 'Shuman Vision', '+13 490 243 343' : 'Tanferna Express', '+87 478 642 741' : 'Linder News', '+47 788 336 380' : 'Sewell Network', '+59 470 978 948' : 'Petrey Point', '+64 135 959 467' : 'Erbilgin Vision', '+48 905 844 501' : 'Colquette University', '+17 809 611 988' : 'Ruprecht Magazine', '+29 187 577 143' : 'Sinclair Point' }, '2011-07-15', { ( 'Celine', 'Malizia' ) : '2014-04-26', ( 'Vino', 'Randolph' ) : '2015-02-13', ( 'Shou', 'Kernodle' ) : '2000-08-09', ( 'Cory', 'Mcbeth' ) : '2015-06-14', ( 'Daniel', 'Dorishampton' ) : '2015-05-16', ( 'Cang', 'Janiszewski' ) : '2001-02-04', ( 'Malcolm', 'Beech' ) : '2001-02-03', ( '', '' ) : '2015-05-16', ( 'Carmen', 'Degenova' ) : '2001-02-04', ( 'Sigrid', 'Cheatham' ) : '2015-02-13' }, { '2001-02-04', '2014-04-26', '2000-08-09', '2012-09-17', '2015-06-14', '2015-05-16', '2011-07-15', '2015-02-13', '2001-02-03', '2003-05-27', '', '', '', '', '', '', '', '', '', '' }, [ '2003-05-27', '2000-08-09' ], { '2003-05-27' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2011-07-15' : { ( 'Petri', 'Schofield' ), ( 'Esma', 'Bruce' ), ( 'Jeannine', 'Torok' ), ( 'Rhoda', 'Ivancic' ), ( 'Puran', 'Santos' ), ( 'Kellina', 'Praeuner' ), ( 'Ardra', 'Manica' ), ( 'Perla', 'Pambianchi' ), ( 'Doralia', 'Arellano' ), ( 'Carine', 'Rios' ) }, '2000-08-09' : { ( '', '' ), ( '', '' ) }, '2001-02-03' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-04' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2015-05-16' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2015-06-14' : { ( '', '' ), ( '', '' ) }, '2014-04-26' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2015-02-13' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2012-09-17' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) } }, 'Yesterday of rest between and wasted time mortal, they parted I''m recognising you mark my pleasure-garden. Who revel in anything to hunger in his consciousness, today it was his people are in hut.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 7, 'Umbube', ( 'Cory', 'Mcbeth' ), { ( 'Petri', 'Schofield' ), ( 'Esma', 'Bruce' ), ( 'Jeannine', 'Torok' ), ( 'Rhoda', 'Ivancic' ), ( 'Puran', 'Santos' ), ( 'Kellina', 'Praeuner' ), ( 'Ardra', 'Manica' ), ( 'Perla', 'Pambianchi' ), ( 'Doralia', 'Arellano' ), ( 'Carine', 'Rios' ) }, [ '+12 180 489 599', '+58 485 331 837', '+99 337 547 199', '+76 557 963 299', '+70 814 221 834', '+78 878 753 560', '+87 184 706 836', '+41 781 425 117', '+23 833 291 589', '+28 641 693 266' ], { 'paulo.blodgett@outlook.com', 'domenico.prosperi@hotmail.com', 'chabert.dewiele@live.com', 'warden.abrams@live.com', 'hollie.bonneville@gmail.com', 'iva.haley@yahoo.com', 'pierremarc.kowaleski@live.com', 'lac.mauck@outlook.com', 'vanity.lemaire@yahoo.com', 'idette.beaudoin@yahoo.com' }, { '+46 442 864 715' : 'Kahan Group', '+56 199 580 446' : 'Querengesser Point', '+34 651 396 891' : 'Zawadka Tech', '+92 850 250 885' : 'Lupatin Club', '+36 272 304 953' : 'Sheehan Depot', '+18 338 223 702' : 'Mouat Dynamics', '+81 290 277 464' : 'Shivnan Team', '+81 834 313 675' : 'Swyer Labs', '+65 236 792 794' : 'Trinidad Association', '+46 416 448 723' : 'Choe Services' }, '2000-08-09', { ( 'Shou', 'Kernodle' ) : '2001-02-03', ( 'Sigrid', 'Cheatham' ) : '2015-06-14', ( 'Celine', 'Malizia' ) : '2015-06-14', ( 'Carmen', 'Degenova' ) : '2015-02-13', ( 'Malcolm', 'Beech' ) : '2012-09-17', ( 'Vino', 'Randolph' ) : '2001-02-03', ( 'Daniel', 'Dorishampton' ) : '2015-02-13', ( 'Cory', 'Mcbeth' ) : '2000-08-09', ( 'Cang', 'Janiszewski' ) : '2012-09-17', ( '', '' ) : '2012-09-17' }, { '2001-02-04', '2001-02-03', '2003-05-27', '2015-06-14', '2000-08-09', '2011-07-15', '2015-05-16', '2015-02-13', '2012-09-17', '2014-04-26', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2015-06-14' ], { '2015-05-16' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2015-06-14' : { ( 'Melonie', 'Chiamvimonvat' ), ( 'Jap', 'Raley' ), ( 'Suzanna', 'Reyes' ), ( 'Karee', 'Varkey' ), ( 'Glendon', 'Clouthier' ), ( 'Moria', 'Lyons' ), ( 'Berty', 'Dupras' ), ( 'Raul', 'Carnegie' ), ( 'Chabert', 'Bodkin' ), ( 'Andaree', 'Skerry' ) }, '2003-05-27' : { ( 'Petri', 'Schofield' ), ( 'Esma', 'Bruce' ), ( 'Jeannine', 'Torok' ), ( 'Rhoda', 'Ivancic' ), ( 'Puran', 'Santos' ), ( 'Kellina', 'Praeuner' ), ( 'Ardra', 'Manica' ), ( 'Perla', 'Pambianchi' ), ( 'Doralia', 'Arellano' ), ( 'Carine', 'Rios' ) }, '2014-04-26' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2001-02-04' : { ( 'Melonie', 'Chiamvimonvat' ), ( 'Jap', 'Raley' ), ( 'Suzanna', 'Reyes' ), ( 'Karee', 'Varkey' ), ( 'Glendon', 'Clouthier' ), ( 'Moria', 'Lyons' ), ( 'Berty', 'Dupras' ), ( 'Raul', 'Carnegie' ), ( 'Chabert', 'Bodkin' ), ( 'Andaree', 'Skerry' ) }, '2012-09-17' : { ( '', '' ), ( '', '' ) }, '2000-08-09' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2011-07-15' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2015-02-13' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-03' : { ( 'Hettie', 'Vonende' ), ( 'Cang', 'Adhem' ), ( 'Shahab', 'Beeston' ), ( 'Clemente', 'Roger' ), ( 'Dusan', 'Eppenstiner' ), ( 'Carolynn', 'Laplante' ), ( 'Leena', 'Grosman' ), ( 'Renata', 'Rabecs' ), ( 'Rodrigus', 'Beconovich' ), ( 'Tiina', 'Semeniuk' ) } }, 'Said nothing I know the seat by everyone, shouldn''t I who kept her house of a. Spared from did he continued walking a smile, truly wanted to reach this yet sir. Hours of robbers have rest with wide golden cage.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 8, 'Illimura', ( 'Sigrid', 'Cheatham' ), { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, [ '+57 985 324 412', '+16 216 518 336', '+52 425 154 861', '+44 177 814 762', '+15 785 252 515', '+42 493 314 474', '+80 396 805 355', '+11 243 220 785', '+45 576 547 353', '+20 243 564 104' ], { 'harriet.florence@live.com', 'danya.langevin@gmail.com', 'ibrahim.puglia@hotmail.com', 'elva.krautle@yahoo.com', 'zeina.gioffre@hotmail.com', 'moreen.helfrick@outlook.com', 'dreddy.snarr@yahoo.com', 'nurettin.belcourt@live.com', 'brietta.labranche@yahoo.com', 'yuchung.soong@hotmail.com' }, { '+28 146 301 458' : 'Poon Insurance', '+92 459 213 111' : 'Grimm Dynamics', '+73 742 723 421' : 'Snair Software', '+20 536 271 906' : 'Baer Associates', '+43 766 984 849' : 'Fleming Trust', '+46 573 452 119' : 'Searles Trust', '+38 382 812 655' : 'Aminzadeh Association', '+92 533 138 495' : 'Cropper Shop', '+42 852 180 235' : 'Bockaj Club', '+44 218 814 231' : 'Blakey Institute' }, '2000-08-09', { ( 'Daniel', 'Dorishampton' ) : '2011-07-15', ( 'Sigrid', 'Cheatham' ) : '2003-05-27', ( 'Cory', 'Mcbeth' ) : '2015-02-13', ( '', '' ) : '2001-02-03', ( 'Carmen', 'Degenova' ) : '2001-02-04', ( 'Malcolm', 'Beech' ) : '2015-05-16', ( 'Shou', 'Kernodle' ) : '2014-04-26', ( 'Vino', 'Randolph' ) : '2012-09-17', ( 'Cang', 'Janiszewski' ) : '2003-05-27', ( 'Celine', 'Malizia' ) : '2000-08-09' }, { '2015-06-14', '2001-02-04', '2001-02-03', '2000-08-09', '2012-09-17', '2014-04-26', '2003-05-27', '2015-05-16', '2015-02-13', '2011-07-15', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2014-04-26', '2012-09-17', '2003-05-27' ], { '2000-08-09' : { ( 'Melonie', 'Chiamvimonvat' ), ( 'Jap', 'Raley' ), ( 'Suzanna', 'Reyes' ), ( 'Karee', 'Varkey' ), ( 'Glendon', 'Clouthier' ), ( 'Moria', 'Lyons' ), ( 'Berty', 'Dupras' ), ( 'Raul', 'Carnegie' ), ( 'Chabert', 'Bodkin' ), ( 'Andaree', 'Skerry' ) }, '2015-05-16' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2015-02-13' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2001-02-04' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2012-09-17' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2003-05-27' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-03' : { ( 'Marylinda', 'Daniels' ), ( 'Bernice', 'Marcanti' ), ( 'Gavrielle', 'Freeth' ), ( 'Rhodia', 'Magee' ), ( 'Ladan', 'Schmidt' ), ( 'Rafiq', 'Azer' ), ( 'Goldi', 'Rantala' ), ( 'Janifer', 'Dubose' ), ( 'Yokan', 'Acs' ), ( 'Edmond', 'Montmorency' ) }, '2014-04-26' : { ( 'Petri', 'Schofield' ), ( 'Esma', 'Bruce' ), ( 'Jeannine', 'Torok' ), ( 'Rhoda', 'Ivancic' ), ( 'Puran', 'Santos' ), ( 'Kellina', 'Praeuner' ), ( 'Ardra', 'Manica' ), ( 'Perla', 'Pambianchi' ), ( 'Doralia', 'Arellano' ), ( 'Carine', 'Rios' ) }, '2015-06-14' : { ( '', '' ), ( '', '' ) }, '2011-07-15' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) } }, 'Sleep with oil or bad talk with ecstasy, goal towards himself not in holiness wisdom not know, shall I meant was yellow robes walking silently. Better opinion and fruits and necessary sequence of expertise.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 9, 'Difasmukora', ( 'Vino', 'Randolph' ), { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, [ '+71 991 519 758', '+47 983 228 949', '+73 250 181 242', '+25 403 383 141', '+52 615 732 317', '+79 727 653 578', '+26 496 232 520', '+13 753 909 636', '+36 136 245 531', '+42 442 459 572' ], { 'evonne.biage@hotmail.com', 'nils.dephoure@mail.com', 'nashib.dalrymple@yahoo.com', 'opto.gilleland@gmail.com', 'reginald.shyu@gmail.com', 'merna.barenie@outlook.com', 'rec.cochrane@yahoo.com', 'ramesh.giuliani@mail.com', 'franciska.loper@mail.com', 'mandy.yahyapour@gmail.com' }, { '+98 403 919 913' : 'Freiwald Fashion', '+33 702 934 647' : 'Hadaway Network', '+60 962 986 678' : 'Fleskes Bank', '+95 300 867 140' : 'Pavlic Logic', '+52 277 533 393' : 'Gemmill Consulting', '+55 304 322 480' : 'Jawanda Incorporated', '+35 550 562 586' : 'Gasparotto Vision', '+12 577 980 364' : 'Tariq Direct', '+73 722 165 231' : 'Mo Market', '+45 461 913 114' : 'Couey Company' }, '2011-07-15', { ( 'Sigrid', 'Cheatham' ) : '2003-05-27', ( '', '' ) : '2011-07-15', ( 'Cang', 'Janiszewski' ) : '2001-02-03', ( 'Daniel', 'Dorishampton' ) : '2003-05-27', ( 'Celine', 'Malizia' ) : '2001-02-03', ( 'Shou', 'Kernodle' ) : '2011-07-15', ( 'Cory', 'Mcbeth' ) : '2015-06-14', ( 'Carmen', 'Degenova' ) : '2003-05-27', ( 'Malcolm', 'Beech' ) : '2015-06-14', ( 'Vino', 'Randolph' ) : '2015-02-13' }, { '2014-04-26', '2000-08-09', '2011-07-15', '2003-05-27', '2012-09-17', '2015-02-13', '2001-02-04', '2001-02-03', '2015-05-16', '2015-06-14', '', '', '', '', '' }, [ '2000-08-09', '2015-06-14', '2003-05-27' ], { '2015-06-14' : { ( 'Hettie', 'Vonende' ), ( 'Cang', 'Adhem' ), ( 'Shahab', 'Beeston' ), ( 'Clemente', 'Roger' ), ( 'Dusan', 'Eppenstiner' ), ( 'Carolynn', 'Laplante' ), ( 'Leena', 'Grosman' ), ( 'Renata', 'Rabecs' ), ( 'Rodrigus', 'Beconovich' ), ( 'Tiina', 'Semeniuk' ) }, '2015-02-13' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2014-04-26' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2000-08-09' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2015-05-16' : { ( 'Marylinda', 'Daniels' ), ( 'Bernice', 'Marcanti' ), ( 'Gavrielle', 'Freeth' ), ( 'Rhodia', 'Magee' ), ( 'Ladan', 'Schmidt' ), ( 'Rafiq', 'Azer' ), ( 'Goldi', 'Rantala' ), ( 'Janifer', 'Dubose' ), ( 'Yokan', 'Acs' ), ( 'Edmond', 'Montmorency' ) }, '2001-02-03' : { ( 'Birendra', 'Sabourin' ), ( 'Shaji', 'Wagle' ), ( 'Pakjong', 'Egerman' ), ( 'Tessi', 'Budhram' ), ( 'Andreas', 'Yong' ), ( 'Kas', 'Eberlin' ), ( 'Heidi', 'Machattie' ), ( 'Tiny', 'Rikley' ), ( 'Lorna', 'Osterberg' ), ( 'Mats', 'Safah' ) }, '2003-05-27' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2012-09-17' : { ( 'Marylinda', 'Daniels' ), ( 'Bernice', 'Marcanti' ), ( 'Gavrielle', 'Freeth' ), ( 'Rhodia', 'Magee' ), ( 'Ladan', 'Schmidt' ), ( 'Rafiq', 'Azer' ), ( 'Goldi', 'Rantala' ), ( 'Janifer', 'Dubose' ), ( 'Yokan', 'Acs' ), ( 'Edmond', 'Montmorency' ) }, '2011-07-15' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-04' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) } }, 'Scolding and complete entering this terrible words. Were many would when what fault in poverty. Over every joint of three noble were long time, smart brown and lovely it resembled his chin. All manifestations is willing to work beautiful.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 10, 'Ingassij', ( 'Daniel', 'Dorishampton' ), { ( 'Luther', 'Watkins' ), ( 'Redgie', 'Fadlallah' ), ( 'Kaiming', 'Kazimierski' ), ( 'Crista', 'Takashima' ), ( 'Utilla', 'Soin' ), ( 'Devan', 'Christian' ), ( 'Neilla', 'Regan' ), ( 'Geralda', 'Bradbury' ), ( 'Gabi', 'Pearce' ), ( 'Ailey', 'Visser' ) }, [ '+85 888 578 847', '+50 461 862 917', '+96 330 210 955', '+24 490 245 349', '+71 603 752 780', '+34 367 740 770', '+22 758 939 573', '+84 967 993 735', '+61 785 145 867', '+17 914 727 879' ], { 'lucine.asing@gmail.com', 'lauraine.dipasquale@hotmail.com', 'kacie.macisaac@outlook.com', 'violet.brovont@yahoo.com', 'mollie.godsoe@outlook.com', 'tzung.tabler@live.com', 'digby.inhulsen@mail.com', 'kaleena.sridhar@outlook.com', 'tung.hately@gmail.com', 'karyl.lask@live.com' }, { '+73 694 742 623' : 'Jarvah Market', '+74 920 724 180' : 'Kneese Associates', '+84 745 669 190' : 'Tremblay Union', '+95 284 597 483' : 'Fullager Express', '+54 383 791 833' : 'Brock Online', '+60 807 472 682' : 'Demir Depot', '+92 661 603 874' : 'Lamey Consulting', '+25 158 939 400' : 'Stgermain Fashion', '+75 969 186 340' : 'Lollis Magazine', '+75 500 967 705' : 'Kessel Central' }, '2015-06-14', { ( '', '' ) : '2015-05-16', ( 'Malcolm', 'Beech' ) : '2012-09-17', ( 'Shou', 'Kernodle' ) : '2003-05-27', ( 'Sigrid', 'Cheatham' ) : '2003-05-27', ( 'Cory', 'Mcbeth' ) : '2011-07-15', ( 'Carmen', 'Degenova' ) : '2003-05-27', ( 'Cang', 'Janiszewski' ) : '2014-04-26', ( 'Daniel', 'Dorishampton' ) : '2015-06-14', ( 'Celine', 'Malizia' ) : '2011-07-15', ( 'Vino', 'Randolph' ) : '2015-06-14' }, { '2014-04-26', '2015-05-16', '2001-02-04', '2015-06-14', '2011-07-15', '2001-02-03', '2015-02-13', '2000-08-09', '2012-09-17', '2003-05-27', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2014-04-26', '2012-09-17', '2011-07-15' ], { '2011-07-15' : { ( 'Luther', 'Watkins' ), ( 'Redgie', 'Fadlallah' ), ( 'Kaiming', 'Kazimierski' ), ( 'Crista', 'Takashima' ), ( 'Utilla', 'Soin' ), ( 'Devan', 'Christian' ), ( 'Neilla', 'Regan' ), ( 'Geralda', 'Bradbury' ), ( 'Gabi', 'Pearce' ), ( 'Ailey', 'Visser' ) }, '2003-05-27' : { ( 'Hettie', 'Vonende' ), ( 'Cang', 'Adhem' ), ( 'Shahab', 'Beeston' ), ( 'Clemente', 'Roger' ), ( 'Dusan', 'Eppenstiner' ), ( 'Carolynn', 'Laplante' ), ( 'Leena', 'Grosman' ), ( 'Renata', 'Rabecs' ), ( 'Rodrigus', 'Beconovich' ), ( 'Tiina', 'Semeniuk' ) }, '2014-04-26' : { ( 'Petri', 'Schofield' ), ( 'Esma', 'Bruce' ), ( 'Jeannine', 'Torok' ), ( 'Rhoda', 'Ivancic' ), ( 'Puran', 'Santos' ), ( 'Kellina', 'Praeuner' ), ( 'Ardra', 'Manica' ), ( 'Perla', 'Pambianchi' ), ( 'Doralia', 'Arellano' ), ( 'Carine', 'Rios' ) }, '2015-05-16' : { ( '', '' ), ( '', '' ) }, '2000-08-09' : { ( '', '' ), ( '', '' ) }, '2015-02-13' : { ( 'Gerianna', 'Hilaire' ), ( 'Alfy', 'Hagglund' ), ( 'Dave', 'Vertolli' ), ( 'Diandra', 'Bushnik' ), ( 'Erdem', 'Bhatti' ), ( 'Freeman', 'Bulman' ), ( 'Rodi', 'Brasunas' ), ( 'Kemp', 'Steffy' ), ( 'Lyda', 'Credico' ), ( 'Meriline', 'Chanonat' ) }, '2001-02-03' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2001-02-04' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2012-09-17' : { ( 'Manimozhi', 'Baldwin' ), ( 'Edie', 'Rix' ), ( 'Gino', 'Berryhill' ), ( 'Zulfikar', 'Crompton' ), ( 'Jurg', 'Bortenstein' ), ( 'Cassandre', 'Molani' ), ( 'Tracey', 'Odonnell' ), ( 'Lingyue', 'Noddin' ), ( 'Trever', 'Darcy' ), ( 'Golda', 'Emond' ) }, '2015-06-14' : { ( 'Hettie', 'Vonende' ), ( 'Cang', 'Adhem' ), ( 'Shahab', 'Beeston' ), ( 'Clemente', 'Roger' ), ( 'Dusan', 'Eppenstiner' ), ( 'Carolynn', 'Laplante' ), ( 'Leena', 'Grosman' ), ( 'Renata', 'Rabecs' ), ( 'Rodrigus', 'Beconovich' ), ( 'Tiina', 'Semeniuk' ) } }, 'Told you succeed in blissfulness between the grove, by he hung over freezing shoulders almost the water. River today had once in memory but to rest, would find these most embarrassing parts everything together with.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5, 'first', 1, ' This is the first text, with spaces ' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612, 'second', 2, 'This is the second text, with escaped characters ^~{}' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524, 'third', 3, 'This is the third text§with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -7654305769731274948, c0759f24-1649-8708-841e-7975566360ce, 'fourth', 4, 'This is the fourth text§also with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 485300369368791641, 20c6af8f-e2e8-4408-fbaa-2786d7e6f34d, 'Egerman', 962, 'Followed a wrong manner and been given him unconscious, I''ve found it not seem alien to rest now, loudly and essence lay himself with such jokes. Behold here in his familiarity with equanimity.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 6628653168712178107, 5bb3fd90-7547-486f-04ae-8f4d0ffd2f7c, 'Newhook', 658, 'Once before seen everything died once and colourful canopy, thanked him safe from time of mere words. Knowing it does who has nothing when was good, had grown up gave the middle of him.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 4702548910195007016, e41604ce-bbb5-421b-4878-39dc513fe384, 'Cole', 64, 'Read them after a pain felt like him, forgive me where their alms-dish of our venerable teacher. Fasting waiting to enjoy being just travelling, still found neither fasting and worry said.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 6697907437312599697, 8ce37a90-028b-4768-4355-cd04096986c6, 'Gaiarsa', 450, 'Came towards beggars lost your words exclaimed, deeply it away nobody knew neither felt that goal. But only hide from did see the perfected man, wanted to please you and holy to them.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 1347016341414927138, e418011d-469f-43fa-2f7b-724fa3d1bcc1, 'Laker', 500, 'Near thus childlike person so differently the test. Language would feel his friendly people asked amusedly. Goal longing felt the ferry me from myself, though you''ve slept on in himself despised at once. Travelled through it with and hands were accepted.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 6843759983378287393, 9a10149d-4c41-48cc-5967-9e4e77cf44c7, 'Tadge', 830, 'Fell asleep myself the rosy paths of enlightenment, from you must praise or discard them. Years I already thought a shipment of mere words, placed two bananas in everything to you. Listened and duties of no good death the bow.' );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 5d509b3b-7b4c-4c90-0139-15e04dcc174f, 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( b1e1b53b-4b48-42b8-1c1c-41fb3609a465, -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 618de3b9-f53c-428f-386c-4dd60f820be4, -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 52a99ac5-b9d1-480e-d970-d48578e508c6, -5359923222225123686, 0883a652-0e6e-b6c9-304d-cfb71034d053 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 30e6c342-fa39-4e4a-c6a7-a69474a42387, -6907789044519798771, dd5c8bf5-1558-ffcb-e500-7071908e9524 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 817d0017-df15-46dc-8b99-085b0e19755f, -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 22395b84-a0c7-4bd3-f2ee-ff13b6e05499, 1347016341414927138, 20c6af8f-e2e8-4408-fbaa-2786d7e6f34d );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 9a4b0019-9f27-419c-8f27-3c263249a9b4, 6843759983378287393, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( b809c801-b1d7-4a78-a362-606c0455b407, -7654305769731274948, dd5c8bf5-1558-ffcb-e500-7071908e9524 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 40d26bfc-6625-476a-853b-0c7f58195489, -5292141111288023615, a9f0e61a-137d-86aa-9db5-3465e0801612 );
