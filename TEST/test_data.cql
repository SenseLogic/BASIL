insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 8dbdda48-fb87-48d6-746f-1965824e966a, false, 1, 2, 3, 4, 5, 6, 7, 8, 1.1, 2.2, 'Hello world!', 'Mclendon', '2001-02-03', '2001-02-03 04:05:06.789', 0x123456781234567891234567812345678 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 3fe38a16-3629-4dde-d5eb-f722242a5dbf, true, 67, 74, 835, 446, 259, 52, 496, 510, 74.61, 35.93, 'Enfellenti', 'Sztein', '2010-07-26', '2007-04-04 11:00:18', 0x9ff38d8e91a8725aa7d5 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( d6cf0db4-b74a-adeb-4f1e-fab78d4c561a, true, 18, 63, 906, 971, 736, 779, 769, 888, 17.36, 57.96, 'Suhagafor', 'Satterfield', '2004-04-24', '2013-02-08 05:09:05', 0x5645caf0f5a8ca6770d5 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( fa25bd1b-bf0d-a916-1d78-a7aa7006562c, false, 81, 35, 708, 988, 867, 134, 549, 170, 14.64, 21.15, 'Ontorsfid', 'Chorley', '2002-12-26', '2012-08-04 08:50:03', 0x060886e754fbfad8c1e6 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 9ee88f41-00fc-4f92-1483-9c3cb7cb119b, true, 40, 44, 283, 962, 817, 383, 422, 382, 58.52, 98.86, 'Wiludlid', 'Susick', '2001-05-18', '2002-02-01 16:06:42', 0x0115ebd3abc1fe2fc39c );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 24ed03c2-57d8-ef4d-b45b-c7baa9166a41, true, 82, 74, 115, 943, 198, 764, 236, 448, 78.64, 83.87, 'Baugyu', 'Biage', '2008-05-08', '2015-08-18 11:45:37', 0x9db514ee5b8742714448 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( c462855d-f638-ca0a-8677-81e29a89fb03, false, 57, 49, 196, 1000, 118, 377, 272, 437, 37.96, 97.2, 'Orenchetini', 'Ladva', '2011-10-24', '2013-04-12 06:06:46', 0x8dbfa583cfba494ef164 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( d2ea21dd-71e7-95e9-faae-ab2cf6d15adf, false, 59, 44, 902, 838, 655, 730, 705, 489, 52.19, 52.53, 'OrsfibueCo', 'Gallouzi', '2003-07-26', '2000-08-28 10:58:08', 0xc80cd6471922e154b10d );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 8809374e-19b9-6c6e-578d-03708608bf95, false, 54, 80, 45, 702, 738, 105, 241, 623, 71.6, 52.31, 'Atthid', 'Weidenborner', '2003-03-28', '2008-06-05 18:57:46', 0x6dae39c2b43df2894893 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 3ec6f599-c848-5c5a-47b5-d0083ca4948c, true, 55, 53, 877, 10, 490, 95, 639, 433, 35.31, 81.4, 'Elladewisu', 'Allam', '2014-05-11', '2013-03-08 23:01:04', 0xfbfdbf88b92c06ccf87b );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 1, 'Belgium', ( 'Malcolm', 'Beech' ), { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, [ '12345678', '23456789' ], { 'jack.harper@gmail.com', 'victoria.olsen@outlook.com' }, { '12345678' : 'Warner Bros', '23456789' : 'Universal Pictures' }, '2008-05-08', { ( 'Shamshad', 'Barszczewski' ) : '2002-12-26', ( 'Malcolm', 'Beech' ) : '2008-05-08' }, { '2004-04-24', '2001-02-03' }, [ '2001-05-18', '2004-04-24' ], { '2010-07-26' : { ( 'Cary', 'Swick' ), ( 'Lelia', 'Loi' ) }, '2003-03-28' : { ( 'Cary', 'Swick' ), ( 'Lelia', 'Loi' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 2, 'OPIBASINILON', ( 'Lapkin', 'Daaboul' ), { ( 'Rodi', 'Bandel' ), ( 'Janel', 'Wormald' ) }, [ '+24 557 838 921', '+24 266 249 307' ], { 'quinn.bason@outlook.com', 'marley.gann@outlook.com' }, { '+11 988 957 589' : 'Enns Corporation', '+48 798 821 229' : 'Lazarowich Labs' }, '2003-03-28', { ( 'Lapkin', 'Daaboul' ) : '2014-05-11', ( 'Freda', 'Josiah' ) : '2003-03-28' }, { '2001-02-03', '2008-05-08' }, [ '2003-07-26', '2002-12-26', '2010-07-26' ], { '2004-04-24' : { ( 'Rodi', 'Bandel' ), ( 'Janel', 'Wormald' ) }, '2001-02-03' : { ( 'Rodi', 'Bandel' ), ( 'Janel', 'Wormald' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 3, 'DURANTAYELAU', ( 'Freda', 'Josiah' ), { ( 'Yvet', 'Keene' ), ( 'Loretta', 'Tranfaglia' ) }, [ '+89 140 937 555', '+99 860 372 529' ], { 'he.canada@hotmail.com', 'mcgee.vempati@outlook.com' }, { '+16 977 506 264' : 'Montaldo Direct', '+14 298 140 398' : 'Voight Church' }, '2003-07-26', { ( 'Adrianne', 'Sinyor' ) : '2001-05-18', ( 'Rod', 'Stonge' ) : '2011-10-24' }, { '2014-05-11', '2001-05-18' }, [ '2004-04-24' ], { '2008-05-08' : { ( 'Vinni', 'Maclean' ), ( 'Wilf', 'Ganguly' ) }, '2003-07-26' : { ( 'Maribel', 'Skiclub' ), ( 'Lucas', 'Lindberg' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 4, 'WIEHULAL', ( 'Christian', 'Saltsider' ), { ( 'Alfons', 'Oslund' ), ( 'Marsha', 'Rundle' ) }, [ '+81 161 771 192', '+11 756 319 894' ], { 'deonne.gallais@hotmail.com', 'kalina.valentik@mail.com' }, { '+46 985 609 535' : 'Maltese Consulting', '+29 965 648 163' : 'Hedrick Online' }, '2001-05-18', { ( 'Adrianne', 'Sinyor' ) : '2008-05-08', ( 'Rod', 'Stonge' ) : '2001-02-03' }, { '2014-05-11', '2003-03-28' }, [ '2003-07-26', '2011-10-24' ], { '2010-07-26' : { ( 'Meara', 'Suer' ), ( 'Carlin', 'Holy' ) }, '2001-02-03' : { ( 'Vinni', 'Maclean' ), ( 'Wilf', 'Ganguly' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 5, 'ATENRIJA', ( 'Shamshad', 'Barszczewski' ), { ( 'Meara', 'Suer' ), ( 'Carlin', 'Holy' ) }, [ '+95 458 312 214', '+54 779 456 983' ], { 'orsa.ivanyi@mail.com', 'melly.demers@outlook.com' }, { '+53 620 890 997' : 'Flickinger Church', '+94 429 824 661' : 'Robins Fx' }, '2008-05-08', { ( 'Terra', 'Demidenko' ) : '2014-05-11', ( 'Freda', 'Josiah' ) : '2004-04-24' }, { '2010-07-26', '2008-05-08' }, [ '2001-02-03', '2001-02-03' ], { '2003-07-26' : { ( 'Suvanee', 'Debrun' ), ( 'Dulcine', 'Ghidali' ) }, '2002-12-26' : { ( 'Meara', 'Suer' ), ( 'Carlin', 'Holy' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 6, 'DURUIRRE', ( 'Adrianne', 'Sinyor' ), { ( 'Gheorghe', 'Simon' ), ( 'Gaetan', 'Hirakawa' ) }, [ '+79 415 579 418', '+60 297 263 720' ], { 'tam.branscombe@live.com', 'edmond.salamon@hotmail.com' }, { '+58 710 241 577' : 'Merrett Institute', '+59 560 789 624' : 'Ressner Agency' }, '2004-04-24', { ( 'Shamshad', 'Barszczewski' ) : '2011-10-24', ( 'Adrianne', 'Sinyor' ) : '2004-04-24' }, { '2003-07-26', '2003-03-28' }, [ '2010-07-26', '2002-12-26' ], { '2001-05-18' : { ( 'Alfons', 'Oslund' ), ( 'Marsha', 'Rundle' ) }, '2004-04-24' : { ( 'Alfons', 'Oslund' ), ( 'Marsha', 'Rundle' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 7, 'ERNAWA', ( 'Terra', 'Demidenko' ), { ( 'Maribel', 'Skiclub' ), ( 'Lucas', 'Lindberg' ) }, [ '+39 379 595 134', '+63 417 429 698' ], { 'merb.klowak@gmail.com', 'mal.walton@live.com' }, { '+76 263 173 655' : 'Cung Market', '+66 668 450 366' : 'Mayne News' }, '2003-03-28', { ( 'Lapkin', 'Daaboul' ) : '2008-05-08', ( 'Malcolm', 'Beech' ) : '2010-07-26' }, { '2010-07-26', '2003-03-28' }, [ '2008-05-08', '2003-03-28' ], { '2010-07-26' : { ( 'Meara', 'Suer' ), ( 'Carlin', 'Holy' ) }, '2002-12-26' : { ( 'Rodi', 'Bandel' ), ( 'Janel', 'Wormald' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 8, 'ACHKAGALIP', ( 'Collette', 'Mccormick' ), { ( 'Vinni', 'Maclean' ), ( 'Wilf', 'Ganguly' ) }, [ '+25 981 961 711', '+92 214 132 896' ], { 'angelique.tables@mail.com', 'krzysztof.mohan@outlook.com' }, { '+56 342 223 726' : 'Moskalik Foundation', '+65 147 609 283' : 'Everett Security' }, '2003-03-28', { ( 'Adrianne', 'Sinyor' ) : '2014-05-11', ( 'Malcolm', 'Beech' ) : '2001-05-18' }, { '2004-04-24', '2010-07-26' }, [ '2001-05-18', '2003-03-28' ], { '2010-07-26' : { ( 'Meara', 'Suer' ), ( 'Carlin', 'Holy' ) }, '2002-12-26' : { ( 'Gheorghe', 'Simon' ), ( 'Gaetan', 'Hirakawa' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 9, 'DIHECKARDWIU', ( 'Rod', 'Stonge' ), { ( 'Suvanee', 'Debrun' ), ( 'Dulcine', 'Ghidali' ) }, [ '+76 458 127 127', '+51 983 606 776' ], { 'alfonzo.beauchaine@mail.com', 'melissa.angerer@outlook.com' }, { '+64 765 292 118' : 'Gingras Depot', '+20 204 797 545' : 'Toperzer Central' }, '2014-05-11', { ( 'Collette', 'Mccormick' ) : '2001-02-03', ( 'Freda', 'Josiah' ) : '2010-07-26' }, { '2001-02-03', '2014-05-11', '' }, [ '2003-03-28' ], { '2002-12-26' : { ( 'Alfons', 'Oslund' ), ( 'Marsha', 'Rundle' ) }, '2008-05-08' : { ( 'Cary', 'Swick' ), ( 'Lelia', 'Loi' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 10, 'ITRUMMEGE', ( 'Patra', 'Bernardi' ), { ( 'Cary', 'Swick' ), ( 'Lelia', 'Loi' ) }, [ '+59 758 895 108', '+35 371 806 949' ], { 'amabel.tallett@outlook.com', 'marjorie.hao@live.com' }, { '+16 702 862 521' : 'Gibbs Vision', '+81 420 201 244' : 'Chafy Agency' }, '2008-05-08', { ( 'Terra', 'Demidenko' ) : '2002-12-26', ( 'Freda', 'Josiah' ) : '2011-10-24' }, { '2010-07-26', '2003-03-28' }, [ '2001-05-18', '2001-05-18' ], { '2010-07-26' : { ( 'Maribel', 'Skiclub' ), ( 'Lucas', 'Lindberg' ) }, '2001-05-18' : { ( 'Vinni', 'Maclean' ), ( 'Wilf', 'Ganguly' ) } } );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5, 'first', 1, ' This is the first text, with spaces ' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612, 'second', 2, 'This is the second text, with escaped characters ^~{}' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524, 'third', 3, 'This is the third text§with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -7654305769731274948, c0759f24-1649-8708-841e-7975566360ce, 'fourth', 4, 'This is the fourth text§also with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 2423266600782609972, 71204591-bcea-6462-db61-6c6b448183b6, 'Pietromonaco', 786, 'Look on carrying such complaints more things as inanimate to speak a year. Reform or blindly carrying such meal when nature''s own faults is with material plodding minds, grant exercise of bodies because the advent of this law, ought to new very remote from ills about mentally on earth. Can read them at one step having his heart.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 4227154549727121919, 38bd57f2-43cc-a189-25dc-fc2437028c08, 'Prado', 367, 'Having his several children was a weak decaying even soil must grow decidedly misshapen ideas, let it make it temporarily the coloring of being. Habit be astonished at large do that comes to try it absorb of times your being. Live one person who looks on birds animals mutilation of air so much of earth, nor perishable accumulates money is acted as years ago. Suppose that even rule the bank can seem growing old go occupying our time, millions so large majority are miserable when that gas.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 796164522535565933, 946c4f01-be5c-34bf-5b42-2713b382122d, 'Acharyya', 790, 'Replace the slough they will dawn on will gladly lend its food, man''s toiling farmer who differ with its family. Despite all unusual manifestations of repose when spirit hard board floor which self. Impure and trained to any use each year and life goes straight on, seek and strengthening means only temporary expression tree that direction. The outside of humanity is fagged out or entertaining your association or unconsciously is ever realized, was a harsh irascible over all generating an impalpable dust with sewer beneath and mentally. Presence or awake nights and combination of security. Banish it would occur did they falsely called ordinary things seen again you visit and weak.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 4960905154159753355, 3a1e815b-afb8-1588-18de-be633e05a101, 'Manner', 698, 'Soon as our most while to cease then for days lived twenty years gone. With people admit that we deal with a yard stick, dress more senses and realization of thoughts concerning your sad memories of yesterday. Seek will get very rails and soon this also by them. Would say but since cast out element wrongly and disappointment have seen matter on their character, every expression good time materialize more things great grandson founded only at present. Regret your town and store of discovery in hurry your spirit, internally secretly among men and sympathetic physician as possible thing without presuming to life everlasting. Scores of eternal life unable longer use or association, everyone has conquered assyrian transferred to retain shreds are checked that past good health.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 6514052860104281007, 86176b50-0c57-f18b-c3b4-b23c81f5f43f, 'Grochau', 600, 'God is one act in others ask to digest anything but one existence, that mankind demands for sport or tree itself. Timidity is only borrowing and making at home or girl of house it more with joy, old feeble old go and bad atmosphere of earth. Refuse for sins who carried to time father and address will find difficulties in life, now denied the admiration is falsely called magic. The train of deformity of regret your individual will bring disease death of tomorrow and sympathy, bears lions in movement slowly dying agonies if our daily receive thought despondent hopeless servitude.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 3072129991199445400, 83fe811c-bbf0-2787-7c8f-d207aee1f106, 'Frink', 921, 'Cultivate the falling off they feel the old, sympathy is much as peoples bodies because we work they demand than one.  why was found would rather the grosser spirit increased and now realize. Spirituality is trying or lust or lasting reformation throughout in looking back their bodies, cry out completely from falling snow and connecting the old. Demand and child that of exhilaration in than now if human ills flesh by others, changes for bringing to nurse our very unlike yours alone in depth dissolution and drawing direction, with thousands many grown so forgetting the clashing of relatives. My track and masses dream a favor her help you use in forms and mentally, sometimes a leaf by natural or danger above.' );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 45aeeff3-265f-7a12-6b05-52dc096c5a80, 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( c50962f8-4690-91c4-96a2-ea3be7121531, -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( c92dd6b5-3f06-f4b9-e2c6-89add080aa24, -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 0be72bc9-199f-dcd2-a717-ce5f53444a47, -5359923222225123686, 0883a652-0e6e-b6c9-304d-cfb71034d053 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( ee51a30e-ac87-e68f-bead-4c3cfd378a5f, 4227154549727121919, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 9fd3b6a6-07d8-9717-cbc9-91ab93445419, 3344523601393165508, c0759f24-1649-8708-841e-7975566360ce );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 69c3a681-5344-1564-13ab-0411899f012a, 4960905154159753355, 71204591-bcea-6462-db61-6c6b448183b6 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( c9b59d58-41b3-c960-6f79-941f17e429f6, 4960905154159753355, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 7ae3a1a7-ba8a-a9d1-c79f-6a9b948da9ed, 4960905154159753355, 946c4f01-be5c-34bf-5b42-2713b382122d );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( fe0a006c-cf0c-5ef7-0768-23a6eff27640, -7654305769731274948, 71204591-bcea-6462-db61-6c6b448183b6 );
