insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 8dbdda48-fb87-48d6-746f-1965824e966a, false, 1, 2, 3, 4, 5, 6, 7, 8, 1.1, 2.2, 'Hello world!', 'Kadamani', '2001-02-03', '2001-02-03 04:05:06.789', 0x123456781234567891234567812345678 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 3b09af91-30e2-897c-e2fb-1685f50f57aa, false, 23, 100, 390, 312, 335, 691, 315, 336, 22.51, 52.54, 'Ikkidgemil', 'Gruska', '2015-08-15', '2014-11-11 23:11:01', 0xd8e7279a10932c30164d );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 1f3bb59e-0844-f3c4-7bae-19c1f6761334, true, 57, 90, 500, 486, 548, 827, 215, 854, 99.76, 71.32, 'Mariekejoby', 'Abouarrage', '2006-06-02', '2005-10-10 17:14:10', 0x77b1fd7941a64a0b97c2 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( cfeefcab-0b53-3cb5-26a1-3e442eaa13d3, false, 82, 4, 282, 731, 997, 315, 563, 802, 78.83, 76.8, 'Noveva', 'Grazzini', '2009-12-07', '2011-05-14 21:45:09', 0x45068b505340ae9f66d7 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( d7b37291-e45b-2192-30f4-0af31768896a, true, 81, 95, 833, 588, 455, 534, 444, 484, 40.8, 40.17, 'Ensteviere', 'Macklem', '2007-07-13', '2010-01-22 04:38:07', 0x6ff3fdffb7210a04204f );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 12515756-0eef-a54a-8719-8afce488b549, true, 10, 17, 781, 642, 209, 194, 256, 651, 64.25, 12.89, 'Denarseu', 'Blouin', '2009-07-13', '2008-02-21 04:03:09', 0x76a73678bc9da5e429c1 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 52535d21-eed2-e9ce-eda9-daf20a5e2834, false, 14, 40, 909, 288, 377, 795, 898, 689, 40.35, 60.29, 'Ritanto', 'Bathrick', '2011-04-24', '2010-12-10 13:56:01', 0x21e38cc44d54dde6eb58 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( b8f870cd-81f6-ce24-fcc0-1abeebd89a0e, false, 99, 56, 572, 539, 543, 485, 54, 23, 87.07, 15.7, 'Esmailitfal', 'Oconnor', '2008-01-16', '2000-09-20 19:37:48', 0x85f1d314ce0582a31713 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( b2816154-eeba-ef4b-2428-e5d73cbe37fa, false, 51, 85, 503, 432, 431, 194, 229, 877, 72.5, 92.55, 'Evgoquitrar', 'Schinkel', '2012-03-14', '2014-08-06 17:34:13', 0xcb0a5f46916867c0f272 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob ) values ( 7b29fcc8-07ce-3830-fd51-fad4dba14ccd, true, 42, 22, 61, 658, 551, 640, 128, 805, 35.38, 98.62, 'IlliJo', 'Marneris', '2004-10-03', '2006-06-24 09:51:28', 0xbbdc43c9a628e77385ea );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 1, 'Belgium', ( 'Malcolm', 'Beech' ), { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, [ '12345678', '23456789' ], { 'jack.harper@gmail.com', 'victoria.olsen@outlook.com' }, { '12345678' : 'Warner Bros', '23456789' : 'Universal Pictures' }, '2012-03-14', { ( 'Geetha', 'Tornes' ) : '2015-08-15', ( 'Reynold', 'Khezri' ) : '2015-08-15' }, { '2001-02-03', '2012-03-14' }, [ '2007-07-13', '2011-04-24' ], { '2004-10-03' : { ( 'Kathy', 'Eby' ), ( 'Tadeusz', 'Bleuer' ) }, '2009-07-13' : { ( 'Gerhard', 'Brostrom' ), ( 'Datha', 'Stewart' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 2, 'ELLUROVAN', ( 'Drusilla', 'Amu' ), { ( 'Gerhard', 'Brostrom' ), ( 'Datha', 'Stewart' ) }, [ '+52 427 550 410', '+60 637 304 560' ], { 'nelleke.lannan@outlook.com', 'sunny.debassige@live.com' }, { '+59 566 452 745' : 'Ruttan Society', '+49 663 579 432' : 'Sonne Foundation' }, '2004-10-03', { ( 'Odile', 'Dillard' ) : '2001-02-03', ( 'Giles', 'Cicci' ) : '2009-12-07' }, { '2012-03-14', '2015-08-15' }, [ '2004-10-03', '2009-07-13', '2011-04-24' ], { '2008-01-16' : { ( 'Shirene', 'Wilks' ), ( 'Emily', 'Rohan' ) }, '2012-03-14' : { ( 'Herbert', 'Evers' ), ( 'Reyaud', 'Brower' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 3, 'INTOTIT', ( 'Reynold', 'Khezri' ), { ( 'Aridatha', 'Kapella' ), ( 'Jade', 'Serack' ) }, [ '+38 111 132 156', '+97 256 869 681' ], { 'anallise.dahl@gmail.com', 'carena.percy@mail.com' }, { '+68 766 251 995' : 'Rivard Company', '+46 998 761 570' : 'Hess Associates' }, '2015-08-15', { ( 'Odile', 'Dillard' ) : '2008-01-16', ( 'Janot', 'Culbertson' ) : '2004-10-03' }, { '2007-07-13', '2009-12-07' }, [ '2006-06-02', '2009-07-13', '2009-07-13' ], { '2001-02-03' : { ( 'Shirene', 'Wilks' ), ( 'Emily', 'Rohan' ) }, '2008-01-16' : { ( 'Herbert', 'Evers' ), ( 'Reyaud', 'Brower' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 4, 'ERBIOUICKWEL', ( 'Odile', 'Dillard' ), { ( 'Malgosia', 'Twitty' ), ( 'Catlee', 'Balderston' ) }, [ '+11 634 340 385', '+35 420 681 755' ], { 'bin.yount@mail.com', 'marquita.packager@yahoo.com' }, { '+98 588 296 525' : 'Brubaker Associates', '+59 441 563 740' : 'Scotti Group' }, '2001-02-03', { ( 'Malcolm', 'Beech' ) : '2004-10-03', ( 'Drusilla', 'Amu' ) : '2009-07-13' }, { '2011-04-24', '2015-08-15' }, [ '2009-12-07' ], { '2009-12-07' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2007-07-13' : { ( 'Aridatha', 'Kapella' ), ( 'Jade', 'Serack' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 5, 'OLMASRORAC', ( 'Delores', 'Kingzett' ), { ( 'Ted', 'Parkhill' ), ( 'Shailendra', 'Pruett' ) }, [ '+88 586 388 167', '+12 875 223 695' ], { 'severin.brissette@yahoo.com', 'petronia.demjen@live.com' }, { '+32 104 762 189' : 'Ip Company', '+40 392 938 335' : 'Kleppinger Studio' }, '2007-07-13', { ( 'Delores', 'Kingzett' ) : '2012-03-14', ( 'Giles', 'Cicci' ) : '2015-08-15' }, { '2011-04-24', '2009-12-07' }, [ '2011-04-24' ], { '2011-04-24' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-02-03' : { ( 'Ted', 'Parkhill' ), ( 'Shailendra', 'Pruett' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 6, 'IMBESALIP', ( 'Neda', 'Loa' ), { ( 'Caralie', 'Dyba' ), ( 'Stanley', 'Koman' ) }, [ '+69 743 188 702', '+67 211 660 758' ], { 'trees.chia@outlook.com', 'andrea.monaco@live.com' }, { '+70 807 883 594' : 'Bunner Fund', '+60 981 998 221' : 'Kinstley Foundation' }, '2006-06-02', { ( 'Drusilla', 'Amu' ) : '2008-01-16', ( 'Odile', 'Dillard' ) : '2015-08-15' }, { '2012-03-14', '2004-10-03' }, [ '2001-02-03', '2001-02-03' ], { '2008-01-16' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2009-07-13' : { ( 'Aridatha', 'Kapella' ), ( 'Jade', 'Serack' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 7, 'ANNILHARY', ( 'Janot', 'Culbertson' ), { ( 'Shirene', 'Wilks' ), ( 'Emily', 'Rohan' ) }, [ '+40 260 910 715', '+63 950 477 824' ], { 'natascha.guilbert@outlook.com', 'marga.oke@live.com' }, { '+86 395 907 487' : 'Baxter Media', '+81 287 654 583' : 'Rodely Factory' }, '2015-08-15', { ( 'Neda', 'Loa' ) : '2007-07-13', ( 'Delores', 'Kingzett' ) : '2012-03-14' }, { '2011-04-24', '2006-06-02' }, [ '2006-06-02', '2001-02-03' ], { '2006-06-02' : { ( 'Aridatha', 'Kapella' ), ( 'Jade', 'Serack' ) }, '2001-02-03' : { ( 'Malgosia', 'Twitty' ), ( 'Catlee', 'Balderston' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 8, 'BILLYBREC', ( 'Phedra', 'Kemp' ), { ( 'Kathy', 'Eby' ), ( 'Tadeusz', 'Bleuer' ) }, [ '+75 428 199 180', '+24 220 915 118' ], { 'dianna.kohl@live.com', 'sheba.macdonald@outlook.com' }, { '+41 434 305 112' : 'Talis Corporation', '+78 499 850 859' : 'Trottier Point' }, '2009-12-07', { ( 'Malcolm', 'Beech' ) : '2009-07-13', ( 'Reynold', 'Khezri' ) : '2001-02-03' }, { '2012-03-14', '2009-07-13' }, [ '2008-01-16', '2012-03-14' ], { '2009-07-13' : { ( 'Kathy', 'Eby' ), ( 'Tadeusz', 'Bleuer' ) }, '2001-02-03' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 9, 'RICHOTTELA', ( 'Geetha', 'Tornes' ), { ( 'Parviz', 'Markovic' ), ( 'Zygmunt', 'Costache' ) }, [ '+95 527 507 350', '+55 510 129 223' ], { 'erzsebet.leeson@yahoo.com', 'kalpit.tomar@hotmail.com' }, { '+65 318 985 502' : 'Curmon Association', '+58 792 136 368' : 'Eustace Direct' }, '2007-07-13', { ( 'Reynold', 'Khezri' ) : '2008-01-16', ( 'Giles', 'Cicci' ) : '2007-07-13' }, { '2011-04-24', '2009-12-07' }, [ '2009-12-07' ], { '2009-12-07' : { ( 'Kathy', 'Eby' ), ( 'Tadeusz', 'Bleuer' ) }, '2008-01-16' : { ( 'Herbert', 'Evers' ), ( 'Reyaud', 'Brower' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 10, 'AVIMCCRAYTU', ( 'Giles', 'Cicci' ), { ( 'Herbert', 'Evers' ), ( 'Reyaud', 'Brower' ) }, [ '+80 738 488 917', '+60 718 852 859' ], { 'cal.tilmon@outlook.com', 'meer.harper@hotmail.com' }, { '+36 218 257 273' : 'Maksuta Limited', '+28 754 651 250' : 'Trisko College' }, '2015-08-15', { ( 'Geetha', 'Tornes' ) : '2006-06-02', ( 'Delores', 'Kingzett' ) : '2009-12-07' }, { '2004-10-03', '2007-07-13' }, [ '2006-06-02', '2012-03-14', '2012-03-14' ], { '2012-03-14' : { ( 'Kathy', 'Eby' ), ( 'Tadeusz', 'Bleuer' ) }, '2004-10-03' : { ( 'Aridatha', 'Kapella' ), ( 'Jade', 'Serack' ) } } );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5, 'first', 1, ' This is the first text, with spaces ' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612, 'second', 2, 'This is the second text, with escaped characters ^~{}' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524, 'third', 3, 'This is the third text§with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -7654305769731274948, c0759f24-1649-8708-841e-7975566360ce, 'fourth', 4, 'This is the fourth text§also with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 6260413006131952913, c1f50982-a1b0-b2f7-0407-5206b32955df, 'Nolan', 850, 'If your physical unhappiness affects you come for happiness is changed for life sustaining power, refuse to send your sad thoughts behind the bloom and convinced of recognizing as such, both to me my mother who regarded with forever. Genuine mother to set by which persists in these joys. My cares then sees its varying force has once of itself, can have always on untruth and wonders for description and carrying with every respect. Nor even as having come at them desire for years in resuming and burden of regretting.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 3830510486736526184, f80aa305-25a4-4aaa-409e-8349514a6994, 'Aiken', 878, 'Successful effort in hand element coming day before, suppose that thinks matter and deliverance from them, vigor it pleases on self censure at eye as would censure for blood will clean itself. Its present as seen or undertaking or gluttony. Greece fell that courage either the temples of knowing of address carriage bearing on process, material body you allow yourself dislikes change of ignorance they press on process has been.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 2723588311390258792, e6f0ea79-1f91-1ca2-ad79-4bcca0229990, 'Persaud', 503, 'Faces which throws it did being its long training to perish, that a possibility or tyrannize over into tastes inclination if human mind. Also individual spirit knows how in possession coolness and more matured, presents are endured encumbrances starved wounded and happiness, proper care you are pained by human curiosity. Madame you pleasure comes from other mind having unknown to advancing years, these as wild bird''s home or sick on mind then sick. Bur no period too many do them by human ills in at last, diet will build itself by individuals who sends it even the iron in us. Not find as element every part decayed in amount of silent mind rejecting the building.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 8580685450360737020, edfbe405-99a0-469c-2688-e510dcf92fb4, 'Deboer', 109, 'Owing to fasten our lower tastes inclination tendencies now realize them, hospitality is full freedom you please in plainer english word or parent for loving. Repression is better nor even two limbs that now a forced and towns villages and indistinct. Just such completion of sending thought and indispensable phase of stagnant pools and despondent thought, its cessation from decay sluggishness of infancy to drink or he will suffer. Seek holiness in controlling our heads one afflicted it demands. Are full freedom of childhood or confused at once. Keep out in every order to convince a duplication in ignorance of ourselves this cause, their coffins shrouds and keener to absorb far as yourself. One expects to go beyond this is seen by another person may call evil.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 5148510230724836512, f652f47a-057a-518b-52d3-9b1e005a660a, 'Dubreck', 609, 'In imagination but such meetings must stand near relation. Children leave as having it an animal creation of indecision for old age, nature says rest to improve yourself are in cases when a signal or his wife, work it good or comfort and mortar are right direction proves that physical eye. Sooner ruins the meeting or felt for lungs to visit, old person off the dull ear or thirty forty years gone forever, changes are temporarily a total ignorance it all and ye cannot believe and forever. Spirit seen or prosaic age are thinking it so, how often in new accomplishments such casting off from it continually going to finer elements. Does the ugliness in very different mental relationship cannot withstand.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 7878028694449278012, d63adc12-9de7-1547-c9de-a36b6956e2db, 'Berger', 306, 'Well also is kept most like resting that pain and cheerful, death is his expressions as any ailing or lust or decay. Other the conviction that my son wishes to carry. Sooner these punishments are cheerful life who was an extent the loathed person''s similar law, grief or will deny the elixir of individuals who or result and ghastly. All evil in fineness of torture inflicted and relatively few hours, precepts need not thinking weakness or in himself an old out, seals are aided by us that man than its highest sense. Money may not infer it through cultivation of utter physical eye. Less spirit and so cultivate deliberate even in sewing that every part decayed.' );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( bbe03762-d6f3-11e1-e805-77e12b8221ca, 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( d50efda3-d3dd-f423-f95d-ae8114b2e686, -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 5e32e97e-905c-c580-8bff-6b4cbbba2654, -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( b5daf6ac-4785-026f-4c94-8b319b3f5ed0, -5359923222225123686, 0883a652-0e6e-b6c9-304d-cfb71034d053 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( f7389aca-c676-6e1f-bdca-ac13513181b1, 8580685450360737020, f80aa305-25a4-4aaa-409e-8349514a6994 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 8bc3d374-0e54-ca0f-f830-fcf1102c68bc, -5292141111288023615, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 46175663-3485-4a7f-c012-27b5a5a7b8f5, -5292141111288023615, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 6a3dcadd-2ee9-ac6e-0590-84a8f785f00f, -5292141111288023615, f652f47a-057a-518b-52d3-9b1e005a660a );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 30b31689-7105-8bfe-93da-9f862208220f, 7878028694449278012, e6f0ea79-1f91-1ca2-ad79-4bcca0229990 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 6875420e-d00d-cd34-f1f8-9e149851f539, 3344523601393165508, f80aa305-25a4-4aaa-409e-8349514a6994 );
