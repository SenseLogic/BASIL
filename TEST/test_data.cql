insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 02564100-1316-6164-7501-035549121170, true, 72, 62, 255, 57, 330, 728, 510, 312, 96.43, 28.84, 'Doramaly', '2009-12-01', '2014-11-21 04:36:12', 0x540281465621822318 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 76387248-9123-2401-7188-412542767574, true, 43, 20, 408, 899, 170, 302, 161, 436, 38.04, 21.6, 'Wilankinaly', '2013-11-14', '2007-05-12 22:01:05', 0x2512348314 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 73180969-3517-4168-9314-147944450283, true, 82, 78, 143, 139, 996, 315, 139, 165, 49.6, 97.13, 'Insalknep', '2006-08-12', '2004-11-28 15:49:27', 0x5916277563015553 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 04102009-6852-9916-6736-791355347554, false, 23, 65, 992, 816, 504, 386, 502, 37, 84.23, 49.48, 'Alfredina', '2005-10-17', '2014-09-13 17:10:21', 0x2611061039549264 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 56924407-9468-4516-7433-124665692422, false, 65, 56, 663, 972, 224, 323, 993, 12, 76.04, 28.11, 'Ochahlivit', '2012-04-18', '2011-06-02 12:56:35', 0x3683794630915155 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 93615537-3637-5951-7443-118984257437, false, 7, 71, 305, 880, 975, 591, 869, 698, 62.66, 42.21, 'Batachy', '2006-07-25', '2005-01-08 13:27:25', 0x8953517658175646 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 47204206-1153-2646-4659-438549455598, false, 76, 79, 567, 84, 484, 497, 623, 245, 37.48, 57.05, 'Ecchativicy', '2012-04-23', '2011-06-01 21:00:31', 0x769543721624831569 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 21185804-9968-9982-7355-568302959228, false, 100, 44, 441, 311, 507, 398, 760, 561, 57.43, 25.54, 'Anthonyterop', '2011-11-26', '2011-04-17 19:27:38', 0x951158415471083374 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 77645514-4603-2545-6369-377347729183, true, 83, 100, 153, 309, 481, 316, 901, 658, 61.05, 91.1, 'Einjurav', '2012-05-25', '2004-04-13 06:13:31', 0x5053230353173318 );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Date, DateTime, Blob ) values ( 83643207-0910-9076-1287-403838731208, false, 43, 46, 455, 710, 767, 840, 330, 790, 84.97, 65.88, 'Todollid', '2015-02-10', '2004-01-07 11:12:17', 0x36619205924790 );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 1, 'TAJIKISTAN', ( 'Allyson', 'Manica' ), { ( 'Norcal', 'Sargeson' ), ( 'Sisile', 'Jagodzinski' ) }, [ '+22 518 340 967', '+35 193 251 870' ], { 'libby.dana@yahoo.com', 'roxie.haluk@mail.com' }, { '+73 636 883 982' : 'Horning Club', '+67 673 477 540' : 'Sandell Trust' }, '2005-10-17', { ( 'Carm', 'Shafik' ) : '2011-11-26', ( 'Allyson', 'Manica' ) : '2015-02-10' }, { '2006-07-25', '2012-04-23' }, [ '2011-11-26' ], { '2012-05-25' : { ( 'Magnolia', 'Filippi' ), ( 'Rubi', 'Gillard' ) }, '2015-02-10' : { ( 'Norcal', 'Sargeson' ), ( 'Sisile', 'Jagodzinski' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 2, 'FRANCE', ( 'Abel', 'Brent' ), { ( 'Bonni', 'Norment' ), ( 'Pandora', 'Panosh' ) }, [ '+84 426 665 749', '+80 120 656 793' ], { 'hamid.sabat@gmail.com', 'gita.esser@mail.com' }, { '+27 673 118 443' : 'Fredenburgh Tech', '+32 844 584 984' : 'Heitmann Security' }, '2015-02-10', { ( 'Erv', 'Seetharaman' ) : '2006-08-12', ( 'Carm', 'Shafik' ) : '2006-08-12' }, { '2015-02-10', '2012-05-25' }, [ '2009-12-01', '2009-12-01', '2006-08-12' ], { '2012-04-23' : { ( 'Norcal', 'Sargeson' ), ( 'Sisile', 'Jagodzinski' ) }, '2012-05-25' : { ( 'Bonni', 'Norment' ), ( 'Pandora', 'Panosh' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 3, 'MADAGASCAR', ( 'Melisande', 'Auyeung' ), { ( 'Cecilla', 'Lemieux' ), ( 'Atta', 'Raker' ) }, [ '+49 171 653 720', '+60 306 424 461' ], { 'maren.phung@outlook.com', 'gavrielle.dubreck@hotmail.com' }, { '+49 836 616 929' : 'Midha Central', '+70 940 350 185' : 'Brousseau Group' }, '2006-08-12', { ( 'Allyson', 'Manica' ) : '2011-11-26', ( 'Abel', 'Brent' ) : '2015-02-10' }, { '2005-10-17', '2006-08-12' }, [ '2013-11-14', '2012-04-18' ], { '2012-04-18' : { ( 'Norcal', 'Sargeson' ), ( 'Sisile', 'Jagodzinski' ) }, '2005-10-17' : { ( 'Evey', 'Lapierre' ), ( 'Nic', 'Blenk' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 4, 'AZERBAIJAN', ( 'Carm', 'Shafik' ), { ( 'Bhupendra', 'Peavoy' ), ( 'Elwyn', 'Heikkila' ) }, [ '+61 310 332 580', '+68 858 875 904' ], { 'bird.raker@live.com', 'gui.fletcher@gmail.com' }, { '+10 861 726 701' : 'Scanlon Union', '+50 805 377 987' : 'Duensing Center' }, '2015-02-10', { ( 'Melisande', 'Auyeung' ) : '2013-11-14', ( 'Erv', 'Seetharaman' ) : '2009-12-01' }, { '2015-02-10', '2006-08-12' }, [ '2006-08-12' ], { '2015-02-10' : { ( 'Bhupendra', 'Peavoy' ), ( 'Elwyn', 'Heikkila' ) }, '2005-10-17' : { ( 'Norcal', 'Sargeson' ), ( 'Sisile', 'Jagodzinski' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 5, 'LAOS', ( 'Erv', 'Seetharaman' ), { ( 'Anet', 'Gowda' ), ( 'Elliott', 'Beckman' ) }, [ '+38 677 767 853', '+19 310 687 923' ], { 'gerta.isaac@hotmail.com', 'ghassem.lodeserto@yahoo.com' }, { '+35 601 358 451' : 'Barel Design', '+17 436 751 293' : 'Spurlock News' }, '2009-12-01', { ( 'Lazlo', 'Krisa' ) : '2012-05-25', ( 'Ivett', 'Tieu' ) : '2013-11-14' }, { '2015-02-10', '2013-11-14' }, [ '2006-07-25', '2012-04-18' ], { '2009-12-01' : { ( 'Norcal', 'Sargeson' ), ( 'Sisile', 'Jagodzinski' ) }, '2012-05-25' : { ( 'Anet', 'Gowda' ), ( 'Elliott', 'Beckman' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 6, 'IRAQ', ( 'Lowry', 'Manitius' ), { ( 'Evey', 'Lapierre' ), ( 'Nic', 'Blenk' ) }, [ '+13 650 433 568', '+53 818 518 381' ], { 'akshay.hunsucker@yahoo.com', 'onida.mohammad@live.com' }, { '+89 378 964 574' : 'Stennett Limited', '+30 909 195 440' : 'Ardizone Design' }, '2006-08-12', { ( 'Fleurette', 'Hollister' ) : '2015-02-10', ( 'Lowry', 'Manitius' ) : '2013-11-14' }, { '2012-04-23', '2013-11-14' }, [ '2006-07-25' ], { '2011-11-26' : { ( 'Bhupendra', 'Peavoy' ), ( 'Elwyn', 'Heikkila' ) }, '2006-08-12' : { ( 'Bonni', 'Norment' ), ( 'Pandora', 'Panosh' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 7, 'BURKINA FASO', ( 'Fleurette', 'Hollister' ), { ( 'Magnolia', 'Filippi' ), ( 'Rubi', 'Gillard' ) }, [ '+53 609 585 231', '+20 358 562 159' ], { 'buda.cheba@live.com', 'seven.mccarroll@outlook.com' }, { '+17 546 729 209' : 'Breault Solutions', '+77 438 145 888' : 'Whitsell Foundation' }, '2009-12-01', { ( 'Ivett', 'Tieu' ) : '2012-04-23', ( 'Erv', 'Seetharaman' ) : '2011-11-26' }, { '2012-04-18', '2005-10-17' }, [ '2015-02-10' ], { '2011-11-26' : { ( 'Claudia', 'Waigh' ), ( 'Hynda', 'Duensing' ) }, '2015-02-10' : { ( 'Bhupendra', 'Peavoy' ), ( 'Elwyn', 'Heikkila' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 8, 'MALTA', ( 'Lazlo', 'Krisa' ), { ( 'Claudia', 'Waigh' ), ( 'Hynda', 'Duensing' ) }, [ '+24 268 165 628', '+21 606 608 709' ], { 'koral.cheshire@gmail.com', 'willie.benwell@hotmail.com' }, { '+57 283 571 869' : 'Newby Channel', '+47 577 260 901' : 'Mowbray Security' }, '2012-05-25', { ( 'Lazlo', 'Krisa' ) : '2011-11-26', ( 'Melisande', 'Auyeung' ) : '2011-11-26' }, { '2009-12-01', '2012-04-23' }, [ '2012-04-18', '2012-04-23', '2005-10-17' ], { '2012-04-23' : { ( 'Karalee', 'Strauch' ), ( 'Darice', 'Sich' ) }, '2015-02-10' : { ( 'Claudia', 'Waigh' ), ( 'Hynda', 'Duensing' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 9, 'BOTSWANA', ( 'Alexa', 'Pascale' ), { ( 'Marcandre', 'Visentin' ), ( 'Terrijo', 'Desilets' ) }, [ '+84 663 319 763', '+52 468 630 910' ], { 'andree.casperson@mail.com', 'jeanne.townson@outlook.com' }, { '+70 701 439 119' : 'Elkins Fx', '+73 530 363 250' : 'Odea Store' }, '2006-07-25', { ( 'Carm', 'Shafik' ) : '2006-08-12', ( 'Abel', 'Brent' ) : '2012-04-23' }, { '2011-11-26', '2012-04-23' }, [ '2005-10-17', '2011-11-26', '2012-05-25' ], { '2011-11-26' : { ( 'Bhupendra', 'Peavoy' ), ( 'Elwyn', 'Heikkila' ) }, '2012-05-25' : { ( 'Karalee', 'Strauch' ), ( 'Darice', 'Sich' ) } } );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap ) values ( 10, 'ALGERIA', ( 'Ivett', 'Tieu' ), { ( 'Karalee', 'Strauch' ), ( 'Darice', 'Sich' ) }, [ '+95 284 292 768', '+29 708 233 934' ], { 'xiaofeng.provencher@mail.com', 'liuka.boray@mail.com' }, { '+16 423 821 388' : 'Casnji Vision', '+95 860 276 957' : 'Pharr Security' }, '2012-05-25', { ( 'Abel', 'Brent' ) : '2012-04-23', ( 'Lowry', 'Manitius' ) : '2015-02-10' }, { '2012-04-18', '2009-12-01' }, [ '2006-08-12', '2005-10-17', '2012-05-25' ], { '2006-08-12' : { ( 'Bonni', 'Norment' ), ( 'Pandora', 'Panosh' ) }, '2012-05-25' : { ( 'Norcal', 'Sargeson' ), ( 'Sisile', 'Jagodzinski' ) } } );
