insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 8dbdda48-fb87-48d6-746f-1965824e966a, false, 1, 2, 3, 4, 5, 6, 7, 8, 1.1, 2.2, 'Hello world!', 'Buchanan', '2001-02-03', '2001-02-03 04:05:06.789', 0x123456781234567891234567812345678, 'first_Hello world!' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 00181d10-25eb-466b-1912-5df73a801d8f, false, 30, 99, 298, 754, 357, 878, 689, 952, 84.07, 26.49, 'Nicisca', 'Banks', '2000-01-23', '2013-03-14 11:25:49', 0x619804689a5cb76ed4d1, 'third_2000-01-23' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 5a8bbb71-3718-4267-f4df-87701c0ed343, false, 47, 67, 597, 168, 496, 74, 735, 844, 16.36, 62.39, 'Ersikostarla', 'Macconaill', '2001-01-10', '2011-12-02 04:12:32', 0x53937c57af744ab27a07, 'third_2001-01-10' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( d767c6e4-4454-4f4e-3e55-3dc88659996c, false, 39, 61, 551, 965, 704, 1, 321, 885, 51.78, 56.71, 'Hameorghe', 'Mctiernan', '2014-07-25', '2007-03-24 17:52:26', 0xfd7509f968538c8a378c, 'second_Mctiernan' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 118be689-5b86-41b9-1de4-bf972037074c, true, 9, 49, 705, 155, 671, 308, 215, 551, 94.45, 68.92, 'Irtarihowu', 'Waghorne', '2005-05-12', '2000-03-05 14:19:05', 0xdcc2f69153f122279663, 'second_Waghorne' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( f31f0a1b-44da-47b9-60b8-a04b2b5fef46, false, 43, 37, 14, 402, 337, 846, 377, 891, 53.85, 61.22, 'Tanockuq', 'Skeuse', '2012-05-28', '2005-06-13 23:35:16', 0xabe3918efcc4292f7559, 'first_Tanockuq' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 913c5e95-e97f-4648-eb37-d3f3413fa966, true, 2, 9, 12, 960, 536, 900, 511, 534, 58.12, 18.12, 'Ackestolu', 'Heurich', '2010-04-05', '2013-08-19 18:38:54', 0x54445a94f579aca8f1cf, 'second_Heurich' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( 2265de10-3c6f-4fef-2d3b-d3ef73c5ea5f, true, 35, 29, 737, 749, 511, 564, 953, 960, 88.53, 80.14, 'Utixtona', 'Pelton', '2004-12-03', '2014-02-23 15:41:32', 0x3087859d423e801c50ac, 'second_Pelton' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( d2096ae1-d385-4d0c-f558-cd8ef0c78751, true, 38, 21, 717, 694, 27, 494, 459, 707, 50.53, 39.95, 'Risenebhaso', 'Frie', '2005-11-11', '2010-09-17 16:01:38', 0xbfd530f64a51658f64a0, 'first_Risenebhaso' );
insert into TEST.SIMPLE ( Uuid, Bool, Int8, Uint8, Int16, Uint16, Int32, Uint32, Int64, Uint64, Float32, Float64, String, Name, Date, DateTime, Blob, Option ) values ( f6c1c7a1-ba44-4aa2-f976-acb4dee11a18, true, 70, 12, 375, 291, 941, 106, 908, 228, 27.56, 61.92, 'Ignuettoma', 'Stellitano', '2006-01-06', '2001-12-11 13:29:19', 0x202371f03e6d94cb1a6b, 'third_2006-01-06' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 1, 'Belgium', ( 'Malcolm', 'Beech' ), { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, [ '12345678', '23456789' ], { 'jack.harper@gmail.com', 'victoria.olsen@outlook.com' }, { '12345678' : 'Warner Bros', '23456789' : 'Universal Pictures' }, '2001-02-03', { ( 'Dineke', 'Larwill' ) : '2014-07-25', ( 'Glass', 'Checinski' ) : '2012-05-28', ( 'Basheer', 'Haluk' ) : '2004-12-03', ( 'Ardys', 'Randall' ) : '2005-05-12', ( 'Stacia', 'Shukor' ) : '2014-07-25', ( 'Gavin', 'Dovel' ) : '2010-04-05', ( 'Vito', 'Gooley' ) : '2005-05-12', ( 'Malcolm', 'Beech' ) : '2001-01-10', ( 'Warwick', 'Biel' ) : '2000-01-23', ( '', '' ) : '2012-05-28' }, { '2000-01-23', '2010-04-05', '2014-07-25', '2001-02-03', '2006-01-06', '2012-05-28', '2005-11-11', '2004-12-03', '2005-05-12', '2001-01-10', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2006-01-06', '2000-01-23' ], { '2000-01-23' : { ( 'Mureil', 'Postavsky' ), ( 'Hulst', 'Hoque' ), ( 'Liam', 'Lett' ), ( 'Tanhya', 'Schallenberg' ), ( 'Tori', 'Epperson' ), ( 'Tuhina', 'Bussewitz' ), ( 'Lurette', 'Hosneld' ), ( 'Igor', 'Ehningercuervo' ), ( 'Leola', 'Borel' ), ( 'Teetwo', 'Allaway' ) }, '2004-12-03' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2014-07-25' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2010-04-05' : { ( 'Mureil', 'Postavsky' ), ( 'Hulst', 'Hoque' ), ( 'Liam', 'Lett' ), ( 'Tanhya', 'Schallenberg' ), ( 'Tori', 'Epperson' ), ( 'Tuhina', 'Bussewitz' ), ( 'Lurette', 'Hosneld' ), ( 'Igor', 'Ehningercuervo' ), ( 'Leola', 'Borel' ), ( 'Teetwo', 'Allaway' ) }, '2005-05-12' : { ( 'Mirilla', 'Canuel' ), ( 'Ailsun', 'Sawchuk' ), ( 'Darcy', 'Rutyna' ), ( 'Esmeralda', 'Manager' ), ( 'Four', 'Chavis' ), ( 'Sophie', 'Rezzik' ), ( 'Janice', 'Mcleod' ), ( 'Danne', 'Aggarwal' ), ( 'Kannan', 'Molochko' ), ( 'Maier', 'Pistilli' ) }, '2001-01-10' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2006-01-06' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2001-02-03' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2005-11-11' : { ( 'Rolande', 'Darou' ), ( 'Abagail', 'Nock' ), ( 'Thia', 'Mayrstein' ), ( 'Data', 'Baines' ), ( 'Marjet', 'Hashimoto' ), ( 'Ge', 'Josiah' ), ( 'Lucy', 'Mcquaid' ), ( 'Ursula', 'Schmadtke' ), ( 'Alica', 'Bookings' ), ( 'Antonietta', 'Cheba' ) }, '2012-05-28' : { ( '', '' ), ( '', '' ) } }, '{}' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 2, '', ( '', '' ), { ( '', '' ), ( '', '' ) }, [ '', '' ], { 'rick.deckard@gmail.com', 'dave.holden@outlook.com' }, { '12345678' : '', '23456789' : '' }, '2001-02-03', { ( 'Warwick', 'Biel' ) : '2010-04-05', ( 'Dineke', 'Larwill' ) : '2006-01-06', ( 'Gavin', 'Dovel' ) : '2014-07-25', ( 'Ardys', 'Randall' ) : '2000-01-23', ( 'Vito', 'Gooley' ) : '2001-02-03', ( 'Glass', 'Checinski' ) : '2005-05-12', ( 'Malcolm', 'Beech' ) : '2005-05-12', ( '', '' ) : '2004-12-03', ( 'Basheer', 'Haluk' ) : '2001-02-03', ( 'Stacia', 'Shukor' ) : '2005-05-12' }, { '2006-01-06', '2000-01-23', '2005-11-11', '2001-02-03', '2001-01-10', '2014-07-25', '2012-05-28', '2005-05-12', '2010-04-05', '2004-12-03', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2014-07-25', '2004-12-03' ], { '2010-04-05' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2005-05-12' : { ( '', '' ), ( '', '' ) }, '2005-11-11' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2004-12-03' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, '2000-01-23' : { ( '', '' ), ( '', '' ) }, '2001-01-10' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2006-01-06' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2014-07-25' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2012-05-28' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2001-02-03' : { ( '', '' ), ( '', '' ) } }, '' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 3, 'Eunice', ( 'Gavin', 'Dovel' ), { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, [ '+45 888 505 686', '+83 471 102 553', '+68 369 522 606', '+91 717 325 180', '+74 696 211 642', '+37 893 508 604', '+82 114 613 721', '+33 468 973 874', '+52 995 926 102', '+22 380 782 906' ], { 'ernaline.levere@hotmail.com', 'imtaz.waller@live.com', 'audi.forno@yahoo.com', 'riannon.laframboise@hotmail.com', 'chai.loyola@live.com', 'gurjit.tzuang@gmail.com', 'lacie.crippen@outlook.com', 'gisele.sallee@gmail.com', 'hui.franks@hotmail.com', 'moria.schumann@live.com' }, { '+15 136 291 882' : 'Popela Center', '+11 578 593 231' : 'Bradshaw Society', '+81 558 965 400' : 'Muus Fx', '+28 416 531 126' : 'Wacheski Fx', '+14 980 384 567' : 'Destefani Software', '+42 674 201 452' : 'Bolio College', '+81 880 770 363' : 'Arko Trust', '+66 400 777 587' : 'Ficici Vision', '+68 495 574 425' : 'Francois Institute', '+62 927 408 259' : 'Brox Club' }, '2012-05-28', { ( '', '' ) : '2005-05-12', ( 'Ardys', 'Randall' ) : '2004-12-03', ( 'Stacia', 'Shukor' ) : '2006-01-06', ( 'Dineke', 'Larwill' ) : '2014-07-25', ( 'Glass', 'Checinski' ) : '2001-02-03', ( 'Gavin', 'Dovel' ) : '2012-05-28', ( 'Malcolm', 'Beech' ) : '2001-02-03', ( 'Basheer', 'Haluk' ) : '2012-05-28', ( 'Vito', 'Gooley' ) : '2005-05-12', ( 'Warwick', 'Biel' ) : '2000-01-23' }, { '2012-05-28', '2004-12-03', '2005-05-12', '2001-02-03', '2000-01-23', '2014-07-25', '2001-01-10', '2005-11-11', '2006-01-06', '2010-04-05', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2006-01-06' ], { '2014-07-25' : { ( '', '' ), ( '', '' ) }, '2006-01-06' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, '2005-05-12' : { ( 'Serena', 'Logue' ), ( 'Dino', 'Rabadi' ), ( 'Farzin', 'Fournier' ), ( 'Adara', 'Bello' ), ( 'Nelleke', 'Sabourin' ), ( 'Tommie', 'Gadher' ), ( 'Kaila', 'Xayaraj' ), ( 'Fifine', 'Broome' ), ( 'Arlyne', 'Tapner' ), ( 'Marjie', 'Ayaz' ) }, '2012-05-28' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2000-01-23' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, '2001-02-03' : { ( 'Mureil', 'Postavsky' ), ( 'Hulst', 'Hoque' ), ( 'Liam', 'Lett' ), ( 'Tanhya', 'Schallenberg' ), ( 'Tori', 'Epperson' ), ( 'Tuhina', 'Bussewitz' ), ( 'Lurette', 'Hosneld' ), ( 'Igor', 'Ehningercuervo' ), ( 'Leola', 'Borel' ), ( 'Teetwo', 'Allaway' ) }, '2004-12-03' : { ( 'Rolande', 'Darou' ), ( 'Abagail', 'Nock' ), ( 'Thia', 'Mayrstein' ), ( 'Data', 'Baines' ), ( 'Marjet', 'Hashimoto' ), ( 'Ge', 'Josiah' ), ( 'Lucy', 'Mcquaid' ), ( 'Ursula', 'Schmadtke' ), ( 'Alica', 'Bookings' ), ( 'Antonietta', 'Cheba' ) }, '2005-11-11' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, '2001-01-10' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2010-04-05' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) } }, 'Of spices of wishing empty like my cousin in. Another hour he lets himself listened in return, taught me we monks used the darkness.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 4, 'Ticadetu', ( 'Ardys', 'Randall' ), { ( 'Serena', 'Logue' ), ( 'Dino', 'Rabadi' ), ( 'Farzin', 'Fournier' ), ( 'Adara', 'Bello' ), ( 'Nelleke', 'Sabourin' ), ( 'Tommie', 'Gadher' ), ( 'Kaila', 'Xayaraj' ), ( 'Fifine', 'Broome' ), ( 'Arlyne', 'Tapner' ), ( 'Marjie', 'Ayaz' ) }, [ '+63 595 363 558', '+15 128 452 947', '+10 778 518 861', '+33 324 756 646', '+35 938 944 287', '+22 161 680 274', '+93 703 958 414', '+78 156 417 362', '+36 381 204 595', '+39 591 204 562' ], { 'joleen.loader@gmail.com', 'coursdev.montelli@hotmail.com', 'christel.bouick@hotmail.com', 'chelsea.woolery@hotmail.com', 'daphine.zargham@outlook.com', 'lavonda.maheu@mail.com', 'cam.hillring@outlook.com', 'biddy.vetrie@outlook.com', 'joyous.rajczi@outlook.com', 'gray.carter@yahoo.com' }, { '+44 856 852 349' : 'Ishee Dynamics', '+83 521 633 334' : 'Fiorile Network', '+14 585 173 623' : 'Rahal Foundation', '+60 198 412 975' : 'Mawani Bank', '+31 155 645 272' : 'Levesque Team', '+88 769 418 252' : 'Colagrosso Limited', '+64 805 239 719' : 'Willard Club', '+88 585 292 261' : 'Armolavicius Incorporated', '+59 236 128 743' : 'Kibler Express', '+82 946 146 418' : 'Astor Depot' }, '2012-05-28', { ( '', '' ) : '2014-07-25', ( 'Ardys', 'Randall' ) : '2000-01-23', ( 'Warwick', 'Biel' ) : '2004-12-03', ( 'Basheer', 'Haluk' ) : '2000-01-23', ( 'Dineke', 'Larwill' ) : '2010-04-05', ( 'Gavin', 'Dovel' ) : '2012-05-28', ( 'Glass', 'Checinski' ) : '2004-12-03', ( 'Stacia', 'Shukor' ) : '2005-11-11', ( 'Vito', 'Gooley' ) : '2001-01-10', ( 'Malcolm', 'Beech' ) : '2006-01-06' }, { '2005-05-12', '2006-01-06', '2000-01-23', '2010-04-05', '2014-07-25', '2001-02-03', '2001-01-10', '2004-12-03', '2005-11-11', '2012-05-28', '', '', '', '' }, [ '2010-04-05', '2012-05-28' ], { '2010-04-05' : { ( 'Mirilla', 'Canuel' ), ( 'Ailsun', 'Sawchuk' ), ( 'Darcy', 'Rutyna' ), ( 'Esmeralda', 'Manager' ), ( 'Four', 'Chavis' ), ( 'Sophie', 'Rezzik' ), ( 'Janice', 'Mcleod' ), ( 'Danne', 'Aggarwal' ), ( 'Kannan', 'Molochko' ), ( 'Maier', 'Pistilli' ) }, '2000-01-23' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2012-05-28' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, '2005-11-11' : { ( 'Serena', 'Logue' ), ( 'Dino', 'Rabadi' ), ( 'Farzin', 'Fournier' ), ( 'Adara', 'Bello' ), ( 'Nelleke', 'Sabourin' ), ( 'Tommie', 'Gadher' ), ( 'Kaila', 'Xayaraj' ), ( 'Fifine', 'Broome' ), ( 'Arlyne', 'Tapner' ), ( 'Marjie', 'Ayaz' ) }, '2001-02-03' : { ( '', '' ), ( '', '' ) }, '2004-12-03' : { ( 'Rolande', 'Darou' ), ( 'Abagail', 'Nock' ), ( 'Thia', 'Mayrstein' ), ( 'Data', 'Baines' ), ( 'Marjet', 'Hashimoto' ), ( 'Ge', 'Josiah' ), ( 'Lucy', 'Mcquaid' ), ( 'Ursula', 'Schmadtke' ), ( 'Alica', 'Bookings' ), ( 'Antonietta', 'Cheba' ) }, '2005-05-12' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2006-01-06' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-01-10' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2014-07-25' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) } }, 'Softly and wisdom like humidity entering this these words, old men no nobleman who at about her will. Myth of more deeply shocked and curious, hut with thirst felt at in him. Put him said thoughtful words to depart from me.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 5, 'Ouelle', ( 'Dineke', 'Larwill' ), { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, [ '+50 846 634 885', '+36 742 256 190', '+39 828 140 560', '+24 279 221 804', '+57 901 779 626', '+35 381 517 628', '+20 251 657 278', '+65 560 877 529', '+71 717 100 139', '+63 524 744 660' ], { 'ag.storrie@yahoo.com', 'manfai.hively@gmail.com', 'janson.braddock@hotmail.com', 'josselyn.howepatterson@outlook.com', 'juliet.moening@live.com', 'carrissa.schute@outlook.com', 'lissa.paulett@yahoo.com', 'sharyn.wadden@hotmail.com', 'jung.brovont@gmail.com', 'melisandra.sheridan@yahoo.com' }, { '+21 188 943 359' : 'Newham Agency', '+62 908 873 651' : 'Vandenheuvel Limited', '+68 345 484 610' : 'Prashad Point', '+50 597 366 996' : 'Greger Fund', '+14 618 632 652' : 'Schenck Fashion', '+61 852 434 295' : 'Mattiussi Center', '+93 370 288 952' : 'Rayner Solutions', '+46 396 770 620' : 'Josiah Company', '+41 538 799 522' : 'Darroch Software', '+73 208 519 507' : 'Bowden Vision' }, '2014-07-25', { ( '', '' ) : '2000-01-23', ( 'Dineke', 'Larwill' ) : '2010-04-05', ( 'Malcolm', 'Beech' ) : '2001-01-10', ( 'Stacia', 'Shukor' ) : '2006-01-06', ( 'Vito', 'Gooley' ) : '2012-05-28', ( 'Ardys', 'Randall' ) : '2001-02-03', ( 'Glass', 'Checinski' ) : '2000-01-23', ( 'Gavin', 'Dovel' ) : '2001-02-03', ( 'Basheer', 'Haluk' ) : '2005-11-11', ( 'Warwick', 'Biel' ) : '2014-07-25' }, { '2010-04-05', '2005-05-12', '2005-11-11', '2012-05-28', '2001-01-10', '2000-01-23', '2001-02-03', '2014-07-25', '2004-12-03', '2006-01-06', '', '', '', '', '', '', '', '', '' }, [ '2006-01-06', '2001-01-10', '2001-01-10' ], { '2014-07-25' : { ( 'Serena', 'Logue' ), ( 'Dino', 'Rabadi' ), ( 'Farzin', 'Fournier' ), ( 'Adara', 'Bello' ), ( 'Nelleke', 'Sabourin' ), ( 'Tommie', 'Gadher' ), ( 'Kaila', 'Xayaraj' ), ( 'Fifine', 'Broome' ), ( 'Arlyne', 'Tapner' ), ( 'Marjie', 'Ayaz' ) }, '2001-02-03' : { ( 'Mirilla', 'Canuel' ), ( 'Ailsun', 'Sawchuk' ), ( 'Darcy', 'Rutyna' ), ( 'Esmeralda', 'Manager' ), ( 'Four', 'Chavis' ), ( 'Sophie', 'Rezzik' ), ( 'Janice', 'Mcleod' ), ( 'Danne', 'Aggarwal' ), ( 'Kannan', 'Molochko' ), ( 'Maier', 'Pistilli' ) }, '2004-12-03' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2006-01-06' : { ( 'Mirilla', 'Canuel' ), ( 'Ailsun', 'Sawchuk' ), ( 'Darcy', 'Rutyna' ), ( 'Esmeralda', 'Manager' ), ( 'Four', 'Chavis' ), ( 'Sophie', 'Rezzik' ), ( 'Janice', 'Mcleod' ), ( 'Danne', 'Aggarwal' ), ( 'Kannan', 'Molochko' ), ( 'Maier', 'Pistilli' ) }, '2001-01-10' : { ( 'Rolande', 'Darou' ), ( 'Abagail', 'Nock' ), ( 'Thia', 'Mayrstein' ), ( 'Data', 'Baines' ), ( 'Marjet', 'Hashimoto' ), ( 'Ge', 'Josiah' ), ( 'Lucy', 'Mcquaid' ), ( 'Ursula', 'Schmadtke' ), ( 'Alica', 'Bookings' ), ( 'Antonietta', 'Cheba' ) }, '2012-05-28' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2000-01-23' : { ( 'Mureil', 'Postavsky' ), ( 'Hulst', 'Hoque' ), ( 'Liam', 'Lett' ), ( 'Tanhya', 'Schallenberg' ), ( 'Tori', 'Epperson' ), ( 'Tuhina', 'Bussewitz' ), ( 'Lurette', 'Hosneld' ), ( 'Igor', 'Ehningercuervo' ), ( 'Leola', 'Borel' ), ( 'Teetwo', 'Allaway' ) }, '2005-05-12' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2005-11-11' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2010-04-05' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) } }, 'Kindly he sat firmly concentrated soul slowly walking silently, knew to as white in contemplation spoke politely. Arriving at bottom of knowledge his enlightenment has taken, down felt insulted when you beautiful pleasure-garden.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 6, 'Talookesuhas', ( 'Stacia', 'Shukor' ), { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, [ '+31 351 766 145', '+64 848 842 561', '+32 902 404 580', '+95 682 597 150', '+78 851 742 873', '+35 910 599 213', '+86 999 122 785', '+68 246 251 544', '+34 713 414 245', '+33 423 797 703' ], { 'nevil.schemena@hotmail.com', 'magdaia.macgregor@hotmail.com', 'cordula.mcdowall@mail.com', 'marriet.tsitsonsis@gmail.com', 'srinivas.eberlin@yahoo.com', 'junia.yenor@yahoo.com', 'erkan.zlatin@yahoo.com', 'kirtikumar.foss@yahoo.com', 'hali.guisler@gmail.com', 'phillida.praysner@mail.com' }, { '+18 304 825 169' : 'Su Services', '+19 369 843 264' : 'Mccracken Shop', '+40 100 905 509' : 'Lindberg Fashion', '+77 935 712 101' : 'Swaine Media', '+83 631 945 182' : 'Brox Insurance', '+42 403 384 496' : 'Pennell Magazine', '+53 728 610 274' : 'Churas Center', '+10 377 280 713' : 'Rafek Channel', '+66 453 623 148' : 'Massonneau Bank', '+43 907 306 238' : 'Kopfman Design' }, '2005-05-12', { ( 'Warwick', 'Biel' ) : '2005-11-11', ( '', '' ) : '2014-07-25', ( 'Glass', 'Checinski' ) : '2012-05-28', ( 'Stacia', 'Shukor' ) : '2001-02-03', ( 'Malcolm', 'Beech' ) : '2010-04-05', ( 'Ardys', 'Randall' ) : '2005-11-11', ( 'Gavin', 'Dovel' ) : '2005-11-11', ( 'Vito', 'Gooley' ) : '2005-11-11', ( 'Dineke', 'Larwill' ) : '2001-02-03', ( 'Basheer', 'Haluk' ) : '2001-01-10' }, { '2004-12-03', '2000-01-23', '2001-02-03', '2005-11-11', '2012-05-28', '2001-01-10', '2006-01-06', '2014-07-25', '2010-04-05', '2005-05-12', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2004-12-03', '2004-12-03' ], { '2004-12-03' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2006-01-06' : { ( 'Mureil', 'Postavsky' ), ( 'Hulst', 'Hoque' ), ( 'Liam', 'Lett' ), ( 'Tanhya', 'Schallenberg' ), ( 'Tori', 'Epperson' ), ( 'Tuhina', 'Bussewitz' ), ( 'Lurette', 'Hosneld' ), ( 'Igor', 'Ehningercuervo' ), ( 'Leola', 'Borel' ), ( 'Teetwo', 'Allaway' ) }, '2005-11-11' : { ( 'Serena', 'Logue' ), ( 'Dino', 'Rabadi' ), ( 'Farzin', 'Fournier' ), ( 'Adara', 'Bello' ), ( 'Nelleke', 'Sabourin' ), ( 'Tommie', 'Gadher' ), ( 'Kaila', 'Xayaraj' ), ( 'Fifine', 'Broome' ), ( 'Arlyne', 'Tapner' ), ( 'Marjie', 'Ayaz' ) }, '2001-02-03' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2001-01-10' : { ( '', '' ), ( '', '' ) }, '2005-05-12' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2014-07-25' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2012-05-28' : { ( 'Mirilla', 'Canuel' ), ( 'Ailsun', 'Sawchuk' ), ( 'Darcy', 'Rutyna' ), ( 'Esmeralda', 'Manager' ), ( 'Four', 'Chavis' ), ( 'Sophie', 'Rezzik' ), ( 'Janice', 'Mcleod' ), ( 'Danne', 'Aggarwal' ), ( 'Kannan', 'Molochko' ), ( 'Maier', 'Pistilli' ) }, '2000-01-23' : { ( 'Serena', 'Logue' ), ( 'Dino', 'Rabadi' ), ( 'Farzin', 'Fournier' ), ( 'Adara', 'Bello' ), ( 'Nelleke', 'Sabourin' ), ( 'Tommie', 'Gadher' ), ( 'Kaila', 'Xayaraj' ), ( 'Fifine', 'Broome' ), ( 'Arlyne', 'Tapner' ), ( 'Marjie', 'Ayaz' ) }, '2010-04-05' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) } }, 'Made him just his confession into her as well, I reach the joyful love to kiss. Will be an eternal life with desire.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 7, 'Acenlaysone', ( 'Warwick', 'Biel' ), { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, [ '+82 170 915 567', '+13 385 226 717', '+40 358 274 962', '+73 477 865 761', '+49 638 715 288', '+76 865 104 277', '+81 104 439 328', '+91 452 369 659', '+19 236 205 123', '+80 660 858 125' ], { 'victoria.welch@outlook.com', 'elsi.bunce@hotmail.com', 'thuthuy.hatzenbichler@mail.com', 'evvie.humenuk@mail.com', 'elias.mccracken@hotmail.com', 'anissa.linkletter@hotmail.com', 'audivox.durie@hotmail.com', 'gusty.treen@gmail.com', 'maged.lavergne@gmail.com', 'canute.ohandley@yahoo.com' }, { '+95 136 139 809' : 'Wealch Services', '+79 663 205 844' : 'Newby Network', '+39 562 374 760' : 'Mauck University', '+62 112 782 829' : 'Wyman Software', '+47 116 908 765' : 'Torrealba Direct', '+35 341 381 622' : 'Godcharles College', '+81 563 840 388' : 'Vanbenthem Factory', '+30 832 166 989' : 'Hippert Insurance', '+50 306 687 848' : 'Sylvestre Software', '+39 126 230 269' : 'Brouwer Shop' }, '2012-05-28', { ( 'Glass', 'Checinski' ) : '2014-07-25', ( 'Ardys', 'Randall' ) : '2006-01-06', ( 'Dineke', 'Larwill' ) : '2012-05-28', ( 'Stacia', 'Shukor' ) : '2000-01-23', ( 'Warwick', 'Biel' ) : '2004-12-03', ( 'Vito', 'Gooley' ) : '2005-05-12', ( 'Basheer', 'Haluk' ) : '2005-05-12', ( 'Malcolm', 'Beech' ) : '2010-04-05', ( '', '' ) : '2004-12-03', ( 'Gavin', 'Dovel' ) : '2005-05-12' }, { '2014-07-25', '2005-05-12', '2010-04-05', '2001-02-03', '2000-01-23', '2006-01-06', '2004-12-03', '2001-01-10', '2005-11-11', '2012-05-28', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2006-01-06', '2004-12-03', '2001-02-03' ], { '2005-11-11' : { ( '', '' ), ( '', '' ) }, '2001-01-10' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2001-02-03' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2014-07-25' : { ( 'Rolande', 'Darou' ), ( 'Abagail', 'Nock' ), ( 'Thia', 'Mayrstein' ), ( 'Data', 'Baines' ), ( 'Marjet', 'Hashimoto' ), ( 'Ge', 'Josiah' ), ( 'Lucy', 'Mcquaid' ), ( 'Ursula', 'Schmadtke' ), ( 'Alica', 'Bookings' ), ( 'Antonietta', 'Cheba' ) }, '2010-04-05' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, '2004-12-03' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2005-05-12' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, '2006-01-06' : { ( '', '' ), ( '', '' ) }, '2000-01-23' : { ( 'Mirilla', 'Canuel' ), ( 'Ailsun', 'Sawchuk' ), ( 'Darcy', 'Rutyna' ), ( 'Esmeralda', 'Manager' ), ( 'Four', 'Chavis' ), ( 'Sophie', 'Rezzik' ), ( 'Janice', 'Mcleod' ), ( 'Danne', 'Aggarwal' ), ( 'Kannan', 'Molochko' ), ( 'Maier', 'Pistilli' ) }, '2012-05-28' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) } }, 'People laughed and pale like bees had drowned today, leapt in me said let''s not feel. Silently the road listened to sing them too.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 8, 'Egrenbemas', ( 'Glass', 'Checinski' ), { ( 'Mureil', 'Postavsky' ), ( 'Hulst', 'Hoque' ), ( 'Liam', 'Lett' ), ( 'Tanhya', 'Schallenberg' ), ( 'Tori', 'Epperson' ), ( 'Tuhina', 'Bussewitz' ), ( 'Lurette', 'Hosneld' ), ( 'Igor', 'Ehningercuervo' ), ( 'Leola', 'Borel' ), ( 'Teetwo', 'Allaway' ) }, [ '+34 988 668 630', '+94 854 585 686', '+87 463 343 702', '+90 700 524 728', '+95 998 302 150', '+23 499 300 107', '+85 239 124 668', '+85 473 915 339', '+34 968 833 442', '+93 467 804 757' ], { 'pac.bascombe@gmail.com', 'livia.goold@yahoo.com', 'cathee.serour@gmail.com', 'phelia.frobisher@hotmail.com', 'gokulchandra.hodgson@hotmail.com', 'cami.geisler@mail.com', 'aile.schafer@hotmail.com', 'marget.wooff@yahoo.com', 'miwa.badza@outlook.com', 'hali.towaij@yahoo.com' }, { '+88 593 511 797' : 'Corbin Union', '+31 908 571 871' : 'Seifert Limited', '+84 358 974 577' : 'Stpierre Media', '+43 648 833 410' : 'Digiambattista College', '+87 519 918 774' : 'Buskard News', '+31 415 930 494' : 'Glasa Consulting', '+39 452 218 695' : 'Lagrandeur Channel', '+40 271 723 171' : 'Kalogerakos Insurance', '+19 632 774 647' : 'Veedell Factory', '+95 446 836 312' : 'Adamkowski Associates' }, '2005-11-11', { ( 'Gavin', 'Dovel' ) : '2012-05-28', ( '', '' ) : '2000-01-23', ( 'Stacia', 'Shukor' ) : '2005-05-12', ( 'Malcolm', 'Beech' ) : '2001-02-03', ( 'Warwick', 'Biel' ) : '2005-11-11', ( 'Glass', 'Checinski' ) : '2000-01-23', ( 'Ardys', 'Randall' ) : '2005-05-12', ( 'Vito', 'Gooley' ) : '2014-07-25', ( 'Dineke', 'Larwill' ) : '2004-12-03', ( 'Basheer', 'Haluk' ) : '2014-07-25' }, { '2010-04-05', '2000-01-23', '2014-07-25', '2005-11-11', '2012-05-28', '2001-02-03', '2005-05-12', '2001-01-10', '2004-12-03', '2006-01-06', '', '', '', '', '', '', '', '', '', '', '' }, [ '2000-01-23', '2006-01-06' ], { '2014-07-25' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2006-01-06' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2004-12-03' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2001-01-10' : { ( 'Mirilla', 'Canuel' ), ( 'Ailsun', 'Sawchuk' ), ( 'Darcy', 'Rutyna' ), ( 'Esmeralda', 'Manager' ), ( 'Four', 'Chavis' ), ( 'Sophie', 'Rezzik' ), ( 'Janice', 'Mcleod' ), ( 'Danne', 'Aggarwal' ), ( 'Kannan', 'Molochko' ), ( 'Maier', 'Pistilli' ) }, '2005-11-11' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2005-05-12' : { ( 'Kemal', 'Farrell' ), ( 'Marijo', 'Humenuk' ), ( 'Brett', 'Yokeley' ), ( 'Brittaney', 'Molnar' ), ( 'Herre', 'Hoffmann' ), ( 'Joby', 'Wolter' ), ( 'Willie', 'Gaither' ), ( 'Lyda', 'Thomaier' ), ( 'Hynda', 'Colgan' ), ( 'Beaumont', 'Presley' ) }, '2000-01-23' : { ( 'Mirilla', 'Canuel' ), ( 'Ailsun', 'Sawchuk' ), ( 'Darcy', 'Rutyna' ), ( 'Esmeralda', 'Manager' ), ( 'Four', 'Chavis' ), ( 'Sophie', 'Rezzik' ), ( 'Janice', 'Mcleod' ), ( 'Danne', 'Aggarwal' ), ( 'Kannan', 'Molochko' ), ( 'Maier', 'Pistilli' ) }, '2012-05-28' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2010-04-05' : { ( 'Mureil', 'Postavsky' ), ( 'Hulst', 'Hoque' ), ( 'Liam', 'Lett' ), ( 'Tanhya', 'Schallenberg' ), ( 'Tori', 'Epperson' ), ( 'Tuhina', 'Bussewitz' ), ( 'Lurette', 'Hosneld' ), ( 'Igor', 'Ehningercuervo' ), ( 'Leola', 'Borel' ), ( 'Teetwo', 'Allaway' ) }, '2001-02-03' : { ( 'Rolande', 'Darou' ), ( 'Abagail', 'Nock' ), ( 'Thia', 'Mayrstein' ), ( 'Data', 'Baines' ), ( 'Marjet', 'Hashimoto' ), ( 'Ge', 'Josiah' ), ( 'Lucy', 'Mcquaid' ), ( 'Ursula', 'Schmadtke' ), ( 'Alica', 'Bookings' ), ( 'Antonietta', 'Cheba' ) } }, 'How let himself tending towards this time, looking proudly and quiet voice would also left him. Them should live it does nothing but destitute. River laughed brightly and waters were accepted.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 9, 'Ararandieku', ( 'Basheer', 'Haluk' ), { ( 'Mirilla', 'Canuel' ), ( 'Ailsun', 'Sawchuk' ), ( 'Darcy', 'Rutyna' ), ( 'Esmeralda', 'Manager' ), ( 'Four', 'Chavis' ), ( 'Sophie', 'Rezzik' ), ( 'Janice', 'Mcleod' ), ( 'Danne', 'Aggarwal' ), ( 'Kannan', 'Molochko' ), ( 'Maier', 'Pistilli' ) }, [ '+32 903 806 828', '+94 479 124 861', '+77 213 767 230', '+63 959 670 962', '+60 806 939 704', '+79 221 991 429', '+76 963 721 276', '+86 861 293 272', '+89 782 315 239', '+78 528 378 858' ], { 'horatio.corner@gmail.com', 'dell.dubose@gmail.com', 'kessia.preville@live.com', 'colleen.baader@mail.com', 'vinod.weitz@outlook.com', 'rejeanne.trieu@gmail.com', 'alisun.rushing@yahoo.com', 'pammi.livingstone@mail.com', 'andromache.vinson@yahoo.com', 'geza.turkovic@hotmail.com' }, { '+16 649 131 387' : 'Wiederhold Network', '+40 813 557 626' : 'Mclean Society', '+23 683 527 226' : 'Whidden Services', '+80 828 225 301' : 'Manager Institute', '+34 445 945 602' : 'Mccormack News', '+31 500 521 747' : 'Reuss Society', '+77 530 890 221' : 'Intplan Fx', '+99 222 250 548' : 'Abel Trust', '+67 190 174 306' : 'Ebara Fund', '+51 585 592 300' : 'Howepatterson College' }, '2012-05-28', { ( 'Gavin', 'Dovel' ) : '2010-04-05', ( 'Glass', 'Checinski' ) : '2000-01-23', ( 'Ardys', 'Randall' ) : '2001-02-03', ( 'Dineke', 'Larwill' ) : '2005-11-11', ( 'Warwick', 'Biel' ) : '2012-05-28', ( 'Stacia', 'Shukor' ) : '2001-01-10', ( 'Vito', 'Gooley' ) : '2005-11-11', ( 'Malcolm', 'Beech' ) : '2006-01-06', ( '', '' ) : '2010-04-05', ( 'Basheer', 'Haluk' ) : '2014-07-25' }, { '2000-01-23', '2004-12-03', '2005-05-12', '2014-07-25', '2001-01-10', '2012-05-28', '2005-11-11', '2010-04-05', '2006-01-06', '2001-02-03', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2001-01-10' ], { '2012-05-28' : { ( 'Serena', 'Logue' ), ( 'Dino', 'Rabadi' ), ( 'Farzin', 'Fournier' ), ( 'Adara', 'Bello' ), ( 'Nelleke', 'Sabourin' ), ( 'Tommie', 'Gadher' ), ( 'Kaila', 'Xayaraj' ), ( 'Fifine', 'Broome' ), ( 'Arlyne', 'Tapner' ), ( 'Marjie', 'Ayaz' ) }, '2005-11-11' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2004-12-03' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2000-01-23' : { ( 'Rolande', 'Darou' ), ( 'Abagail', 'Nock' ), ( 'Thia', 'Mayrstein' ), ( 'Data', 'Baines' ), ( 'Marjet', 'Hashimoto' ), ( 'Ge', 'Josiah' ), ( 'Lucy', 'Mcquaid' ), ( 'Ursula', 'Schmadtke' ), ( 'Alica', 'Bookings' ), ( 'Antonietta', 'Cheba' ) }, '2001-02-03' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, '2001-01-10' : { ( 'Mureil', 'Postavsky' ), ( 'Hulst', 'Hoque' ), ( 'Liam', 'Lett' ), ( 'Tanhya', 'Schallenberg' ), ( 'Tori', 'Epperson' ), ( 'Tuhina', 'Bussewitz' ), ( 'Lurette', 'Hosneld' ), ( 'Igor', 'Ehningercuervo' ), ( 'Leola', 'Borel' ), ( 'Teetwo', 'Allaway' ) }, '2014-07-25' : { ( '', '' ), ( '', '' ) }, '2005-05-12' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2006-01-06' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2010-04-05' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) } }, 'Today as thought the things is in confirmation. Way different goal of its layers to destroy himself, nevertheless transformed was more a movement as true, thinking his business-deals with equanimity his path.' );
insert into TEST.COMPOUND ( Id, Location, Name, NameSet, PhoneList, EmailSet, CompanyMap, SimpleDate, SimpleDateMap, SimpleDateSet, SimpleDateList, NameSetMap, Text ) values ( 10, 'Iascher', ( 'Vito', 'Gooley' ), { ( 'Rolande', 'Darou' ), ( 'Abagail', 'Nock' ), ( 'Thia', 'Mayrstein' ), ( 'Data', 'Baines' ), ( 'Marjet', 'Hashimoto' ), ( 'Ge', 'Josiah' ), ( 'Lucy', 'Mcquaid' ), ( 'Ursula', 'Schmadtke' ), ( 'Alica', 'Bookings' ), ( 'Antonietta', 'Cheba' ) }, [ '+28 105 644 461', '+78 395 125 639', '+74 498 698 338', '+72 847 840 686', '+89 476 827 538', '+18 104 719 477', '+55 222 458 478', '+69 826 864 362', '+77 127 300 774', '+72 302 169 725' ], { 'beilul.hoctor@mail.com', 'berty.kavis@mail.com', 'theodosia.sherban@gmail.com', 'brandea.matsunaga@hotmail.com', 'kaylyn.gallman@hotmail.com', 'ariel.schadan@mail.com', 'diandra.isbister@outlook.com', 'maryjo.rummans@mail.com', 'nasser.braganza@live.com', 'dianemarie.alberse@yahoo.com' }, { '+24 864 114 245' : 'Mcfarland Foundation', '+77 196 573 122' : 'Laberge Associates', '+44 867 908 808' : 'Huboi Fund', '+77 789 736 602' : 'Syposz Logic', '+69 891 583 371' : 'Shaver Bank', '+72 393 376 889' : 'Pearcy Media', '+47 355 838 709' : 'Kyle Security', '+60 586 834 174' : 'Schroer Online', '+84 812 676 300' : 'Brearley Union', '+49 848 379 227' : 'Oran Network' }, '2005-11-11', { ( '', '' ) : '2005-05-12', ( 'Dineke', 'Larwill' ) : '2005-11-11', ( 'Malcolm', 'Beech' ) : '2005-05-12', ( 'Glass', 'Checinski' ) : '2012-05-28', ( 'Basheer', 'Haluk' ) : '2006-01-06', ( 'Vito', 'Gooley' ) : '2012-05-28', ( 'Ardys', 'Randall' ) : '2010-04-05', ( 'Gavin', 'Dovel' ) : '2000-01-23', ( 'Stacia', 'Shukor' ) : '2010-04-05', ( 'Warwick', 'Biel' ) : '2012-05-28' }, { '2010-04-05', '2000-01-23', '2001-02-03', '2012-05-28', '2001-01-10', '2014-07-25', '2005-11-11', '2006-01-06', '2005-05-12', '2004-12-03', '', '', '', '', '', '', '', '', '', '', '', '', '' }, [ '2005-11-11', '2006-01-06', '2006-01-06' ], { '2000-01-23' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, '2005-05-12' : { ( 'Jack', 'Harper' ), ( 'Victoria', 'Olsen' ) }, '2012-05-28' : { ( 'Serena', 'Logue' ), ( 'Dino', 'Rabadi' ), ( 'Farzin', 'Fournier' ), ( 'Adara', 'Bello' ), ( 'Nelleke', 'Sabourin' ), ( 'Tommie', 'Gadher' ), ( 'Kaila', 'Xayaraj' ), ( 'Fifine', 'Broome' ), ( 'Arlyne', 'Tapner' ), ( 'Marjie', 'Ayaz' ) }, '2010-04-05' : { ( 'Arlyne', 'Hagstrom' ), ( 'Theresina', 'Rodely' ), ( 'Farouk', 'Wolff' ), ( 'Kirbie', 'Ripley' ), ( 'Mary', 'Daigle' ), ( 'Joanna', 'Contomichalos' ), ( 'Cleo', 'Micklos' ), ( 'Tyronda', 'Vanderpol' ), ( 'Farid', 'Freire' ), ( 'Cissy', 'Snelgrove' ) }, '2006-01-06' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) }, '2001-02-03' : { ( 'Eachelle', 'Lott' ), ( 'Briney', 'Rau' ), ( 'Jerrine', 'Marcheck' ), ( 'Karleen', 'Nimmo' ), ( 'Shir', 'Parikh' ), ( 'Guanyun', 'Chalker' ), ( 'Teena', 'Hartsell' ), ( 'Pamelina', 'Sigut' ), ( 'Belicia', 'Graves' ), ( 'Allisan', 'Oyama' ) }, '2004-12-03' : { ( '', '' ), ( '', '' ) }, '2014-07-25' : { ( 'Serena', 'Logue' ), ( 'Dino', 'Rabadi' ), ( 'Farzin', 'Fournier' ), ( 'Adara', 'Bello' ), ( 'Nelleke', 'Sabourin' ), ( 'Tommie', 'Gadher' ), ( 'Kaila', 'Xayaraj' ), ( 'Fifine', 'Broome' ), ( 'Arlyne', 'Tapner' ), ( 'Marjie', 'Ayaz' ) }, '2005-11-11' : { ( 'Mirilla', 'Canuel' ), ( 'Ailsun', 'Sawchuk' ), ( 'Darcy', 'Rutyna' ), ( 'Esmeralda', 'Manager' ), ( 'Four', 'Chavis' ), ( 'Sophie', 'Rezzik' ), ( 'Janice', 'Mcleod' ), ( 'Danne', 'Aggarwal' ), ( 'Kannan', 'Molochko' ), ( 'Maier', 'Pistilli' ) }, '2001-01-10' : { ( 'Dona', 'Kuan' ), ( 'Ninno', 'Peptis' ), ( 'Briny', 'Carli' ), ( 'Griet', 'Antle' ), ( 'Woody', 'Neibauer' ), ( 'Alvira', 'Lowder' ), ( 'Joell', 'Captives' ), ( 'Aybars', 'Woodall' ), ( 'Celle', 'Administration' ), ( 'Dev', 'Camirand' ) } }, 'Failed to luxury scorned the clear-thinking spirit. Ferryman about I thank you my heart, language would walk the worldly and cheeks, ah most holy one in past seemed near it.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5, 'first', 1, ' This is the first text, with spaces ' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612, 'second', 2, 'This is the second text, with escaped characters ^~{}' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524, 'third', 3, 'This is the third text§with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( -7654305769731274948, c0759f24-1649-8708-841e-7975566360ce, 'fourth', 4, 'This is the fourth text§also with a new line' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 7580552654182497994, 505a5275-4d02-4288-04c1-a5f526429d27, 'Panton', 559, 'For that perfected ones not waste words, than could teach just woken up or third-hand information. One himself except where the golden cage, aren''t any different than learning this understand this.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 4364631576930780420, 1dc0f1d4-bdec-4b28-1882-0da250de4ee5, 'Jeavons', 18, 'With piled up in order to take his shadow, placed him I''m opening one his path towards perfection. Blind wild desire to walk had people can''t, by fasting nor young fish with all just listening. Previous lives of blessing spoke his small thing.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 6888597512791764242, 2d8e73e0-f6a1-4fa3-e84e-e83b6d8e618d, 'Schavo', 712, 'Weren''t you like foolishness but yet sir is better. Often and spoke for there aren''t capable of. Was I followed by fasting waiting thinking, close to you haven''t expected any longer.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 8557037996435737453, cd2e7a68-0002-47ac-3037-78e602b6817a, 'Colclasure', 494, 'Leapt in past when I''m recognising you at him. Even and dreary and other voices more, previous lives the service of other monks. Nodded his secret from long sequence of this. You''ll have you suffer I know what.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 8203071117888757541, 3d1470d7-a653-490c-2a36-24ff4d17874c, 'Snedeker', 994, 'For exalted the air and lived alone without substance, which more question in them suffering good journey. Understood that love still lacks completeness roundness oneness.' );
insert into TEST.VALUE ( Id, Uuid, Name, Integer, Text ) values ( 9187976295181524352, 9faaad75-4174-4d9e-8af9-84c51a6e1e3c, 'Buscarino', 466, 'Time was served food to provide him safe. Whenever it necessary was also grant it together with, lacked all goals there thus childlike people''s bread. Said if a who sought to beg, I''ve found a readiness of water said.' );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( d3bddc56-1653-452d-d690-f3f3d43b8a4b, 3344523601393165508, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 842c6800-a9e5-45f2-024a-28f610d23e89, -6907789044519798771, a9f0e61a-137d-86aa-9db5-3465e0801612 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 99771b34-a4f3-4c40-b74a-91f2b814f660, -5292141111288023615, dd5c8bf5-1558-ffcb-e500-7071908e9524 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( eb43672d-7305-4a18-2197-807a23ea9412, -5359923222225123686, 0883a652-0e6e-b6c9-304d-cfb71034d053 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 541eedb0-1ff3-491b-ab98-a7f0f4c296fd, 4364631576930780420, 9faaad75-4174-4d9e-8af9-84c51a6e1e3c );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 9ee000c6-0afa-48b6-d045-19d290c5a613, 8203071117888757541, 8b04d5e3-775d-298e-7845-5efc5ca404d5 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( ea24b008-221c-46dc-ba42-6c2c28b4d1c3, -7654305769731274948, dd5c8bf5-1558-ffcb-e500-7071908e9524 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 930ca845-ed5f-4362-95be-103317c24eab, 6888597512791764242, 3d1470d7-a653-490c-2a36-24ff4d17874c );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 1cd59245-e8a8-40c9-adf8-f78c1fd6a2cf, 8557037996435737453, 505a5275-4d02-4288-04c1-a5f526429d27 );
insert into TEST.VALUE_DATA ( Uuid, ValueId, ValueUuid ) values ( 93b25a41-552a-47a9-e78f-136544707484, -7654305769731274948, a9f0e61a-137d-86aa-9db5-3465e0801612 );
