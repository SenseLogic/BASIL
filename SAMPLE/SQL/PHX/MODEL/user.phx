// -- FUNCTIONS

function GetDatabaseUserArray(
    )
{
    var statement = GetDatabaseStatement( 'select Id, FirstName, LastName, Email, Pseudonym, Password, Phone, Street, City, Code, Region, Country, Company, ItIsAdministrator from USER' );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    return GetDatabaseObjectArray( statement );
}

// ~~

function GetDatabaseUserByEmailMap(
    )
{
    var statement = GetDatabaseStatement( 'select Id, FirstName, LastName, Email, Pseudonym, Password, Phone, Street, City, Code, Region, Country, Company, ItIsAdministrator from USER' );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    var user_map = [];

    while ( var user = statement.fetchObject() )
    {
        user_map[ user.Email ] = user;
    }

    return user_map;
}

// ~~

function GetDatabaseUserById(
    int id
    )
{
    var statement = GetDatabaseStatement( 'select Id, FirstName, LastName, Email, Pseudonym, Password, Phone, Street, City, Code, Region, Country, Company, ItIsAdministrator from USER where Id = ? limit 1' );
    statement.bindParam( 1, id, PDO::PARAM_INT );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    return GetDatabaseObject( statement );
}

// ~~

function AddDatabaseUser(
    string first_name,
    string last_name,
    string email,
    string pseudonym,
    string password,
    string phone,
    string street,
    string city,
    string code,
    string region,
    string country,
    string company,
    bool it_is_administrator
    )
{
    var statement = GetDatabaseStatement( 'insert into USER ( FirstName, LastName, Email, Pseudonym, Password, Phone, Street, City, Code, Region, Country, Company, ItIsAdministrator ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' );
    statement.bindParam( 1, first_name, PDO::PARAM_STR );
    statement.bindParam( 2, last_name, PDO::PARAM_STR );
    statement.bindParam( 3, email, PDO::PARAM_STR );
    statement.bindParam( 4, pseudonym, PDO::PARAM_STR );
    statement.bindParam( 5, password, PDO::PARAM_STR );
    statement.bindParam( 6, phone, PDO::PARAM_STR );
    statement.bindParam( 7, street, PDO::PARAM_STR );
    statement.bindParam( 8, city, PDO::PARAM_STR );
    statement.bindParam( 9, code, PDO::PARAM_STR );
    statement.bindParam( 10, region, PDO::PARAM_STR );
    statement.bindParam( 11, country, PDO::PARAM_STR );
    statement.bindParam( 12, company, PDO::PARAM_STR );
    statement.bindParam( 13, it_is_administrator, PDO::PARAM_BOOL );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    return GetDatabaseAddedId( statement );
}

// ~~

function SetDatabaseUser(
    int id,
    string first_name,
    string last_name,
    string email,
    string pseudonym,
    string password,
    string phone,
    string street,
    string city,
    string code,
    string region,
    string country,
    string company,
    bool it_is_administrator
    )
{
    var statement = GetDatabaseStatement( 'update USER set FirstName = ?, LastName = ?, Email = ?, Pseudonym = ?, Password = ?, Phone = ?, Street = ?, City = ?, Code = ?, Region = ?, Country = ?, Company = ?, ItIsAdministrator = ? where Id = ?' );
    statement.bindParam( 1, first_name, PDO::PARAM_STR );
    statement.bindParam( 2, last_name, PDO::PARAM_STR );
    statement.bindParam( 3, email, PDO::PARAM_STR );
    statement.bindParam( 4, pseudonym, PDO::PARAM_STR );
    statement.bindParam( 5, password, PDO::PARAM_STR );
    statement.bindParam( 6, phone, PDO::PARAM_STR );
    statement.bindParam( 7, street, PDO::PARAM_STR );
    statement.bindParam( 8, city, PDO::PARAM_STR );
    statement.bindParam( 9, code, PDO::PARAM_STR );
    statement.bindParam( 10, region, PDO::PARAM_STR );
    statement.bindParam( 11, country, PDO::PARAM_STR );
    statement.bindParam( 12, company, PDO::PARAM_STR );
    statement.bindParam( 13, it_is_administrator, PDO::PARAM_BOOL );
    statement.bindParam( 14, id, PDO::PARAM_INT );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }
}

// ~~

function RemoveDatabaseUserById(
    int id
    )
{
    var statement = GetDatabaseStatement( 'delete from USER where Id = ?' );
    statement.bindParam( 1, id, PDO::PARAM_INT );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }
}
