// -- FUNCTIONS

function GetDatabaseArticleArray(
    )
{
    var statement = GetDatabaseStatement( 'select `Id`, `SectionId`, `UserId`, `Slug`, `Title`, `Text`, `Image`, `Date` from `ARTICLE`' );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    var article_array = [];

    while ( var article = statement.fetchObject() )
    {
        article.Id = ( int )( article.Id );
        article.SectionId = ( int )( article.SectionId );
        article.UserId = ( int )( article.UserId );
        array_push( article_array, article );
    }

    return article_array;
}

// ~~

function GetSortedDatabaseArticleArray(
    )
{
    var statement = GetDatabaseStatement( 'select `Id`, `SectionId`, `UserId`, `Slug`, `Title`, `Text`, `Image`, `Date` from `ARTICLE` order by `UserId` asc, `SectionId` asc' );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    var article_array = [];

    while ( var article = statement.fetchObject() )
    {
        article.Id = ( int )( article.Id );
        article.SectionId = ( int )( article.SectionId );
        article.UserId = ( int )( article.UserId );
        array_push( article_array, article );
    }

    return article_array;
}

// ~~

function GetDatabaseArticleById(
    int id
    )
{
    var statement = GetDatabaseStatement( 'select `Id`, `SectionId`, `UserId`, `Slug`, `Title`, `Text`, `Image`, `Date` from `ARTICLE` where `Id` = ? limit 1' );
    statement.bindParam( 1, id, PDO::PARAM_INT );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    var article = statement.fetchObject();
    article.Id = ( int )( article.Id );
    article.SectionId = ( int )( article.SectionId );
    article.UserId = ( int )( article.UserId );

    return article;
}

// ~~

function AddDatabaseArticle(
    int section_id,
    int user_id,
    string slug,
    string title,
    string text,
    string image,
    string date
    )
{
    var statement = GetDatabaseStatement( 'insert into `ARTICLE` ( `SectionId`, `UserId`, `Slug`, `Title`, `Text`, `Image`, `Date` ) values ( ?, ?, ?, ?, ?, ?, ? )' );
    statement.bindParam( 1, section_id, PDO::PARAM_INT );
    statement.bindParam( 2, user_id, PDO::PARAM_INT );
    statement.bindParam( 3, slug, PDO::PARAM_STR );
    statement.bindParam( 4, title, PDO::PARAM_STR );
    statement.bindParam( 5, text, PDO::PARAM_STR );
    statement.bindParam( 6, image, PDO::PARAM_STR );
    statement.bindParam( 7, date, PDO::PARAM_STR );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    return GetDatabaseAddedId( statement );
}

// ~~

function PutDatabaseArticle(
    int section_id,
    int user_id,
    string slug,
    string title,
    string text,
    string image,
    string date
    )
{
    var statement = GetDatabaseStatement( 'replace into `ARTICLE` ( `SectionId`, `UserId`, `Slug`, `Title`, `Text`, `Image`, `Date` ) values ( ?, ?, ?, ?, ?, ?, ? )' );
    statement.bindParam( 1, section_id, PDO::PARAM_INT );
    statement.bindParam( 2, user_id, PDO::PARAM_INT );
    statement.bindParam( 3, slug, PDO::PARAM_STR );
    statement.bindParam( 4, title, PDO::PARAM_STR );
    statement.bindParam( 5, text, PDO::PARAM_STR );
    statement.bindParam( 6, image, PDO::PARAM_STR );
    statement.bindParam( 7, date, PDO::PARAM_STR );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    return GetDatabaseAddedId( statement );
}

// ~~

function SetDatabaseArticle(
    int id,
    int section_id,
    int user_id,
    string slug,
    string title,
    string text,
    string image,
    string date
    )
{
    var statement = GetDatabaseStatement( 'update `ARTICLE` set `SectionId` = ?, `UserId` = ?, `Slug` = ?, `Title` = ?, `Text` = ?, `Image` = ?, `Date` = ?,  where Id = ?' );
    statement.bindParam( 1, section_id, PDO::PARAM_INT );
    statement.bindParam( 2, user_id, PDO::PARAM_INT );
    statement.bindParam( 3, slug, PDO::PARAM_STR );
    statement.bindParam( 4, title, PDO::PARAM_STR );
    statement.bindParam( 5, text, PDO::PARAM_STR );
    statement.bindParam( 6, image, PDO::PARAM_STR );
    statement.bindParam( 7, date, PDO::PARAM_STR );
    statement.bindParam( 8, id, PDO::PARAM_INT );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }
}

// ~~

function RemoveDatabaseArticleById(
    int id
    )
{
    var statement = GetDatabaseStatement( 'delete from `ARTICLE` where `Id` = ?' );
    statement.bindParam( 1, id, PDO::PARAM_INT );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }
}
